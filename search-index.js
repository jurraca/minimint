var searchIndex = JSON.parse('{\
"configgen":{"doc":"","t":[3,4,13,13,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12],"n":["Cli","Command","Generate","VersionHash","augment_args","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","borrow","borrow","borrow_mut","borrow_mut","command","command","command_for_update","deref","deref","deref_mut","deref_mut","drop","drop","from","from","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","group_id","has_subcommand","init","init","into","into","main","try_from","try_from","try_into","try_into","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","vzip","vzip","base_port","bitcoind_rpc","dir_out_path","federation_name","max_denomination","num_nodes"],"q":["configgen","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","configgen::Command","","","","",""],"d":["","","Config generator for Fedimint Federation","Print the latest git commit hash this bin. was build with","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Base port","<code>bitcoind</code> json rpc endpoint","Directory to output all the generated config files","Federation name","Max denomination of notes issued by the federation (in …","Number of nodes in the federation"],"i":[0,0,7,7,4,4,7,7,4,7,4,7,4,4,4,4,7,4,7,4,7,4,7,4,7,4,7,4,7,4,7,4,7,0,4,7,4,7,4,7,4,7,4,7,4,7,13,13,13,13,13,13],"f":[0,0,0,0,[1,1],[1,1],[1,1],[1,1],[[]],[[]],[[]],[[]],[[],1],0,[[],1],[2],[2],[2],[2],[2],[2],[[]],[[]],[3,[[6,[4,5]]]],[3,[[6,[7,5]]]],[3,[[6,[4,5]]]],[3,[[6,[7,5]]]],[[],[[9,[8]]]],[10,11],[[],2],[[],2],[[]],[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[],12],[[],12],[[4,3],[[6,[5]]]],[[7,3],[[6,[5]]]],[[4,3],[[6,[5]]]],[[7,3],[[6,[5]]]],[[]],[[]],0,0,0,0,0,0],"p":[[3,"Command"],[15,"usize"],[3,"ArgMatches"],[3,"Cli"],[6,"Error"],[4,"Result"],[4,"Command"],[3,"Id"],[4,"Option"],[15,"str"],[15,"bool"],[3,"TypeId"],[13,"Generate"]]},\
"distributedgen":{"doc":"","t":[3,4,13,13,13,13,13,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,5,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12],"n":["Cli","Command","ConfigDecrypt","ConfigEncrypt","CreateCert","Run","VersionHash","augment_args","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","borrow","borrow","borrow_mut","borrow_mut","command","command","command_for_update","deref","deref","deref_mut","deref_mut","drop","drop","from","from","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","gen_tls","group_id","has_subcommand","init","init","into","into","main","parse_peer_params","run_dkg","salt_file_path_from_file_path","try_from","try_from","try_into","try_into","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","vzip","vzip","announce_address","base_port","bind_address","bitcoind_rpc","certs","dir_out_path","dir_out_path","federation_name","finality_delay","in_file","in_file","max_denomination","name","network","out_file","out_file","password","password","password","password","salt_file","salt_file"],"q":["distributedgen","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","distributedgen::Command","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","Creates a connection cert string that must be shared with …","All peers must run distributed key gen at the same time to …","Print the latest git commit hash this bin. was build with","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Our external address to announce to peers in our …","Our base port, ports may be used from base_port to …","Address we bind to for running key gen","<code>bitcoind</code> json rpc endpoint","Comma-separated list of connection certs from all peers …","Directory to output all the generated config files","Directory to output all the generated config files","Federation name, same for all peers","The number of confirmations a deposit transaction requires …","Encrypted config file","Plaintext config file","Max denomination of notes issued by the federation (in …","Our node name, must be unique among peers","The bitcoin network that fedimint will be running on","Plaintext config file output","Encrypted config file output","The password that encrypts the configs, will prompt if not …","The password that encrypts the configs, will prompt if not …","The password that encrypts the configs, will prompt if not …","The password that encrypts the configs, will prompt if not …","Encryption salt file, otherwise defaults to the salt file …","Encryption salt file, otherwise defaults to the salt file …"],"i":[0,0,7,7,7,7,7,4,4,7,7,4,7,4,7,4,4,4,4,7,4,7,4,7,4,7,4,7,4,7,0,4,7,4,7,4,7,0,0,0,0,4,7,4,7,4,7,4,7,4,7,4,7,27,27,28,28,28,27,28,28,28,29,30,28,27,28,29,30,27,28,29,30,29,30],"f":[0,0,0,0,0,0,0,[1,1],[1,1],[1,1],[1,1],[[]],[[]],[[]],[[]],[[],1],0,[[],1],[2],[2],[2],[2],[2],[2],[[]],[[]],[3,[[6,[4,5]]]],[3,[[6,[7,5]]]],[3,[[6,[4,5]]]],[3,[[6,[7,5]]]],[[8,9,10,9,11],9],[[],[[13,[12]]]],[14,15],[[],2],[[],2],[[]],[[]],[[]],[9,16],[[9,8,17,9,[18,[9]],9,19,20,21,22],[[24,[23]]]],[8,25],[[],6],[[],6],[[],6],[[],6],[[],26],[[],26],[[4,3],[[6,[5]]]],[[7,3],[[6,[5]]]],[[4,3],[[6,[5]]]],[[7,3],[[6,[5]]]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"p":[[3,"Command"],[15,"usize"],[3,"ArgMatches"],[3,"Cli"],[6,"Error"],[4,"Result"],[4,"Command"],[3,"Path"],[3,"String"],[15,"u16"],[3,"LessSafeKey"],[3,"Id"],[4,"Option"],[15,"str"],[15,"bool"],[3,"PeerServerParams"],[3,"Amount"],[3,"Vec"],[4,"Network"],[15,"u32"],[3,"PrivateKey"],[3,"TaskGroup"],[3,"ServerConfig"],[6,"Cancellable"],[3,"PathBuf"],[3,"TypeId"],[13,"CreateCert"],[13,"Run"],[13,"ConfigDecrypt"],[13,"ConfigEncrypt"]]},\
"fedimint_api":{"doc":"","t":[3,8,18,16,3,16,18,13,8,3,4,3,2,2,3,13,18,14,14,14,11,11,10,11,11,11,10,11,11,0,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,11,11,11,11,11,11,11,11,14,14,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,10,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,0,11,0,14,14,5,12,11,0,11,12,11,11,11,11,14,11,11,11,5,12,11,14,11,11,11,11,11,2,11,11,11,11,0,11,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,12,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,6,3,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,13,3,16,13,3,8,3,4,4,3,4,13,13,13,13,8,16,18,13,8,3,16,13,13,8,3,13,4,8,8,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,10,12,12,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,10,12,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,12,11,11,11,12,12,12,12,12,12,12,12,11,11,11,5,12,0,11,11,11,11,11,11,11,11,10,12,11,11,12,11,10,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,10,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,5,11,11,11,5,11,11,11,11,11,3,3,4,3,3,17,17,17,17,8,8,8,6,8,8,3,3,8,8,8,8,8,3,13,3,11,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,11,10,10,11,10,10,11,10,10,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,10,0,11,11,11,11,11,10,10,10,10,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,10,10,10,10,10,10,10,10,11,11,14,14,12,11,11,11,11,11,0,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,8,16,8,18,16,10,11,11,11,11,10,10,11,11,11,11,10,11,10,10,11,11,11,11,11,5,8,8,8,3,3,10,10,10,10,10,10,10,10,10,11,11,11,11,10,10,11,11,10,10,11,11,11,10,11,11,11,11,11,11,11,11,10,10,10,10,11,11,11,11,11,11,11,10,10,11,11,13,18,3,3,3,8,8,8,4,3,8,4,13,8,8,13,16,13,6,8,13,4,16,13,13,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,12,12,0,11,11,11,10,10,10,11,10,11,11,10,10,0,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,5,5,5,5,5,5,5,5,5,5,11,11,11,11,11,11,11,11,12,12,12,12,3,3,3,3,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,3,13,3,3,13,4,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,5,5,5,5,5,5,11,11,11,11,11,11,8,24,3,8,8,24,24,11,11,0,10,10,11,10,11,11,11,11,11,14,14,11,11,11,0,0,11,11,11,11,11,14,14,3,3,16,16,8,6,6,16,3,8,4,13,16,16,18,16,16,8,16,16,3,8,16,18,12,12,10,14,10,10,10,0,10,10,11,10,11,11,11,11,11,11,11,11,11,11,10,11,11,12,10,10,10,10,11,12,11,11,11,11,11,11,11,11,11,11,10,12,11,0,11,11,11,11,11,10,12,10,11,11,10,12,11,12,0,11,10,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,8,10,3,6,3,6,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,8,8,3,3,10,10,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,10,10,10,10,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,5,12,11,12,11,12,11,11,12,11,11,3,3,3,3,3,3,3,3,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,12,12,12,12,11,11,11,12,11,11,12,11,11,11,11,11,12,12,12,11,11,11,5,5,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,5,12,12,12,12,12,12,12,12,12,12,5,5,5,5,5,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Amount","BitcoinHash","DISPLAY_BACKWARD","Engine","Feerate","Inner","LEN","NotANumber","NumPeers","OutPoint","ParseAmountError","PeerId","ServerModulePlugin","Tiered","TransactionId","WrongBitcoinAmount","ZERO","__api_endpoint","_dyn_newtype_define_inner","_dyn_newtype_impl_deref_mut","add","add_assign","all_zeros","all_zeros","as_bits","as_hash","as_inner","as_inner","as_ref","backup","base32_len","bitcoin_rpc","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","calculate_fee","cancellable","check_base32","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","config","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","core","db","degree","deref","deserialize","deserialize","deserialize","deserialize","deserialize","div","dyn_newtype_define","dyn_newtype_impl_dyn_clone_passhthrough","encode_hex","encode_hex_upper","encoding","engine","engine","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_byte_iter","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_engine","from_engine","from_hash","from_inner","from_inner","from_msats","from_sats","from_slice","from_slice","from_slice_delegated","from_str","from_str","from_str_in","hash","hash","hash","hash","hash","hash","index","into","into","into","into","into","into","into_inner","into_inner","macros","max_evil","module","module_dyn_newtype_impl_encode_decode","module_plugin_trait_define","msats","msats","mul","net","one_honest","out_idx","partial_cmp","partial_cmp","partial_cmp","partial_cmp","plugin_types_trait_impl","provide","rem","rem_assign","sats","sats_per_kvb","saturating_sub","serde_module_encoding_wrapper","serialize","serialize","serialize","serialize","serialize","server","source","sub","sub_assign","sum","task","threshold","tiered","tiered_multi","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_hex","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_usize","total","try_as_bits","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","txid","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","write_base32","BackupRequest","SignedBackupRequest","borrow","borrow","borrow_mut","borrow_mut","consensus_decode","consensus_encode","consensus_encode_dyn","deserialize","deserialize","fmt","fmt","from","from","from_bytes","hash","id","into","into","payload","request","serialize","serialize","sign","signature","timestamp","to_bytes","try_from","try_from","try_into","try_into","type_id","type_id","verify_valid","vzip","vzip","Cancellable","Cancelled","borrow","borrow_mut","fmt","fmt","from","into","provide","to_string","try_from","try_into","type_id","vzip","BitcoindRpcCfg","ClientConfig","ClientModuleConfig","Commit","ConfigGenParams","Consensus","DistributedGen","Dkg","DkgGroup","DkgKeys","DkgMessage","DkgPeerMsg","DkgRunner","DkgStep","Extract","G1","G2","HashedCommit","ISupportedDkgMessage","Local","MODULE_NAME","Messages","ModuleConfigGenParams","Node","Private","PublicKey","Result","SGroup","ServerModuleConfig","Share","SupportedDkgMessage","TypedClientModuleConfig","TypedServerModuleConfig","add","attach","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","broadcast","btc_rpc_address","btc_rpc_pass","btc_rpc_user","cast","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","commitments","consensus","default","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize2","dkg_config","epoch_pk","eq","eq","eq","eq","eq","f1_poly","f2_poly","federation_name","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_msg","from_msg","from_msg","from_parts","gen_g","gen_h","get","get_module","hash","hash","hashed_commits","into","into","into","into","into","into","into","into","into","into","into","into","into","local","modules","multi","name","new","new","new","nodes","our_id","our_id","peers","peers","pk_shares","private","public_key_set","run","run_g1","run_g2","scalar","secret_key_share","serde_commit","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize2","sk_shares","step","tbs","threshold","threshold_crypto","to_client_config","to_erased","to_erased","to_msg","to_msg","to_msg","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_parts","to_typed","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","url","validate_config","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","Wrap","borrow","borrow_mut","deserialize","deserialize","from","into","serialize","serialize","try_from","try_into","type_id","vzip","ConsensusItem","Decoder","FinalizationError","Input","KeyPair","MODULE_KEY_GLOBAL","MODULE_KEY_LN","MODULE_KEY_MINT","MODULE_KEY_WALLET","ModuleConsensusItem","ModuleDecode","ModuleInput","ModuleKey","ModuleOutput","ModuleOutputOutcome","Output","OutputOutcome","PluginConsensusItem","PluginDecode","PluginInput","PluginOutput","PluginOutputOutcome","Signature","SomethingWentWrong","Transaction","add_xonly_tweak","as_any","as_any","as_any","as_any","as_mut_ptr","as_ptr","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","client","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","dangerous_assume_tweaked","decode_consensus_item","decode_consensus_item","decode_consensus_item","decode_input","decode_input","decode_input","decode_output","decode_output","decode_output","decode_output_outcome","decode_output_outcome","decode_output_outcome","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","display_secret","dyn_hash","dyn_hash","dyn_hash","dyn_hash","encode","eq","eq","eq","eq","eq","erased_eq","erased_eq","erased_eq","erased_eq","erased_eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_seckey_slice","from_seckey_str","from_seckey_str_global","from_secret_key","from_str","from_typed","hash","hash","hash","hash","hash","inputs","into","into","into","into","into","into","into","into","into","module_key","module_key","module_key","module_key","module_key","module_key","module_key","module_key","new","new_global","newtype_impl_display_passthrough","newtype_impl_eq_passthrough","outputs","partial_cmp","public_key","secret_bytes","secret_key","serialize","server","sign_schnorr","signature","tap_tweak","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tweak_add_assign","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","x_only_public_key","ClientModule","ClientModulePlugin","Decoder","IClientModule","MODULE_KEY","Module","as_any","borrow","borrow_mut","clone","clone_into","decoder","decoder","deref","fmt","from","from","input_amount","into","module_key","output_amount","to_owned","try_from","try_into","type_id","vzip","module_decode_key_prefixed_decodable","IServerModule","ModuleVerificationCache","PluginVerificationCache","ServerModule","VerificationCache","api_base_name","api_endpoints","apply_input","apply_output","as_any","as_any","audit","await_consensus_proposal","begin_consensus_epoch","borrow","borrow","borrow_mut","borrow_mut","build_verification_cache","clone","clone","clone_into","consensus_proposal","decoder","deref","deref","deref_mut","end_consensus_epoch","fmt","fmt","from","from","from","from","into","into","module_key","module_key","module_key","output_status","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","validate_input","validate_output","vzip","vzip","AltTest","DB_PREFIX","Database","DatabaseDeleteOperation","DatabaseInsertOperation","DatabaseKey","DatabaseKeyPrefix","DatabaseKeyPrefixConst","DatabaseOperation","DatabaseTransaction","DatabaseValue","DecodingError","Delete","IDatabase","IDatabaseTransaction","Insert","Key","Other","PrefixIter","SerializableDatabaseValue","Test","TestDbKeyPrefix","Value","WrongLength","WrongPrefix","begin_transaction","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","commit_tx","commit_tx","default","default","deref","deref","deref_mut","expect_write_conflict","find_by_prefix","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_bytes","from_bytes","get_value","insert_entry","insert_new_entry","into","into","into","into","into","into","key","key","mem_impl","new","other","provide","raw_find_by_prefix","raw_get_bytes","raw_insert_bytes","raw_remove_by_prefix","raw_remove_entry","remove_by_prefix","remove_entry","rollback_tx_to_savepoint","set_tx_savepoint","tests","to_bytes","to_bytes","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","value","verify_commit","verify_find_by_prefix","verify_insert_elements","verify_phantom_entry","verify_prevent_dirty_reads","verify_prevent_nonrepeatable_reads","verify_read_own_writes","verify_remove_existing","verify_remove_nonexisting","verify_rollback_to_savepoint","vzip","vzip","vzip","vzip","vzip","vzip","wrong_length","wrong_prefix","expected","expected","found","found","DummyError","MemDatabase","MemDbIter","MemTransaction","begin_transaction","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","commit_tx","data","data","db","default","dump_db","eq","fmt","fmt","fmt","from","from","from","from","into","into","into","into","into_iter","new","next","num_pending_operations","num_savepoint_operations","operations","raw_find_by_prefix","raw_get_bytes","raw_insert_bytes","raw_remove_entry","rollback_tx_to_savepoint","savepoint","set_tx_savepoint","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","tx_data","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","AltDbPrefixTestPrefix","AltTest","AltTestKey","DbPrefixTestPrefix","Test","TestDbKeyPrefix","TestKey","TestVal","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","eq","expect_write_conflict","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","into","into","into","into","into","into","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","verify_commit","verify_find_by_prefix","verify_insert_elements","verify_phantom_entry","verify_prevent_dirty_reads","verify_prevent_nonrepeatable_reads","verify_read_own_writes","verify_remove_existing","verify_remove_nonexisting","verify_rollback_to_savepoint","vzip","vzip","vzip","vzip","vzip","vzip","Decodable","Decodable","DecodeError","DynEncodable","Encodable","Encodable","UnzipConsensus","borrow","borrow_mut","btc","consensus_decode","consensus_encode","consensus_encode","consensus_encode_dyn","fmt","fmt","from","from_err","from_str","impl_encode_decode_num","impl_encode_decode_tuple","into","new_custom","provide","secp256k1","tbs","to_string","try_from","try_into","type_id","vzip","impl_encode_decode_bridge","impl_external_encode_bls","ApiEndpoint","ApiError","ConsensusItem","Decoder","FederationModuleConfigGen","HandlerFn","HandlerFnReturn","Input","InputMeta","IntoModuleError","ModuleError","Other","Output","OutputOutcome","PATH","Param","Response","ServerModulePlugin","State","Target","TransactionItemAmount","TypedApiEndpoint","VerificationCache","ZERO","amount","amount","api_base_name","api_endpoint","api_endpoints","apply_input","apply_output","audit","audit","await_consensus_proposal","bad_request","begin_consensus_epoch","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_verification_cache","clone","clone_into","code","consensus_proposal","decoder","distributed_gen","end_consensus_epoch","eq","fee","fmt","fmt","fmt","fmt","from","from","from","from","from","from","handle","handler","hash","interconnect","into","into","into","into","into","into_module_error_other","message","module_key","new","not_found","output_status","path","provide","puk_keys","registry","source","to_client_config","to_owned","to_string","trusted_dealer_gen","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","validate_config","validate_input","validate_output","vzip","vzip","vzip","vzip","vzip","Audit","AuditItem","add_items","borrow","borrow","borrow_mut","borrow_mut","default","fmt","fmt","from","from","into","into","items","milli_sat","name","sum","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","ModuleInterconect","call","ModuleDecoderRegistry","ModuleKey","ModuleRegistry","ServerModuleRegistry","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","decoder","decoders","decoders","default","default","fmt","fmt","from","from","into","into","module","modules","new","register","register","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","peers","IMuxPeerConnections","IPeerConnections","MuxPeerConnections","PeerConnections","ban_peer","ban_peer","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref_mut","fake","from","from","into","into","into_dyn","into_dyn","receive","receive","send","send","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","FakePeerConnections","ban_peer","borrow","borrow_mut","from","into","make_fake_peer_connection","peer_id","receive","rx","send","task_handle","try_from","try_into","tx","type_id","vzip","Elapsed","RwLock","RwLockReadGuard","RwLockWriteGuard","TaskGroup","TaskGroupInner","TaskHandle","TaskPanicGuard","block_in_place","blocking_read","blocking_write","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c","channel_penalty_msat","clone","clone","clone_into","clone_into","completed","const_new","const_with_max_readers","data","data","default","default","default","deref","deref","deref_mut","downgrade","drop","drop","drop","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","get_mut","imp","inner","inner","inner","install_kill_handler","into","into","into","into","into","into","into","into","into_inner","into_mapped","is_shutting_down","is_shutting_down","is_shutting_down","join","join_all","make_handle","make_shutdown_rx","make_subgroup","map","map","marker","marker","mr","name","new","new","on_shutdown","on_shutdown","payment_path_failed","payment_path_successful","permits_acquired","probe_failed","probe_successful","provide","read","read_owned","s","s","s","shutdown","shutdown","shutdown_join_all","sleep","sleep_until","spawn","spawn_local","timeout","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_map","try_map","try_read","try_read_owned","try_write","try_write_owned","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_max_readers","write","write_owned","RwLock","RwLockReadGuard","RwLockWriteGuard","block_in_place","c","data","data","marker","marker","mr","permits_acquired","s","s","s","sleep","sleep_until","spawn","spawn_local","timeout","InvalidAmountTierError","Tiered","as_map","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","consensus_decode","consensus_encode","consensus_encode_dyn","default","deserialize","deserialize","entry","eq","eq","fmt","fmt","fmt","from","from","from_bytes","from_iter","get","get_mut","get_mut_or_default","hash","hash","insert","into","into","iter","partial_cmp","serialize","serialize","structural_eq","tier","tiers","to_bytes","to_owned","to_owned","to_public","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","TieredMulti","TieredMultiZip","_pd","borrow","borrow","borrow_mut","borrow_mut","check_tiers","clone","clone_into","consensus_decode","consensus_encode","consensus_encode_dyn","default","deserialize","eq","extend","fmt","from","from","from_bytes","from_iter","get","get_mut","hash","into","into","into_iter","into_iter","into_iter_items","is_empty","item_count","iter_items","iter_tiers","iters","map","new","new","next","represent_amount","select_coins","serialize","structural_eq","tier_count","tiers","to_bytes","to_owned","total_amount","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip"],"q":["fedimint_apifedimint_api::backup","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_api::cancellable","","","","","","","","","","","","","","fedimint_api::configfedimint_api::config::serde_commit","","","","","","","","","","","","","fedimint_api::corefedimint_api::core::client","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_api::core::encode","fedimint_api::core::server","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_api::db","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_api::db::DecodingError","","","","fedimint_api::db::mem_impl","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_api::db::tests","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_api::encoding","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_api::encoding::btc","fedimint_api::encoding::tbs","fedimint_api::module","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_api::module::audit","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_api::module::interconnect","","fedimint_api::module::registry","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_api::net","fedimint_api::net::peers","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_api::net::peers::fake","","","","","","","","","","","","","","","","","fedimint_api::task","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_api::task::imp","","","","","","","","","","","","","","","","","","","fedimint_api::tiered","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_api::tiered_multi","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Represents an amount of BTC inside the system. The base …","Trait which applies to hashes of all types.","Flag indicating whether user-visible serializations of …","A hashing engine which bytes can be serialized into. It is …","","The byte array that represents the hash internally.","Length of the hash, in bytes.","","for consensus-related calculations given the number of …","","","","","","A transaction id for peg-ins, peg-outs and reissuances","","","Example","","","","","Returns an all zero hash.","","","Converts this type into the inner hash type.","Unwraps the hash and returns a reference to the underlying …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fedimint Core API (common) module interface","","Degree of a underlying polynomial to require <code>threshold</code> …","","","","","","","","Define “dyn newtype” (a newtype over <code>dyn Trait</code>)","Implement <code>Clone</code> on a “dyn newtype”","","","This module defines a binary encoding interface which is …","Constructs a new engine.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Produces a hash from the current state of a given engine.","","Creates this type from the inner hash type.","Constructs a hash from the underlying byte array.","","","","Copies a byte slice into a hash object.","","","","","","Hashes some bytes.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Unwraps the hash and returns the underlying byte array.","","","number of peers that can be evil without disrupting the …","","Implement <code>Encodable</code> and <code>Decodable</code> for a “module dyn …","Define a “plugin” trait","Shorthand for <code>Amount::from_msats</code>","","","","number of peers to select such that one is honest (under …","","","","","","Implements the <code>Plugin*</code> traits for all associated types of …","","","","Shorthand for <code>Amount::from_sats</code>","","","Creates a struct that can be used to make our …","","","","","","","","","","","","number of peers required for a signature","","","","","","","","Outputs the hash in hexadecimal form.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Operation that can potentially get cancelled returning no …","An error used as a “cancelled” marker in <code>Cancellable</code>.","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","Total client config","Config for the client-side of a particular Federation …","","Global Fedimint configuration generation settings passed …","","","","Defines a group (e.g. G1 or G2) that we can generate keys …","","","Things that a <code>distributed_gen</code> config can send between peers","","","","","","","Supported (by Fedimint’s code) <code>DkgMessage&lt;T&gt;</code> types","","","","","","","","","","Config for the server-side of a particular Federation …","","<code>enum</code> version of <code>SupportedDkgMessage</code>","","","Create another DKG with <code>threshold</code> signatures required","Add params for a module","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Get a second generator by hashing the first one to the …","Retrieve a typed config generation parameters for a module","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Create multiple DKGs with the same <code>threshold</code> signatures …","","Creates the DKG and the first step of the algorithm","Create a single DKG with <code>threshold</code> signatures required","","","","","","","","","","Runs the DKG algorithms with our peers","Create keys from G1 (48B keys, 96B messages) used in …","Create keys from G2 (96B keys, 48B messages) used in <code>tbs</code>","PeerIds are offset by 1, since evaluating a poly at 0 …","","Handling the Group serialization with a wrapper","","","","","","","","","","","Runs a single step of the DKG algorithm, processing a <code>msg</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","An owned, immutable output of a <code>Transaction</code> before it was …","Decoder for module associated types","","An owned, immutable input to a <code>Transaction</code>","Opaque data structure that holds a keypair consisting of a …","","","","Temporary constant for the modules we already have","","","Something that can be an <code>Input</code> in a <code>Transaction</code>","A module key identifing a module","Something that can be an <code>Output</code> in a <code>Transaction</code>","","An owned, immutable output of a <code>Transaction</code>","An owned, immutable output of a <code>Transaction</code> before it was …","","Module Decoder trait","","","","","","Transaction that was already signed","Tweaks a keypair by first converting the public key to an …","","","","","Obtains a raw mutable pointer suitable for use with FFI …","Obtains a raw const pointer suitable for use with FFI …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Decode <code>ConsensusItem</code> compatible with this module, after …","Decode <code>ConsensusItem</code> compatible with this module, after …","","Decode <code>Input</code> compatible with this module, after the module …","Decode <code>Input</code> compatible with this module, after the module …","","Decode <code>Output</code> compatible with this module, after the …","Decode <code>Output</code> compatible with this module, after the …","","Decode <code>OutputOutcome</code> compatible with this module, after …","Decode <code>OutputOutcome</code> compatible with this module, after …","","","","","","","","","","","","Formats the explicit byte value of the secret key kept …","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Creates a <code>KeyPair</code> directly from a secret key slice.","Creates a <code>KeyPair</code> directly from a secret key string.","Creates a <code>KeyPair</code> directly from a secret key string and …","Creates a <code>KeyPair</code> directly from a Secp256k1 secret key.","","Creates a static, type-erased decoder. Only call this a …","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Module key","Module key","","","","","Generates a new random secret key.","Generates a new random secret key using the global …","Implementes the <code>Display</code> trait for dyn newtypes whose …","","","","Returns the <code>PublicKey</code> for this <code>KeyPair</code>.","Returns the secret bytes for this key pair.","Returns the <code>SecretKey</code> for this <code>KeyPair</code>.","","Fedimint Core Server module interface","Constructs an schnorr signature for <code>msg</code> using the global …","","Tweaks private and public keys within an untweaked <code>KeyPair</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Tweaks a keypair by adding the given tweak to the secret …","","","","","","","","","","","","","","","","","","","Returns the <code>XOnlyPublicKey</code> (and it’s <code>Parity</code>) for this …","","","","","","","","","","","","Return the type-erased decoder of the module","","","","Returns the argument unchanged.","","Returns the amount represented by the input and the fee …","Calls <code>U::from(self)</code>.","","Returns the amount represented by the output and the fee …","","","","","","","Backend side module interface","","","","","Defines the prefix for API endpoints defined by the module.","Returns a list of custom API endpoints defined by the …","Try to spend a transaction input. On success all necessary …","Try to create an output (e.g. issue coins, peg-out BTC, …","","","Queries the database and returns all assets and …","Blocks until a new <code>consensus_proposal</code> is available.","This function is called once before transaction processing …","","","","","Some modules may have slow to verify inputs that would …","","","","This module’s contribution to the next consensus proposal","Returns the decoder belonging to the server module","","","","This function is called once all transactions have been …","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Retrieve the current status of the output. Depending on …","","","","","","","","Validate a transaction input before submitting it to the …","Validate a transaction output before submitting it to the …","","","","","A handle to a type-erased database implementation","","","","","","","A handle to a type-erased database implementation","","","","","Fedimint requires that the database implementation …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Default implementation is a combination of …","","","","","Create a savepoint during the transaction that can be …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Data which can be encoded in a consensus-consistent way","","","Object-safe trait for things that can encode themselves","Data which can be encoded in a consensus-consistent way","","","","","","Decode an object with a well-defined format","Encode an object with a well-defined format. Returns the …","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Definition of an API endpoint defined by a module <code>M</code>.","","","","","","","","","Extension trait with a function to map <code>Result</code>s used by …","","","","","example: /transaction","","","","","","Information about the amount represented by an input or …","","","","","","Defines the prefix for API endpoints defined by the module.","Example","Returns a list of custom API endpoints defined by the …","Try to spend a transaction input. On success all necessary …","Try to create an output (e.g. issue coins, peg-out BTC, …","","Queries the database and returns all assets and …","Blocks until a new <code>consensus_proposal</code> is available.","","This function is called once before transaction processing …","","","","","","","","","","","Some modules may have slow to verify inputs that would …","","","","This module’s contribution to the next consensus proposal","","","This function is called once all transactions have been …","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Handler for the API call that takes the following …","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Retrieve the current status of the output. Depending on …","Path under which the API endpoint can be reached. It …","","","","","","","","","","","","","","","","","","","","","","","","","Validate a transaction input before submitting it to the …","Validate a transaction output before submitting it to the …","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Provides an interface to call APIs of other modules","Simulates a call to an API endpoint of another module. …","Collection of decoders belonging to modules, typically …","Fedimint module identifier","","Collection of server modules","","","","","","","","","Return the decoder belonging to the module identified by …","Generate a <code>ModuleDecoderRegistry</code> from this <code>ModuleRegistry</code>","Generate a <code>ModuleDecoderRegistry</code> from this <code>ModuleRegistry</code>","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Return the server module belonging to the module …","Return an iterator over all modules","Create a <code>ModuleDecoderRegistry</code> from decoders","Add a module to the registry","Add a module to the registry","","","","","","","","","","","","Like <code>IPeerConnections</code> but with an ability to handle …","Connection manager that tries to keep connections open to …","Owned <code>MuxPeerConnections</code> trait object type","Owned <code>PeerConnections</code> trait object type","Removes a peer connection in case of misbehavior","Removes a peer connection in case of misbehavior","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Converts the struct to a <code>PeerConnection</code> trait object","Converts the struct to a <code>PeerConnection</code> trait object","Await receipt of a message from any connected peer.","Await receipt of a message from any connected peer.","Send a message to a specific peer.","Send a message to a specific destination at specific peer.","","","","","","","","","","","Removes a peer connection in case of misbehavior","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Create a fake link between <code>peer1</code> and <code>peer2</code> for test …","","","","","","","","","","","","An asynchronous reader-writer lock.","RAII structure used to release the shared read access of a …","RAII structure used to release the exclusive write access …","A group of task working together","","","","","Blockingly locks this <code>RwLock</code> with shared read access.","Blockingly locks this <code>RwLock</code> with exclusive write access.","","","","","","","","","","","","","","","","","","","","","","","Did the future completed successfully (no panic)","Creates a new instance of an <code>RwLock&lt;T&gt;</code> which is unlocked.","Creates a new instance of an <code>RwLock&lt;T&gt;</code> which is unlocked …","","","","","","","","","Atomically downgrades a write lock into a read lock …","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns a mutable reference to the underlying data.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes the lock, returning the underlying data.","Converts this <code>RwLockWriteGuard</code> into an …","","Is task group shutting down?","Was the shutdown requested, either externally or due to …","","","","Make a <code>oneshot::Receiver</code> that will fire on shutdown","Create a sub-group","Makes a new <code>RwLockReadGuard</code> for a component of the locked …","Makes a new <code>RwLockMappedWriteGuard</code> for a component of the …","","","","","","Creates a new instance of an <code>RwLock&lt;T&gt;</code> which is unlocked.","","","","","","","","","Locks this <code>RwLock</code> with shared read access, causing the …","Locks this <code>RwLock</code> with shared read access, causing the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Attempts to make a new <code>RwLockReadGuard</code> for a component of …","Attempts to make  a new <code>RwLockMappedWriteGuard</code> for a …","Attempts to acquire this <code>RwLock</code> with shared read access.","Attempts to acquire this <code>RwLock</code> with shared read access.","Attempts to acquire this <code>RwLock</code> with exclusive write …","Attempts to acquire this <code>RwLock</code> with exclusive write …","","","","","","","","","","","","","","","","","Creates a new instance of an <code>RwLock&lt;T&gt;</code> which is unlocked …","Locks this <code>RwLock</code> with exclusive write access, causing the …","Locks this <code>RwLock</code> with exclusive write access, causing the …","An asynchronous reader-writer lock.","RAII structure used to release the shared read access of a …","RAII structure used to release the exclusive write access …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Returns a reference to the key of the specified tier","","","","","","","","","","","","","","","Represents coins of different denominations.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Creates a new MultiZip Iterator from <code>Coins</code> iterators. …","","","Determines the denominations to use when representing an …","Select coins with total amount of <em>at least</em> <code>amount</code>. If more …","","","","","","","","","","","","","","",""],"i":[0,0,173,173,0,173,173,24,0,0,0,0,0,0,0,24,1,0,0,0,1,1,173,2,2,2,173,2,2,0,2,0,2,2,13,1,14,24,6,2,13,1,14,24,6,6,0,2,2,13,1,14,6,2,13,1,14,6,2,13,1,6,0,2,13,1,14,6,2,13,1,14,6,2,13,1,14,6,0,0,174,2,2,13,1,14,6,1,0,0,2,2,0,173,2,2,13,1,14,6,2,2,2,13,13,1,1,14,14,24,24,6,2,2,13,13,1,1,14,24,24,24,6,2,2,13,1,14,6,173,2,2,173,2,1,1,173,2,2,2,1,1,173,2,13,1,14,6,2,2,13,1,14,24,6,173,2,0,174,0,0,0,0,1,1,0,174,14,2,13,1,6,0,24,1,1,0,6,1,0,2,13,1,14,6,0,24,1,1,1,0,174,0,0,2,13,1,14,6,2,2,13,1,14,6,2,13,1,14,24,13,174,2,2,13,1,14,24,6,2,13,1,14,24,6,14,2,13,1,14,24,6,2,13,1,14,24,6,2,0,0,43,44,43,44,43,43,43,43,44,43,44,43,44,43,43,43,43,44,43,44,43,44,43,44,43,43,43,44,43,44,43,44,44,43,44,0,0,49,49,49,49,49,49,49,49,49,49,49,49,0,0,0,55,0,78,62,0,0,0,0,0,0,0,55,63,63,55,0,78,52,56,0,0,78,62,56,0,0,55,0,0,0,50,51,54,50,59,60,51,57,61,62,63,56,65,55,66,54,50,59,60,51,57,61,62,63,56,65,55,66,54,66,66,66,57,59,60,51,57,61,62,63,56,65,55,66,59,60,51,57,61,62,63,56,65,55,66,54,61,51,59,60,57,61,62,63,55,66,175,50,60,59,60,57,61,55,54,54,60,59,60,51,57,61,62,63,56,65,55,66,54,50,59,60,51,57,57,61,61,62,63,56,65,55,66,176,55,55,78,54,54,51,60,54,59,54,54,50,59,60,51,57,61,62,63,56,65,55,66,61,60,50,59,54,50,51,60,54,50,54,50,54,61,65,50,50,50,0,65,0,59,60,57,61,62,63,55,66,175,54,54,65,54,65,78,78,58,176,55,55,59,60,51,57,61,62,63,56,65,55,66,78,61,54,50,59,60,51,57,61,62,63,56,65,55,66,54,50,59,60,51,57,61,62,63,56,65,55,66,54,50,59,60,51,57,61,62,63,56,65,55,66,59,78,54,50,59,60,51,57,61,62,63,56,65,55,66,0,79,79,0,79,79,79,0,79,79,79,79,79,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,177,0,45,178,179,180,181,45,45,177,45,87,83,84,85,86,88,89,177,45,87,83,84,85,86,88,89,0,178,179,180,181,45,87,83,84,85,86,45,87,83,84,85,86,45,45,83,84,85,86,88,89,45,83,84,85,86,88,89,45,83,84,85,86,88,89,45,182,183,87,182,183,87,182,183,87,182,183,87,87,83,84,85,86,83,84,85,86,45,45,178,179,180,181,0,45,83,84,85,86,178,179,180,181,0,45,87,83,83,84,84,85,85,86,86,177,45,45,87,83,83,84,84,85,85,86,86,88,89,45,83,84,85,86,45,45,45,45,45,87,45,83,84,85,86,89,177,45,87,83,84,85,86,88,89,178,179,180,181,184,185,186,187,45,45,0,0,89,45,45,45,45,45,0,45,89,45,45,83,84,85,86,45,87,83,84,85,86,83,84,85,86,177,45,87,83,84,85,86,88,89,177,45,87,83,84,85,86,88,89,45,177,45,87,83,84,85,86,88,89,177,45,87,83,84,85,86,88,89,45,0,0,188,0,188,188,189,99,99,99,99,189,188,99,99,99,99,188,99,189,188,99,99,99,99,99,0,0,0,0,0,0,190,190,190,190,191,190,190,190,190,105,101,105,101,190,191,101,101,190,190,105,101,105,190,105,101,105,105,101,101,105,101,191,192,190,190,101,105,101,105,101,105,101,190,190,105,101,122,193,0,0,0,0,0,0,0,0,0,0,114,0,0,114,193,29,0,0,122,0,193,29,29,194,104,112,113,114,111,29,104,112,113,114,111,29,111,111,115,104,112,113,104,111,104,0,104,112,113,114,111,29,29,104,112,113,114,111,111,29,195,196,104,104,104,104,112,113,114,111,29,112,113,0,104,29,29,115,115,115,115,115,104,104,115,115,0,197,198,111,29,104,112,113,114,111,29,104,112,113,114,111,29,104,112,113,114,111,29,112,0,0,0,0,0,0,0,0,0,0,104,112,113,114,111,29,29,29,199,200,199,200,0,0,0,0,118,121,118,119,120,121,118,119,120,119,121,118,119,118,118,120,118,119,120,121,118,119,120,121,118,119,120,121,118,121,119,119,119,119,119,119,119,119,119,119,121,118,119,120,121,118,119,120,119,121,118,119,120,121,118,119,120,0,122,0,0,122,0,0,0,122,123,124,125,126,127,122,123,124,125,126,127,122,122,123,124,125,126,127,123,124,125,126,127,123,124,125,126,127,127,0,123,124,125,126,127,122,123,124,125,126,127,123,123,124,124,125,125,126,126,127,122,123,124,125,126,127,123,123,124,124,125,125,126,126,127,122,122,123,124,125,126,127,122,123,124,125,126,127,122,123,124,125,126,127,0,0,0,0,0,0,0,0,0,0,122,123,124,125,126,127,0,0,0,0,0,0,0,17,17,0,201,202,128,128,17,17,17,17,17,0,0,17,17,17,0,0,17,17,17,17,17,0,0,0,0,203,203,0,0,0,203,0,0,0,132,203,203,204,204,204,0,204,205,0,0,203,100,206,100,203,0,203,203,203,0,203,203,130,203,206,102,100,130,132,206,102,100,130,132,203,100,100,130,203,203,207,203,100,100,100,130,132,132,206,102,100,130,132,132,204,102,100,0,206,102,100,130,132,205,130,203,130,130,203,102,132,206,0,132,207,100,132,207,206,102,100,130,132,206,102,100,130,132,206,102,100,130,132,207,203,203,206,102,100,130,132,0,0,109,135,109,135,109,109,135,109,135,109,135,109,109,135,135,109,135,109,135,109,135,109,135,109,135,109,0,103,0,0,0,0,136,16,136,16,136,16,136,16,16,137,136,136,16,136,16,136,16,136,16,136,136,16,137,136,136,16,136,16,136,16,136,16,136,16,0,0,0,0,0,208,209,139,74,139,74,74,74,139,74,139,0,139,74,139,74,208,209,208,209,208,209,74,139,74,139,74,139,74,139,74,0,140,140,140,140,140,0,140,140,140,140,140,140,140,140,140,140,0,0,0,0,0,0,0,0,0,142,142,149,150,148,131,141,143,144,142,149,150,148,131,141,143,144,142,142,144,131,141,131,141,149,142,142,143,144,148,131,142,143,144,144,144,149,143,144,150,150,148,131,141,143,143,144,144,142,149,150,148,131,141,143,144,142,142,142,142,0,149,131,141,131,149,150,148,131,141,143,144,142,142,144,149,141,148,148,131,131,141,131,143,144,143,144,142,149,131,142,141,148,144,144,144,144,144,150,142,142,143,144,142,148,131,131,0,0,131,131,0,131,141,150,143,144,149,150,148,131,141,143,144,142,149,150,148,131,141,143,144,142,143,144,142,142,142,142,149,150,148,131,141,143,144,142,149,150,148,131,141,143,144,142,142,142,142,0,0,0,0,142,143,144,143,144,142,144,143,144,142,0,0,0,0,0,0,0,163,165,163,165,163,165,163,165,163,165,163,163,163,163,165,163,163,165,163,165,165,163,165,163,163,163,163,163,163,165,163,163,165,163,163,165,165,163,163,163,163,163,165,163,163,165,165,163,165,163,165,163,165,163,0,0,172,172,171,172,171,171,171,171,171,171,171,171,171,171,171,171,172,171,171,171,171,171,171,172,171,172,171,171,171,171,171,171,172,171,172,171,172,171,171,171,171,171,171,171,171,171,172,171,172,171,172,171,172,171],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,1]],[[1,1]],[[]],[[],2],[[],3],[2,4],[[]],[2],[2],0,[[],5],0,[[]],[2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[6,7],8],0,[[],[[12,[[11,[9,10]]]]]],[2,2],[13,13],[1,1],[14,14],[6,6],[[]],[[]],[[]],[[]],[[]],[[2,2],15],[[13,13],15],[[1,1],15],[[6,6],15],0,[16,[[12,[2,17]]]],[16,[[12,[13,17]]]],[16,[[12,[1,17]]]],[16,[[12,[14,17]]]],[16,[[12,[6,17]]]],[2,[[12,[5,18]]]],[13,[[12,[5,18]]]],[1,[[12,[5,18]]]],[14,[[12,[5,18]]]],[6,[[12,[5,18]]]],[19,[[12,[5,18]]]],[19,[[12,[5,18]]]],[19,[[12,[5,18]]]],[19,[[12,[5,18]]]],[19,[[12,[5,18]]]],0,0,[[],5],[2],[20,[[12,[2]]]],[[],[[12,[13]]]],[[],[[12,[1]]]],[[],[[12,[14]]]],[[],[[12,[6]]]],[[1,1]],0,0,[[]],[[]],0,[[]],[[]],[[2,2],21],[[13,13],21],[[1,1],21],[[14,14],21],[[6,6],21],[[2,22],23],[[2,22],23],[[2,22],23],[[13,22],23],[[13,22],23],[[1,22],23],[[1,22],23],[[14,22],23],[[14,22],23],[[24,22],23],[[24,22],23],[[6,22],23],[[]],[4,2],[[]],[25,13],[8,1],[[]],[[]],[26,24],[27,24],[[]],[[]],[[],[[12,[28]]]],[16,[[12,[29]]]],[16,[[12,[29]]]],[16,[[12,[29]]]],[16,[[12,[29]]]],[16,[[12,[29]]]],[[]],[[],2],[4,2],[[]],[[],2],[7,1],[7,1],[[],[[12,[30]]]],[[],[[12,[2,30]]]],[[],[[12,[2,30]]]],[31,[[12,[2]]]],[31,[[12,[1]]]],[[31,32],[[12,[1,24]]]],[[]],[2],[13],[1],[14],[6],[[2,33]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[2],0,[[],5],0,0,0,[7,1],0,[[1,7]],0,[[],5],0,[[2,2],[[34,[15]]]],[[13,13],[[34,[15]]]],[[1,1],[[34,[15]]]],[[6,6],[[34,[15]]]],0,[35],[[1,1]],[[1,1]],[7,1],0,[[1,1],1],0,[[2,36],12],[13,12],[1,12],[14,12],[6,12],0,[24,[[34,[37]]]],[[1,1]],[[1,1]],[38,1],0,[[],5],0,0,[[],[[11,[39,10]]]],[[],[[11,[39,10]]]],[[],[[11,[39,10]]]],[[],[[11,[39,10]]]],[[],[[11,[39,10]]]],[[],40],[[]],[[]],[[]],[[]],[[]],[[],40],[[],40],[[],40],[[],40],[[],40],[13,5],[[],5],[[],[[12,[3,41]]]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],0,[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],0,0,[[]],[[]],[[]],[[]],[16,[[12,[43,17]]]],[43,[[12,[5,18]]]],[19,[[12,[5,18]]]],[[],[[12,[43]]]],[[],[[12,[44]]]],[[43,22],23],[[44,22],23],[[]],[[]],[16,[[12,[29]]]],[43,4],0,[[]],[[]],0,0,[43,12],[44,12],[[43,45],[[46,[44]]]],0,0,[[],[[11,[39,10]]]],[[],12],[[],12],[[],12],[[],12],[[],42],[[],42],[[44,47],[[12,[43,48]]]],[[]],[[]],0,0,[[]],[[]],[[49,22],23],[[49,22],23],[[]],[[]],[35],[[],40],[[],12],[[],12],[[],42],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[50,5]],[[51,52],51],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[54,[53]],[55,[53]]],[[56,[53]]]],0,0,0,[57,[[46,[58]]]],[59,59],[60,60],[51,51],[57,57],[61,61],[62,62],[63,63],[[[56,[[0,[64,53]]]]],[[56,[[0,[64,53]]]]]],[[[65,[64]]],[[65,[64]]]],[[[55,[[0,[64,53]]]]],[[55,[[0,[64,53]]]]]],[66,66],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[],51],[[],[[12,[59]]]],[[],[[12,[60]]]],[[],[[12,[57]]]],[[],[[12,[61]]]],[[],[[12,[62]]]],[[],[[12,[63]]]],[[],[[12,[[55,[53]]]]]],[[],[[12,[66]]]],[20,12],0,0,[[59,59],21],[[60,60],21],[[57,57],21],[[61,61],21],[[[55,[[0,[67,53]]]],55],21],0,0,0,[[59,22],23],[[60,22],23],[[51,22],23],[[57,22],23],[[61,22],23],[[62,22],23],[[63,22],23],[[[56,[[0,[68,53]]]],22],23],[[[65,[68]],22],23],[[[55,[[0,[68,53]]]],22],23],[[66,22],23],[[]],[[]],[[]],[[]],[[]],[[]],[69,57],[[]],[[69,69,69],61],[[]],[[]],[[]],[[]],[[]],[[]],[63,46],[63,[[46,[[55,[70]]]]]],[63,[[46,[[55,[71]]]]]],[[]],0,[[[54,[53]]],53],[51,[[46,[52]]]],[[60,31],[[46,[72]]]],[[[54,[53]],[11,[53]]],4],[59],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[11,5,13],50],0,[[53,13,[11,[13]],5]],[[5,13],50],[[],51],0,0,0,0,0,0,0,0,[[50,73,53,74],[[76,[[75,[[65,[53]]]]]]]],[[50,73,74],[[76,[[75,[[65,[71]]]]]]]],[[50,73,74],[[76,[[75,[[65,[70]]]]]]]],[13,77],0,0,[59,12],[60,12],[57,12],[61,12],[62,12],[63,12],[[[55,[53]]],12],[66,12],[36,12],0,[[[54,[53]],13,[55,[53]]],[[56,[53]]]],[[[65,[70]]]],0,[[[65,[71]]]],[[],57],[[],61],[[],57],[[],63],[[[55,[71]]],63],[[[55,[70]]],63],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[61,[[46,[78]]]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],0,[13,46],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[20,[[12,[[11,[53]]]]]],[20,[[12,[[79,[53]]]]]],[[]],[[]],[36,12],[[[79,[53]],36],12],[[],12],[[],12],[[],42],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[45,47,80],[[12,[45,48]]]],[[],81],[[],81],[[],81],[[],81],[45,82],[45,82],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],83],[[],84],[[],85],[[],86],[45,45],[87,87],[83,83],[84,84],[85,85],[86,86],[[]],[[]],[[]],[[]],[[]],[[]],[[45,45],15],[16,[[12,[45,17]]]],[16,[[12,[83,17]]]],[16,[[12,[84,17]]]],[16,[[12,[85,17]]]],[16,[[12,[86,17]]]],[16,[[12,[88,17]]]],[16,[[12,[89,17]]]],[45,[[12,[5,18]]]],[83,[[12,[5,18]]]],[84,[[12,[5,18]]]],[85,[[12,[5,18]]]],[86,[[12,[5,18]]]],[88,[[12,[5,18]]]],[89,[[12,[5,18]]]],[19,[[12,[5,18]]]],[19,[[12,[5,18]]]],[19,[[12,[5,18]]]],[19,[[12,[5,18]]]],[19,[[12,[5,18]]]],[19,[[12,[5,18]]]],[19,[[12,[5,18]]]],[45,90],[91,[[12,[86,17]]]],[91,[[12,[86,17]]]],[[87,91],[[12,[86,17]]]],[91,[[12,[83,17]]]],[91,[[12,[83,17]]]],[[87,91],[[12,[83,17]]]],[91,[[12,[84,17]]]],[91,[[12,[84,17]]]],[[87,91],[[12,[84,17]]]],[91,[[12,[85,17]]]],[91,[[12,[85,17]]]],[[87,91],[[12,[85,17]]]],[87],[83],[84],[85],[86],[83],[84],[85],[86],[[],[[12,[45]]]],[45,92],[[],7],[[],7],[[],7],[[],7],0,[[45,45],21],[[83,83],21],[[84,84],21],[[85,85],21],[[86,86],21],[83,21],[84,21],[85,21],[86,21],0,[[45,22],[[12,[93]]]],[[87,22],23],[[83,22],23],[[83,22],23],[[84,22],23],[[84,22],23],[[85,22],23],[[85,22],23],[[86,22],23],[[86,22],23],[[]],[90,45],[[]],[[]],[[],83],[[]],[[]],[[],84],[[]],[[],85],[[]],[[],86],[[]],[[]],[16,[[12,[29]]]],[16,[[12,[29]]]],[16,[[12,[29]]]],[16,[[12,[29]]]],[16,[[12,[29]]]],[47,[[12,[45,48]]]],[[47,31],[[12,[45,48]]]],[31,[[12,[45,48]]]],[[47,94],45],[31,[[12,[45]]]],[[],87],[45],[83],[84],[85],[86],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[47,45],[[],45],0,0,0,[[45,45],[[34,[15]]]],[45,95],[45],[45,94],[45,12],0,[[45,96],97],0,[[45,47,[34,[98]]],90],[[],[[11,[39,10]]]],[[],[[11,[39,10]]]],[[],[[11,[39,10]]]],[[],[[11,[39,10]]]],[[],[[11,[39,10]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],40],[[],40],[[],40],[[],40],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[45,47,80],[[12,[48]]]],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[45],0,0,0,0,0,0,[[],81],[[]],[[]],[99,99],[[]],[[],87],[[]],[99],[[99,22],23],[[]],[[],99],[[],100],[[]],[[],73],[[],100],[[]],[[],12],[[],12],[[],42],[[]],[16,[[12,[17]]]],0,0,0,0,0,[[],31],[[],[[11,[[102,[101]]]]]],[[103,104,83,105],[[108,[[107,[106]]]]]],[[104,84,14],[[108,[[107,[106]]]]]],[[],81],[[],81],[[104,109],[[108,[[107,[106]]]]]],[104,[[108,[[107,[106]]]]]],[[104,11],[[108,[[107,[106]]]]]],[[]],[[]],[[]],[[]],[[],105],[[],105],[101,101],[[]],[104,[[108,[[107,[106]]]]]],[[],87],[105],[101],[105],[[110,104],[[108,[[107,[106]]]]]],[[105,22],23],[[101,22],23],[[]],[[],105],[[]],[[],101],[[]],[[]],[[],73],[[],73],[[],73],[[104,14],[[108,[[107,[106]]]]]],[[]],[[],12],[[],12],[[],12],[[],12],[[],42],[[],42],[[103,104,105,83],[[108,[[107,[106]]]]]],[[104,84],[[108,[[107,[106]]]]]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[16,[[108,[[107,[106]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[111,111],[[]],[107,[[108,[[107,[106]]]]]],[104,46],[[],112],[[],113],[104],[111],[104],[111],[104,38],[[112,22],23],[[113,22],23],[[114,22],23],[[111,22],23],[[29,22],23],[[29,22],23],[[]],[[]],[[]],[[]],[[]],[[],111],[[]],[16,[[46,[29]]]],[16,[[46,[29]]]],[104,[[46,[34]]]],[104,[[46,[34]]]],[104,[[46,[34]]]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[[0,[115,116]],16],104],[[[0,[37,116,117]]],29],[35],[[],[[108,[[107,[106]]]]]],[[],[[108,[[107,[106]]]]]],[[[11,[39]]],[[108,[[107,[106]]]]]],[[],[[108,[[107,[106]]]]]],[[],[[108,[[107,[106]]]]]],[104,46],[104,[[46,[34]]]],[[],[[108,[[107,[106]]]]]],[[],[[108,[[107,[106]]]]]],0,[[],[[11,[39]]]],[[],[[11,[39]]]],[[]],[[],40],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],0,[111],[111],[111],[111],[111],[111],[111],[111],[111],[111],[[]],[[]],[[]],[[]],[[]],[[]],[[5,5],29],[[39,39],29],0,0,0,0,0,0,0,0,[[118,16],[[108,[[107,[106]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[107,[119]]],[[108,[[107,[106]]]]]],0,0,0,[[],118],[118],[[120,120],21],[[118,22],23],[[119,22],23],[[120,22],23],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],118],[121,34],0,0,0,[119,[[108,[[107,[106]]]]]],[119,[[108,[[107,[106]]]]]],[[119,[11,[39]]],[[108,[[107,[106]]]]]],[119,[[108,[[107,[106]]]]]],[119,[[108,[[107,[106]]]]]],0,[119,[[108,[[107,[106]]]]]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],0,[[],42],[[],42],[[],42],[[],42],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[122,122],[[]],[16,[[12,[123,17]]]],[16,[[12,[124,17]]]],[16,[[12,[125,17]]]],[16,[[12,[126,17]]]],[16,[[12,[127,17]]]],[123,[[12,[5,18]]]],[124,[[12,[5,18]]]],[125,[[12,[5,18]]]],[126,[[12,[5,18]]]],[127,[[12,[5,18]]]],[19,[[12,[5,18]]]],[19,[[12,[5,18]]]],[19,[[12,[5,18]]]],[19,[[12,[5,18]]]],[19,[[12,[5,18]]]],[[127,127],21],[111],[[123,22],23],[[124,22],23],[[125,22],23],[[126,22],23],[[127,22],23],[[]],[[]],[[]],[[]],[[]],[[]],[16,[[12,[29]]]],[16,[[12,[29]]]],[16,[[12,[29]]]],[16,[[12,[29]]]],[16,[[12,[29]]]],[16,[[12,[29]]]],[16,[[12,[29]]]],[16,[[12,[29]]]],[16,[[12,[29]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[11,[39,10]]]],[[],[[11,[39,10]]]],[[],[[11,[39,10]]]],[[],[[11,[39,10]]]],[[],[[11,[39,10]]]],[[],[[11,[39,10]]]],[[],[[11,[39,10]]]],[[],[[11,[39,10]]]],[[],[[11,[39,10]]]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[111],[111],[111],[111],[111],[111],[111],[111],[111],[111],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,[[]],[[]],0,[16,[[12,[17]]]],[[],[[12,[5,18]]]],[128,[[12,[5,18]]]],[19,[[12,[5,18]]]],[[17,22],23],[[17,22],23],[[]],[[[0,[37,116,117]]],17],[31,17],0,0,[[]],[129,17],[35],0,0,[[],40],[[],12],[[],12],[[],42],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],31],0,[[],[[11,[102]]]],[[103,104],[[108,[[107,[106]]]]]],[[104,14],[[108,[[107,[106]]]]]],0,[[104,109],[[108,[[107,[106]]]]]],[104,[[108,[[107,[106]]]]]],[40,130],[[104,11],[[108,[[107,[106]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[0,[38,116]]]],[100,100],[[]],0,[104,[[108,[[107,[106]]]]]],[[]],[[74,13,51,131],[[108,[[107,[106]]]]]],[[110,104],[[108,[[107,[106]]]]]],[[100,100],21],0,[[100,22],23],[[130,22],23],[[132,22],23],[[132,22],23],[[]],[[]],[[]],[[]],[129,132],[[]],[104,[[108,[[107,[106]]]]]],0,[100],0,[[]],[[]],[[]],[[]],[[]],[[]],0,[[],133],[[134,40],130],[40,130],[[104,14],[[108,[[107,[106]]]]]],0,[35],0,0,[132,[[34,[37]]]],[61,[[46,[57]]]],[[]],[[],40],[51],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],42],[[],42],[[],42],[[],42],[[],42],[[13,61],46],[[103,104],[[108,[[107,[106]]]]]],[104,[[108,[[107,[106]]]]]],[[]],[[]],[[]],[[]],[[]],0,0,[[109,104]],[[]],[[]],[[]],[[]],[[],109],[[135,22],23],[[109,22],23],[[]],[[]],[[]],[[]],0,0,0,[109,135],[[],40],[[],40],[[],12],[[],12],[[],12],[[],12],[[],42],[[],42],[[]],[[]],0,[[31,40,69],[[108,[[107,[106]]]]]],0,0,0,0,[[]],[[]],[[]],[[]],[[[136,[64]]],[[136,[64]]]],[16,16],[[]],[[]],[[16,133],87],[137,16],[[[136,[101]]],16],[[],136],[[],16],[[[136,[68]],22],23],[[16,22],23],[[]],[[]],[[]],[[]],[[136,133]],[136,38],[138,16],[[137,101]],[[[136,[101]],101]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],42],[[],42],[[]],[[]],0,0,0,0,0,[13,[[108,[[107,[106]]]]]],[13,[[108,[[107,[106]]]]]],[[]],[[]],[[]],[[]],[[[74,[64,64]]],[[74,[64,64]]]],[[]],[139],[74],[139],0,[[]],[[]],[[]],[[]],[[],139],[[],74],[[],[[108,[[107,[106]]]]]],[[],[[108,[[107,[106]]]]]],[[],[[108,[[107,[106]]]]]],[[],[[108,[[107,[106]]]]]],[[]],[[],12],[[],12],[[],12],[[],12],[[],42],[[],42],[[]],[[]],0,[[140,13],[[108,[[107,[106]]]]]],[[]],[[]],[[]],[[]],[[13,13,5,141]],0,[140,[[108,[[107,[106]]]]]],0,[140,[[108,[[107,[106]]]]]],0,[[],12],[[],12],0,[[],42],[[]],0,0,0,0,0,0,0,0,[[]],[142,143],[142,144],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[7,145,145,146],7],[131,131],[141,141],[[]],[[]],0,[[],142],[147,142],0,0,[[],148],[[],131],[[],142],[143],[144],[144],[144,143],[149],[143],[144],[[150,22],23],[[150,22],23],[[148,22],23],[[131,22],23],[[141,22],23],[[143,22],[[12,[93]]]],[[143,22],[[12,[93]]]],[[144,22],[[12,[93]]]],[[144,22],[[12,[93]]]],[[142,22],[[12,[93]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[151],[[],142],[[]],[142],0,0,0,0,[131],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[142],[144,152],[149,21],[141,21],0,0,[131,46],[131,141],[141,153],[131,131],[143,143],[144,152],0,0,0,0,[[],131],[[],142],[[141,[107,[154]]]],0,[7],[[]],0,[7],[[]],[35],[142,106],[[[155,[142]]],106],0,0,0,[148],[131],[131,46],[156],[157],[[131,[158,[40]],[0,[154,116]]]],[[131,[158,[40]],154]],[156,[[12,[150]]]],[[]],[[]],[[],40],[[],40],[[],40],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[143,[[12,[143,143]]]],[144,[[12,[152,144]]]],[142,[[12,[143,159]]]],[[[155,[142]]],[[12,[160,159]]]],[142,[[12,[144,159]]]],[[[155,[142]]],[[12,[161,159]]]],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[147,142],[142,106],[[[155,[142]]],106],0,0,0,[[]],0,0,0,0,0,0,0,0,0,0,[156],[157],[[],[[34,[162]]]],[[],[[34,[162]]]],[156,[[12,[150]]]],0,0,[163,164],[[]],[[]],[[]],[[]],[165,165],[[[163,[64]]],[[163,[64]]]],[[]],[[]],[[165,165],15],[16,[[12,[163,17]]]],[163,[[12,[5,18]]]],[19,[[12,[5,18]]]],[[],163],[[],[[12,[165]]]],[[],[[12,[163]]]],[[163,1],[[166,[1]]]],[[165,165],21],[[[163,[67]],163],21],[[165,22],23],[[165,22],23],[[[163,[68]],22],23],[[]],[[]],[16,[[12,[29]]]],[138,163],[[163,1],34],[[163,1],34],[[163,1]],[165],[[[163,[167]]]],[[163,1],34],[[]],[[]],[163,38],[[165,165],[[34,[15]]]],[165,12],[163,12],[[163,163],21],[[163,1],[[12,[165]]]],[163,168],[[],[[11,[39,10]]]],[[]],[[]],[[[163,[169]]],[[163,[170]]]],[[],40],[[],12],[[],12],[[],12],[[],12],[[],42],[[],42],[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],[[171,163],[[12,[165]]]],[[[171,[64]]],[[171,[64]]]],[[]],[16,[[12,[171,17]]]],[171,[[12,[5,18]]]],[19,[[12,[5,18]]]],[[],171],[[],[[12,[171]]]],[[[171,[67]],171],21],[[171,138]],[[[171,[68]],22],23],[[]],[[]],[16,[[12,[29]]]],[138,171],[[171,1],[[34,[11]]]],[[171,1],[[34,[11]]]],[[[171,[167]]]],[[]],[[]],[[]],[171],[171,[[0,[38,168]]]],[171,21],[171,5],[171,[[0,[38,168]]]],[171,38],0,[171,[[12,[171]]]],[11,172],[[[164,[1,11]]],171],[172,34],[[1,171,163,25],[[163,[5]]]],[[171,1],[[34,[171]]]],[171,12],[[171,171],21],[171,5],[171,38],[[],[[11,[39,10]]]],[[]],[171,1],[[],12],[[],12],[[],12],[[],12],[[],42],[[],42],[[]],[[]]],"p":[[3,"Amount"],[3,"TransactionId"],[3,"BitSlice"],[3,"Hash"],[15,"usize"],[3,"Feerate"],[15,"u64"],[3,"Amount"],[3,"u5"],[3,"Global"],[3,"Vec"],[4,"Result"],[3,"PeerId"],[3,"OutPoint"],[4,"Ordering"],[3,"ModuleDecoderRegistry"],[3,"DecodeError"],[3,"Error"],[8,"Write"],[8,"Deserializer"],[15,"bool"],[3,"Formatter"],[6,"Result"],[4,"ParseAmountError"],[15,"u16"],[3,"ParseIntError"],[4,"ParseAmountError"],[4,"Error"],[4,"DecodingError"],[4,"Error"],[15,"str"],[4,"Denomination"],[8,"SliceIndex"],[4,"Option"],[3,"Demand"],[8,"Serializer"],[8,"Error"],[8,"Iterator"],[15,"u8"],[3,"String"],[4,"BitSpanError"],[3,"TypeId"],[3,"BackupRequest"],[3,"SignedBackupRequest"],[3,"KeyPair"],[6,"Result"],[3,"Secp256k1"],[4,"Error"],[3,"Cancelled"],[3,"DkgRunner"],[3,"ConfigGenParams"],[8,"ModuleConfigGenParams"],[8,"DkgGroup"],[3,"Dkg"],[4,"DkgMessage"],[4,"DkgStep"],[3,"ClientModuleConfig"],[8,"TypedClientModuleConfig"],[3,"Node"],[3,"ClientConfig"],[3,"ServerModuleConfig"],[4,"DkgPeerMsg"],[4,"SupportedDkgMessage"],[8,"Clone"],[3,"DkgKeys"],[3,"BitcoindRpcCfg"],[8,"PartialEq"],[8,"Debug"],[4,"Value"],[3,"G2Projective"],[3,"G1Projective"],[8,"DeserializeOwned"],[6,"ModuleKey"],[3,"MuxPeerConnections"],[3,"HashMap"],[6,"Cancellable"],[3,"Scalar"],[8,"TypedServerModuleConfig"],[3,"Wrap"],[3,"Scalar"],[8,"Any"],[3,"KeyPair"],[3,"Input"],[3,"Output"],[3,"OutputOutcome"],[3,"ConsensusItem"],[3,"Decoder"],[3,"Signature"],[3,"Transaction"],[3,"TweakedKeyPair"],[8,"Read"],[3,"DisplaySecret"],[3,"Error"],[3,"SecretKey"],[3,"PublicKey"],[3,"Message"],[3,"Signature"],[3,"TapBranchHash"],[3,"ClientModule"],[3,"TransactionItemAmount"],[3,"ServerModule"],[3,"ApiEndpoint"],[8,"ModuleInterconect"],[3,"DatabaseTransaction"],[3,"VerificationCache"],[8,"Future"],[3,"Box"],[3,"Pin"],[3,"Audit"],[3,"HashSet"],[3,"Database"],[3,"DatabaseInsertOperation"],[3,"DatabaseDeleteOperation"],[4,"DatabaseOperation"],[8,"IDatabaseTransaction"],[8,"Send"],[8,"Sync"],[3,"MemDatabase"],[3,"MemTransaction"],[3,"DummyError"],[3,"MemDbIter"],[4,"TestDbKeyPrefix"],[3,"TestKey"],[3,"DbPrefixTestPrefix"],[3,"AltTestKey"],[3,"AltDbPrefixTestPrefix"],[3,"TestVal"],[8,"DynEncodable"],[3,"Error"],[3,"ApiError"],[3,"TaskGroup"],[4,"ModuleError"],[6,"ModuleKey"],[15,"i32"],[3,"AuditItem"],[3,"ModuleRegistry"],[6,"ServerModuleRegistry"],[8,"IntoIterator"],[3,"PeerConnections"],[3,"FakePeerConnections"],[3,"TaskHandle"],[3,"RwLock"],[3,"RwLockReadGuard"],[3,"RwLockWriteGuard"],[3,"NodeId"],[3,"ChannelUsage"],[15,"u32"],[3,"TaskGroupInner"],[3,"TaskPanicGuard"],[3,"Elapsed"],[15,"never"],[3,"RwLockMappedWriteGuard"],[3,"Receiver"],[8,"FnOnce"],[3,"Arc"],[3,"Duration"],[3,"Instant"],[8,"Into"],[3,"TryLockError"],[3,"OwnedRwLockReadGuard"],[3,"OwnedRwLockWriteGuard"],[3,"JoinHandle"],[3,"Tiered"],[3,"BTreeMap"],[3,"InvalidAmountTierError"],[4,"Entry"],[8,"Hash"],[8,"DoubleEndedIterator"],[3,"SecretKeyShare"],[3,"PublicKeyShare"],[3,"TieredMulti"],[3,"TieredMultiZip"],[8,"BitcoinHash"],[8,"NumPeers"],[8,"SGroup"],[8,"ISupportedDkgMessage"],[4,"FinalizationError"],[8,"ModuleInput"],[8,"ModuleOutput"],[8,"ModuleOutputOutcome"],[8,"ModuleConsensusItem"],[8,"PluginDecode"],[8,"ModuleDecode"],[8,"PluginInput"],[8,"PluginOutput"],[8,"PluginOutputOutcome"],[8,"PluginConsensusItem"],[8,"ClientModulePlugin"],[8,"IClientModule"],[8,"IServerModule"],[8,"ModuleVerificationCache"],[8,"PluginVerificationCache"],[8,"DatabaseKeyPrefixConst"],[8,"IDatabase"],[8,"DatabaseKey"],[8,"DatabaseValue"],[8,"DatabaseKeyPrefix"],[8,"SerializableDatabaseValue"],[13,"WrongPrefix"],[13,"WrongLength"],[8,"Decodable"],[8,"Encodable"],[8,"ServerModulePlugin"],[8,"TypedApiEndpoint"],[8,"IntoModuleError"],[3,"InputMeta"],[8,"FederationModuleConfigGen"],[8,"IPeerConnections"],[8,"IMuxPeerConnections"]]},\
"fedimint_bitcoind":{"doc":"","t":[3,4,8,6,3,13,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,10,11,10,11,10,11,10,11,12,11,11,11,11,11,11,12,11,10,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,17,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,5,11,11,11,11,11,11,11,11,11,11],"n":["BitcoindRpc","Error","IBitcoindRpc","Result","RetryClient","Rpc","bitcoincore_rpc","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","deref","fmt","fmt","fmt","fmt","from","from","from","from","from","get_block","get_block","get_block_hash","get_block_hash","get_block_height","get_block_height","get_fee_rate","get_fee_rate","get_network","get_network","inner","into","into","into","new","provide","retry_call","sleep","source","submit_transaction","submit_transaction","task_handle","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","Client","ErrorReporting","RPC_VERIFY_ALREADY_IN_CHAIN","borrow","borrow","borrow_mut","borrow_mut","call","fmt","fmt","from","from","get_block","get_block_hash","get_block_height","get_fee_rate","get_network","inner","into","into","make_bitcoind_rpc","new","submit_transaction","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip"],"q":["fedimint_bitcoind","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_bitcoind::bitcoincore_rpc","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","Trait that allows interacting with the Bitcoin blockchain","","Wrapper around <code>IBitcoindRpc</code> that will retry failed calls","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the block with the given hash","","Returns the block hash at a given height","","Returns the current block height","","Estimates the fee rate for a given confirmation target. …","","Returns the Bitcoin network the node is connected to","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Submits a transaction to the Bitcoin network","","","","","","","","","","","","","","","","","","Wrapper around <code>bitcoincore_rpc::Client</code> logging failures","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","",""],"i":[0,0,0,0,0,2,0,2,1,6,2,1,6,1,1,1,2,2,1,6,2,2,1,1,6,29,6,29,6,29,6,29,6,29,6,6,2,1,6,6,2,6,6,2,29,6,6,1,2,2,1,6,2,1,6,2,1,6,2,1,6,0,0,0,23,27,23,27,23,23,27,23,27,27,27,27,27,27,23,23,27,0,23,27,23,27,23,27,23,27,23,27],"f":[0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[1,1],[[]],[1],[[2,3],4],[[2,3],4],[[1,3],4],[[[6,[5]],3],4],[7,2],[[]],[[],1],[[]],[[]],[8,[[11,[[10,[9]]]]]],[[6,8],[[11,[[10,[9]]]]]],[12,[[11,[[10,[9]]]]]],[[6,12],[[11,[[10,[9]]]]]],[[],[[11,[[10,[9]]]]]],[6,[[11,[[10,[9]]]]]],[13,[[11,[[10,[9]]]]]],[[6,13],[[11,[[10,[9]]]]]],[[],[[11,[[10,[9]]]]]],[6,[[11,[[10,[9]]]]]],0,[[]],[[]],[[]],[14,6],[15],[6,16],0,[2,[[18,[17]]]],[19,[[11,[[10,[9]]]]]],[[6,19],[[11,[[10,[9]]]]]],0,[[]],[[],20],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],22],[[],22],[[],22],[[]],[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],[[23,24],[[26,[25]]]],[[[23,[5]],3],4],[[[27,[5]],3],4],[[]],[[]],[[27,8],[[11,[[10,[9]]]]]],[[27,12],[[11,[[10,[9]]]]]],[27,[[11,[[10,[9]]]]]],[[27,13],[[11,[[10,[9]]]]]],[27,[[11,[[10,[9]]]]]],0,[[]],[[]],[[28,14],[[16,[1]]]],[[],23],[[27,19],[[11,[[10,[9]]]]]],[[],21],[[],21],[[],21],[[],21],[[],22],[[],22],[[]],[[]]],"p":[[3,"BitcoindRpc"],[4,"Error"],[3,"Formatter"],[6,"Result"],[8,"Debug"],[3,"RetryClient"],[3,"Error"],[3,"BlockHash"],[8,"Future"],[3,"Box"],[3,"Pin"],[15,"u64"],[15,"u16"],[3,"TaskHandle"],[3,"Demand"],[6,"Result"],[8,"Error"],[4,"Option"],[3,"Transaction"],[3,"String"],[4,"Result"],[3,"TypeId"],[3,"ErrorReporting"],[15,"str"],[8,"Deserialize"],[6,"Result"],[3,"Client"],[3,"BitcoindRpcCfg"],[8,"IBitcoindRpc"]]},\
"fedimint_build":{"doc":"","t":[5],"n":["print_git_hash"],"q":["fedimint_build"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"fedimint_cli":{"doc":"","t":[13,13,13,13,3,3,4,3,4,6,4,4,13,13,8,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,5,12,10,11,12,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12],"n":["AlreadySpent","Api","Backup","Backup","Cli","CliError","CliErrorKind","CliNoWorkdir","CliOutput","CliResult","Command","CommandNoWorkdir","ConnectInfo","ConnectInfo","ErrorHandler","Fetch","Fetch","GeneralFailure","GeneralFederationError","IOError","Info","Info","InsufficientBalance","InvalidValue","JoinFederation","JoinFederation","ListGateways","ListGateways","LnInvoice","LnInvoice","LnPay","LnPay","NetworkError","OSError","PayRequest","PegIn","PegIn","PegInAddress","PegInAddress","PegOut","PegOut","Reissue","Reissue","Restore","SerializationError","Spend","Spend","SwitchGateway","SwitchGateway","Timeout","UntypedApiOutput","Validate","Validate","VersionHash","VersionHash","VersionHash","WaitBlockHeight","WaitBlockHeight","WaitInvoice","WaitInvoice","WipeNotes","augment_args","augment_args","augment_args_for_update","augment_args_for_update","augment_subcommands","augment_subcommands","augment_subcommands_for_update","augment_subcommands_for_update","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","coins","command","command","command","command","command_for_update","command_for_update","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","group_id","group_id","handle_command","has_subcommand","has_subcommand","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","invoice","kind","main","message","or_terminate","provide","raw_error","serialize","serialize","serialize","serialize","to_string","to_string","transform","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","workdir","address","all_valid","connect_info","contract_id","details","details","gateways","hash","id","id","invoice","issuance","joined","new_gateway","num_gateways","paid_in_tx","reached","token","total_amount","total_num_notes","tx_id","value","address","amount","amount","arg","bolt11","coins","coins","connect","description","expiry_time","gap_limit","height","invoice","method","pubkey","satoshis","transaction","txout_proof"],"q":["fedimint_clifedimint_cli::CliOutput","","","","","","","","","","","","","","","","","","","","","","fedimint_cli::Command","","","","","","","","","","","","","","","","",""],"d":["","Send direct method call to the API, waiting for all peers …","","Upload the (encrypted) snapshot of mint notes to federation","","","","","","","","","","Config enabling client to establish websocket connection …","","","Fetch (re-)issued notes and finalize issuance process","","","","","Display wallet info (holdings, tiers)","","","","Join a federation using it’s ConnectInfo","","List registered gateways","","Create a lightning invoice to receive payment via gateway","","Pay a lightning invoice via a gateway","","","","","Issue tokens in exchange for a peg-in proof (not yet …","","Generate a new peg-in address, funds sent to it can later …","","Withdraw funds from the federation","","Reissue tokens received from a third party to avoid double …","Restore the previously created backup of mint notes (with …","","","Prepare notes to send to a third party as a payment","","Switch active gateway","","","","Validate tokens without claiming them (only checks if …","","Print the latest git commit hash this bin. was build with","Print the latest git commit hash this bin. was build with","","Wait for the fed to reach a consensus block height","","Wait for incoming invoice to be paid","Wipe the notes data from the DB. Useful for testing backup …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The working directory of the client containing the config …","","","","","","","","","","","","","","","","","","","","","","","","","","JSON args that will be serialized and send with the request","","","","","","","The amount of nonces to look ahead when scanning epoch …","","","","node public key for a gateway","","",""],"i":[3,19,6,19,0,0,0,0,0,0,0,0,6,19,0,6,19,3,3,3,6,19,3,3,6,19,6,19,6,19,6,19,3,3,0,6,19,6,19,6,19,6,19,19,3,6,19,6,19,3,6,6,19,6,18,19,6,19,6,19,19,15,17,15,17,18,19,18,19,6,3,9,15,17,18,19,5,6,3,9,15,17,18,19,5,5,15,17,15,17,15,17,6,3,9,15,17,18,19,5,6,3,9,15,17,18,19,5,3,5,6,3,9,15,17,18,19,5,6,3,9,9,5,6,3,9,9,15,17,18,19,5,15,17,18,19,15,17,18,19,15,17,0,18,19,6,3,9,15,17,18,19,5,6,3,9,15,17,18,19,5,5,9,0,9,28,9,9,6,3,9,5,6,9,28,6,3,9,15,17,18,19,5,6,3,9,15,17,18,19,5,6,3,9,15,17,18,19,5,15,17,18,19,15,17,18,19,6,3,9,15,17,18,19,5,15,29,30,31,32,30,33,34,35,36,37,38,39,40,41,34,42,43,44,33,33,45,46,47,48,49,50,51,52,53,54,49,49,55,56,57,50,58,47,59,59],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],1],[[],1],0,0,[[],1],[[],1],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[[],[[4,[3]]]],[[],[[4,[5]]]],[2],[2],[2],[2],[2],[2],[2],[2],[[6,7],8],[[3,7],8],[[9,7],8],[[9,7],8],[[5,7],8],[[]],[[]],[[3,10,[13,[[12,[11]]]]],9],[[]],[[]],[[]],[[]],[[]],[[]],[14,[[4,[15,16]]]],[14,[[4,[17,16]]]],[14,[[4,[18,16]]]],[14,[[4,[19,16]]]],[14,[[4,[15,16]]]],[14,[[4,[17,16]]]],[14,[[4,[18,16]]]],[14,[[4,[19,16]]]],[[],[[13,[20]]]],[[],[[13,[20]]]],[[15,[22,[21]],23],[[4,[6,9]]]],[10,24],[10,24],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[]],0,[[3,10]],[25],0,[6,4],[3,4],[9,4],[5,4],[[],26],[[],26],[[3,10],[[4,[6,9]]]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[15,14],[[4,[16]]]],[[17,14],[[4,[16]]]],[[18,14],[[4,[16]]]],[[19,14],[[4,[16]]]],[[15,14],[[4,[16]]]],[[17,14],[[4,[16]]]],[[18,14],[[4,[16]]]],[[19,14],[[4,[16]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"p":[[3,"Command"],[15,"usize"],[4,"CliErrorKind"],[4,"Result"],[3,"PayRequest"],[4,"CliOutput"],[3,"Formatter"],[6,"Result"],[3,"CliError"],[15,"str"],[8,"Error"],[3,"Box"],[4,"Option"],[3,"ArgMatches"],[3,"Cli"],[6,"Error"],[3,"CliNoWorkdir"],[4,"CommandNoWorkdir"],[4,"Command"],[3,"Id"],[3,"UserClientConfig"],[3,"Client"],[3,"OsRng"],[15,"bool"],[3,"Demand"],[3,"String"],[3,"TypeId"],[8,"ErrorHandler"],[13,"PegInAddress"],[13,"Validate"],[13,"ConnectInfo"],[13,"LnPay"],[13,"Info"],[13,"ListGateways"],[13,"VersionHash"],[13,"PegIn"],[13,"Reissue"],[13,"LnInvoice"],[13,"Fetch"],[13,"JoinFederation"],[13,"SwitchGateway"],[13,"WaitInvoice"],[13,"WaitBlockHeight"],[13,"Spend"],[13,"PegOut"],[13,"UntypedApiOutput"],[13,"PegOut"],[13,"Spend"],[13,"LnInvoice"],[13,"Api"],[13,"LnPay"],[13,"Reissue"],[13,"Validate"],[13,"JoinFederation"],[13,"Restore"],[13,"WaitBlockHeight"],[13,"WaitInvoice"],[13,"SwitchGateway"],[13,"PegIn"]]},\
"fedimint_client":{"doc":"This is a sketch/frame of future “modularized” …","t":[],"n":[],"q":[],"d":[],"i":[],"f":[],"p":[]},\
"fedimint_core":{"doc":"","t":[4,13,13,5,11,11,0,11,11,11,0,11,11,11,11,11,11,0,0,11,11,0,11,11,11,11,5,0,5,5,4,3,13,3,3,4,13,13,13,8,13,13,13,13,3,3,3,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,2,2,2,13,13,3,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,13,13,4,8,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,13,13,3,3,4,13,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,0,5,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,4,13,13,13,13,4,3,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["CoreError","MismatchingVariant","PendingPreimage","all_decoders","borrow","borrow_mut","config","deref","deref_mut","drop","epoch","fmt","fmt","from","init","into","is_retryable","modules","outcome","provide","to_string","transaction","try_from","try_into","type_id","vzip","load_from_file","serde_binary_human_readable","deserialize","serialize","ConsensusItem","EpochHistory","EpochInfo","EpochSignature","EpochSignatureShare","EpochVerifyError","InvalidEpochHash","InvalidPreviousEpochHash","InvalidSignature","IterUnzipConsensusItem","MissingPreviousEpoch","MissingSignature","Module","NotEnoughValidSigShares","OutcomeHistory","SerdeConsensusItem","SerdeEpochHistory","Transaction","UnzipConsensusItem","add_sig_to_prev","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","epoch","epoch_info","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","hash","hash","hash","hash","hash","hash","hash","hash","hash","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","items","last_hash","module","new","outcome","serialize","serialize","serialize","serialize","signature","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","transaction","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_inner","try_into_inner","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unzip_consensus_item","verify_hash","verify_sig","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","ln","mint","wallet","Accepted","Rejected","SerdeOutputOutcome","TransactionStatus","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","eq","eq","fmt","fmt","from","from","from","hash","hash","init","init","into","into","legacy","serialize","serialize","to_owned","to_owned","try_from","try_from","try_into","try_into","try_into_inner","type_id","type_id","vzip","vzip","epoch","outputs","LN","Mint","OutputOutcome","TryIntoOutcome","Wallet","borrow","borrow_mut","clone","clone_into","consensus_decode","consensus_encode","consensus_encode_dyn","deref","deref_mut","drop","eq","fmt","from","from","from_bytes","hash","init","into","to_bytes","to_owned","try_from","try_into","try_into_outcome","try_into_variant","type_id","vzip","InvalidSignature","MissingSignature","SerdeTransaction","Transaction","TransactionError","UnbalancedTransaction","agg_keys","agg_sign","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","consensus_decode","consensus_encode","consensus_encode_dyn","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","from_bytes","hash","hash","init","init","init","inputs","into","into","into","legacy","new_pre_session","outputs","provide","serialize","signature","to_bytes","to_owned","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","try_into_inner","tx_hash","tx_hash_from_parts","type_id","type_id","type_id","validate_signature","vzip","vzip","vzip","fee","inputs","outputs","Input","LN","LN","Mint","Mint","Output","Transaction","Wallet","Wallet","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","drop","drop","drop","eq","eq","eq","fmt","fmt","fmt","from","from","from","from_bytes","from_bytes","from_bytes","hash","hash","hash","init","init","init","inputs","into","into","into","into_type_erased","outputs","serialize","serialize","signature","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","tx_hash","tx_hash_from_parts","type_id","type_id","type_id","validate_signature","vzip","vzip","vzip"],"q":["fedimint_core","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_core::config","","fedimint_core::config::serde_binary_human_readable","","fedimint_core::epochfedimint_core::modules","","","fedimint_core::outcome","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_core::outcome::TransactionStatus","","fedimint_core::outcome::legacy","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_core::transaction","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_core::transaction::TransactionError","","","fedimint_core::transaction::legacy","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","Fedimint toplevel config","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Returns <code>true</code> if queried outpoint isn’t ready yet but may …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","All the consensus items along with the <code>PeerId</code> of the peer …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The transaction was accepted and is now being processed","The rejected state is only recorded if the error happens …","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","An atomic value transfer operation within the Fedimint …","","","Aggregate a stream of public keys.","Create an aggregated signature over the <code>msg</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","<code>Input</code>s consumed by the transaction","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Old transaction definition used by old client.","Precompute a combined public key and the hash of the given …","<code>Output</code>s created as a result of the transaction","","","Aggregated MuSig2 signature over all the public keys of …","","","","","","","","","","","","Hash of the transaction (excluding the signature).","Generate the transaction hash.","","","","Validate the aggregated Schnorr Signature signed over the …","","","","","","","An Input consumed by a Transaction is defined within a …","","","","","","An atomic value transfer operation within the Fedimint …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","<code>Input</code>s consumed by the transaction","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","<code>Output</code>s created as a result of the transaction","","","Aggregated MuSig2 signature over all the public keys of …","","","","","","","","","","","","","Hash of the transaction (excluding the signature).","Generate the transaction hash.","","","","Validate the aggregated Schnorr Signature signed over the …","","",""],"i":[0,3,3,0,3,3,0,3,3,3,0,3,3,3,3,3,3,0,0,3,3,0,3,3,3,3,0,0,0,0,0,0,19,0,0,0,18,18,18,0,18,18,19,18,0,0,0,19,0,16,19,37,20,21,22,16,23,24,18,19,37,20,21,22,16,23,24,18,19,20,21,22,16,23,24,19,20,21,22,16,23,24,19,21,22,16,24,19,21,22,16,24,19,21,22,16,24,19,37,20,21,22,16,23,24,18,19,37,20,21,22,16,23,24,18,20,21,22,23,19,37,20,21,22,16,23,24,18,24,37,19,20,21,22,16,23,24,18,19,20,21,22,16,23,24,18,19,37,20,20,21,22,16,23,23,24,18,19,21,22,16,24,19,20,21,22,16,23,24,24,16,19,37,20,21,22,16,23,24,18,19,37,20,21,22,16,23,24,18,24,24,37,16,16,20,21,22,23,16,19,21,22,16,24,19,20,21,22,16,23,24,37,19,37,20,21,22,16,23,24,18,19,37,20,21,22,16,23,24,18,20,23,19,37,20,21,22,16,23,24,18,56,16,16,19,37,20,21,22,16,23,24,18,0,0,0,39,39,0,0,39,40,39,40,39,40,39,40,39,40,39,40,39,40,39,40,39,40,39,40,39,40,40,39,40,39,40,39,40,0,39,40,39,40,39,40,39,40,40,39,40,39,40,57,57,42,42,0,0,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,43,42,42,42,49,49,0,0,0,49,0,0,47,48,49,47,48,49,47,48,47,48,47,47,47,47,48,49,47,48,49,48,47,48,49,47,48,47,48,49,49,47,48,48,49,47,47,48,47,48,49,47,47,48,49,0,0,47,49,48,47,47,47,48,49,47,48,49,47,48,49,48,47,47,47,48,49,47,47,48,49,58,58,58,0,54,55,54,55,0,0,54,55,53,54,55,53,54,55,53,54,55,53,54,55,53,54,55,53,54,55,53,54,55,53,54,55,53,54,55,54,55,53,54,55,53,54,55,53,54,55,53,54,55,53,54,55,53,54,55,53,54,55,53,53,54,55,53,53,54,55,53,53,54,55,53,54,55,53,54,55,53,54,55,53,53,53,54,55,53,53,54,55],"f":[0,0,0,[[],1],[[]],[[]],0,[2],[2],[2],0,[[3,4],5],[[3,4],5],[[]],[[],2],[[]],[3,6],0,0,[7],[[],8],0,[[],9],[[],9],[[],10],[[]],[11,[[9,[12,13]]]],0,[14,[[9,[12]]]],[15,9],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[16,17,16],[[9,[16,18]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[19,19],[20,20],[21,21],[22,22],[16,16],[23,23],[24,24],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,[[9,[19,25]]]],[1,[[9,[21,25]]]],[1,[[9,[22,25]]]],[1,[[9,[16,25]]]],[1,[[9,[24,25]]]],[19,[[9,[2,26]]]],[21,[[9,[2,26]]]],[22,[[9,[2,26]]]],[16,[[9,[2,26]]]],[24,[[9,[2,26]]]],[27,[[9,[2,26]]]],[27,[[9,[2,26]]]],[27,[[9,[2,26]]]],[27,[[9,[2,26]]]],[27,[[9,[2,26]]]],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[[],[[9,[20]]]],[[],[[9,[21]]]],[[],[[9,[22]]]],[[],[[9,[23]]]],[2],[2],[2],[2],[2],[2],[2],[2],[2],0,0,[[19,19],6],[[20,20],6],[[21,21],6],[[22,22],6],[[16,16],6],[[23,23],6],[[24,24],6],[[18,18],6],[[19,4],5],[[20,4],5],[[21,4],5],[[22,4],5],[[16,4],5],[[23,4],5],[[24,4],5],[[18,4],5],[[]],[[]],[[]],[19,20],[[]],[[]],[[]],[[]],[16,23],[[]],[[]],[1,[[9,[28]]]],[1,[[9,[28]]]],[1,[[9,[28]]]],[1,[[9,[28]]]],[1,[[9,[28]]]],[19],[20],[21],[22],[16],[23],[24,29],[24],0,[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[30,[33,[31,[32,[19]]]],34],16],0,[20,9],[21,9],[22,9],[23,9],0,[[],[[32,[35,36]]]],[[],[[32,[35,36]]]],[[],[[32,[35,36]]]],[[],[[32,[35,36]]]],[[],[[32,[35,36]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[20,1],[[9,[19,25]]]],[[23,1],[[9,[16,25]]]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],37],[[16,34],[[9,[18]]]],[[16,38],[[9,[18]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[39,39],[40,40],[[]],[[]],[2],[2],[2],[2],[[],[[9,[39]]]],[[],[[9,[40]]]],[2],[2],[[39,39],6],[[40,40],6],[[39,4],5],[[40,4],5],[[]],[41,40],[[]],[39],[40],[[],2],[[],2],[[]],[[]],0,[39,9],[40,9],[[]],[[]],[[],9],[[],9],[[],9],[[],9],[[40,1],[[9,[41,25]]]],[[],10],[[],10],[[]],[[]],0,0,0,0,0,0,0,[[]],[[]],[42,42],[[]],[1,[[9,[42,25]]]],[42,[[9,[2,26]]]],[27,[[9,[2,26]]]],[2],[2],[2],[[42,42],6],[[42,4],5],[41,42],[[]],[1,[[9,[28]]]],[42],[[],2],[[]],[[],[[32,[35,36]]]],[[]],[[],9],[[],9],[42,[[9,[3]]]],[42,[[9,[43,3]]]],[[],10],[[]],0,0,0,0,0,0,[[],44],[45,46],[[]],[[]],[[]],[[]],[[]],[[]],[47,47],[48,48],[[]],[[]],[1,[[9,[47,25]]]],[47,[[9,[2,26]]]],[27,[[9,[2,26]]]],[2],[2],[2],[2],[2],[2],[[],[[9,[48]]]],[2],[2],[2],[[47,47],6],[[48,48],6],[[47,4],5],[[48,4],5],[[49,4],5],[[49,4],5],[[]],[[]],[47,48],[[]],[1,[[9,[28]]]],[47],[48],[[],2],[[],2],[[],2],0,[[]],[[]],[[]],0,[45,50],0,[7],[48,9],0,[[],[[32,[35,36]]]],[[]],[[]],[[],8],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[48,1],[[9,[47,25]]]],[47,51],[[],51],[[],10],[[],10],[[],10],[[47,52],[[9,[49]]]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[53,53],[54,54],[55,55],[[]],[[]],[[]],[1,[[9,[53,25]]]],[1,[[9,[54,25]]]],[1,[[9,[55,25]]]],[53,[[9,[2,26]]]],[54,[[9,[2,26]]]],[55,[[9,[2,26]]]],[27,[[9,[2,26]]]],[27,[[9,[2,26]]]],[27,[[9,[2,26]]]],[2],[2],[2],[2],[2],[2],[[],[[9,[54]]]],[[],[[9,[55]]]],[2],[2],[2],[[53,53],6],[[54,54],6],[[55,55],6],[[53,4],5],[[54,4],5],[[55,4],5],[[]],[[]],[[]],[1,[[9,[28]]]],[1,[[9,[28]]]],[1,[[9,[28]]]],[53],[54],[55],[[],2],[[],2],[[],2],0,[[]],[[]],[[]],[53,47],0,[54,9],[55,9],0,[[],[[32,[35,36]]]],[[],[[32,[35,36]]]],[[],[[32,[35,36]]]],[[]],[[]],[[]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[53,51],[[],51],[[],10],[[],10],[[],10],[[53,52],[[9,[49]]]],[[]],[[]],[[]]],"p":[[3,"ModuleDecoderRegistry"],[15,"usize"],[4,"CoreError"],[3,"Formatter"],[6,"Result"],[15,"bool"],[3,"Demand"],[3,"String"],[4,"Result"],[3,"TypeId"],[3,"Path"],[8,"DeserializeOwned"],[3,"Error"],[8,"Deserializer"],[8,"Serializer"],[3,"EpochHistory"],[3,"PublicKeySet"],[4,"EpochVerifyError"],[4,"ConsensusItem"],[3,"SerdeConsensusItem"],[3,"EpochSignatureShare"],[3,"EpochSignature"],[3,"SerdeEpochHistory"],[3,"OutcomeHistory"],[3,"DecodeError"],[3,"Error"],[8,"Write"],[4,"DecodingError"],[3,"Hash"],[15,"u64"],[3,"PeerId"],[3,"Vec"],[3,"BTreeMap"],[4,"Option"],[15,"u8"],[3,"Global"],[3,"UnzipConsensusItem"],[3,"PublicKey"],[4,"TransactionStatus"],[3,"SerdeOutputOutcome"],[3,"OutputOutcome"],[4,"OutputOutcome"],[8,"TryIntoOutcome"],[3,"XOnlyPublicKey"],[3,"Secp256k1"],[3,"Signature"],[3,"Transaction"],[3,"SerdeTransaction"],[4,"TransactionError"],[3,"MusigKeyAggCache"],[3,"TransactionId"],[8,"Iterator"],[3,"Transaction"],[4,"Input"],[4,"Output"],[8,"IterUnzipConsensusItem"],[13,"Accepted"],[13,"UnbalancedTransaction"]]},\
"fedimint_dbdump":{"doc":"","t":[3,3,17,3,17,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,5,12,11,14,14,14,12,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Args","DatabaseDump","RANGES","SerdeWrapper","USAGE","arg_path","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","dump_database","erased_serialize","filter_prefixes","flag_prefix","flag_range","fmt","fmt","from","from","from","from_encodable","get_client_data","get_consensus_data","get_lightning_data","get_ln_client_data","get_mint_client_data","get_mint_data","get_wallet_client_data","get_wallet_data","include_all_prefixes","init","init","init","into","into","into","main","prefixes","print_database","push_db_key_items","push_db_pair_items","push_db_pair_items_no_serde","ranges","read_only","serialize","serialized","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip"],"q":["fedimint_dbdump","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","Structure to hold the deserialized structs from the …","","","","","","","","","","","","","","","","","","","","","Iterates through all the specified ranges in the database …","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Iterates through each of the prefixes within the consensus …","Iterates through each of the prefixes within the lightning …","Iterates through each of the prefixes within the lightning …","Iterates through each of the prefixes within the mint …","Iterates through each of the prefixes within the mint …","Iterates through each of the prefixes within the wallet …","Iterates through each of the prefixes within the wallet …","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Prints the contents of the BTreeMap to a pretty JSON string","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,2,4,8,2,4,8,2,4,8,2,4,8,2,2,4,8,2,4,8,0,2,2,8,2,4,8,2,8,4,4,4,4,4,4,4,4,4,4,8,2,4,8,2,0,4,4,0,0,0,4,4,8,4,4,8,2,4,8,2,4,8,2,4,8,2],"f":[0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[1],[1],[1],[1],[1],[1],[[],[[3,[2]]]],[1],[1],[1],[4],[5,[[3,[6,7]]]],0,0,0,[[8,9],10],[[2,9],10],[[]],[[]],[[]],[11,8],[4],[4],[4],[4],[4],[4],[4],[4],0,[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],0,[4],0,0,0,0,0,[8,3],0,[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],12],[[],12],[[],12],[[]],[[]],[[]]],"p":[[15,"usize"],[3,"Args"],[4,"Result"],[3,"DatabaseDump"],[8,"Serializer"],[3,"Ok"],[3,"Error"],[3,"SerdeWrapper"],[3,"Formatter"],[6,"Result"],[8,"Encodable"],[3,"TypeId"]]},\
"fedimint_derive":{"doc":"","t":[24,24,24],"n":["Decodable","Encodable","UnzipConsensus"],"q":["fedimint_derive","",""],"d":["","",""],"i":[0,0,0],"f":[0,0,0],"p":[]},\
"fedimint_ln":{"doc":"Lightning Module","t":[13,13,13,3,13,3,13,13,13,13,13,3,3,3,3,3,4,4,4,3,13,13,13,13,13,13,13,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,13,3,4,3,4,4,3,4,8,13,13,13,13,13,13,13,3,13,3,3,13,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,3,3,3,3,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,12,12,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,12,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,17,3,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,12,11,12,11,11,11,11,11,12,11,13,3,3,13,3,3,13,3,3,4,3,13,3,3,13,3,3,13,3,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["CancelOutgoing","Contract","Contract","ContractAccount","ContractNotReady","ContractOutput","InsufficientFunds","InsufficientIncomingFunding","InvalidCancellationSignature","InvalidEncryptedPreimage","InvalidPreimage","LightningConsensusItem","LightningGateway","LightningInput","LightningModule","LightningModuleConfigGen","LightningModuleError","LightningOutput","LightningOutputOutcome","LightningVerificationCache","MissingPreimage","NoOffer","NotOutgoingContract","Offer","Offer","UnknownContract","ZeroOutput","amount","amount","amount","api","api_base_name","api_endpoints","apply_input","apply_output","as_any","as_any","as_any","as_any","as_any","audit","await_consensus_proposal","begin_consensus_epoch","block_height","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_verification_cache","cfg","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","common","config","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_proposal","contract","contract","contract_id","contract_id","contracts","db","decoder","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","distributed_gen","dyn_hash","dyn_hash","dyn_hash","dyn_hash","end_consensus_epoch","eq","eq","eq","eq","eq","eq","eq","eq","eq","erased_eq","erased_eq","erased_eq","erased_eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","get_contract_account","get_offer","get_offers","hash","hash","hash","hash","hash","hash","hash","hash","into","into","into","into","into","into","into","into","into","into","into","list_gateways","mint_pub_key","module_key","module_key","module_key","module_key","module_key","module_key","module_key","module_key","module_key","module_key","module_key","new","node_pub_key","output_status","provide","register_gateway","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","share","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_client_config","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","trusted_dealer_gen","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","validate_config","validate_decryption_share","validate_input","validate_output","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","witness","contract","gateway_signature","id","id","outcome","LightningModuleDecoder","borrow","borrow_mut","clone","clone_into","decode_consensus_item","decode_consensus_item","decode_input","decode_input","decode_output","decode_output","decode_output_outcome","decode_output_outcome","default","fmt","from","into","to_owned","try_from","try_into","type_id","vzip","FeeConsensus","LightningModuleClientConfig","LightningModuleConfig","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","contract_input","contract_output","default","deserialize","deserialize","deserialize","eq","eq","fee_consensus","fee_consensus","fmt","fmt","fmt","from","from","from","from_parts","hash","hash","into","into","into","serialize","serialize","serialize","threshold","threshold_pub_key","threshold_pub_keys","threshold_sec_key","to_client_config","to_owned","to_owned","to_owned","to_parts","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","validate_config","vzip","vzip","vzip","Account","Account","Account","AccountContractOutcome","Contract","ContractId","ContractOutcome","DecryptedPreimage","EncryptedPreimage","FundedContract","IdentifyableContract","Incoming","Incoming","Incoming","Invalid","Outgoing","Outgoing","Outgoing","OutgoingContractOutcome","Pending","Preimage","PreimageDecryptionShare","Some","account","all_zeros","as_bits","as_hash","as_inner","as_ref","base32_len","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_base32","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","contract_id","contract_id","contract_id","deref","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","encode_hex","encode_hex_upper","engine","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_byte_iter","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_engine","from_hash","from_inner","from_slice","from_slice_delegated","from_str","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","incoming","index","into","into","into","into","into","into","into","into","into","into","into_inner","new","outgoing","partial_cmp","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_funded","to_hex","to_outcome","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_public_key","to_string","try_as_bits","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","write_base32","AccountContract","borrow","borrow_mut","clone","clone_into","consensus_decode","consensus_encode","consensus_encode_dyn","contract_id","deserialize","eq","fmt","from","from_bytes","hash","into","key","serialize","to_bytes","to_owned","try_from","try_into","type_id","vzip","FundedIncomingContract","IncomingContract","IncomingContractOffer","OfferId","all_zeros","amount","as_bits","as_hash","as_inner","as_ref","base32_len","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_base32","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","contract","contract_id","decrypted_preimage","deref","deserialize","deserialize","deserialize","deserialize","encode_hex","encode_hex_upper","encrypted_preimage","encrypted_preimage","engine","eq","eq","eq","eq","expiry_time","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_byte_iter","from_bytes","from_bytes","from_bytes","from_bytes","from_engine","from_hash","from_inner","from_slice","from_slice_delegated","from_str","gateway_key","hash","hash","hash","hash","hash","hash","id","index","into","into","into","into","into_inner","out_point","partial_cmp","serialize","serialize","serialize","serialize","to_bytes","to_bytes","to_bytes","to_bytes","to_hex","to_owned","to_owned","to_owned","to_owned","to_string","try_as_bits","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","write_base32","CANCELLATION_TAG","OutgoingContract","borrow","borrow_mut","cancellation_message","cancelled","clone","clone_into","consensus_decode","consensus_encode","consensus_encode_dyn","contract_id","deserialize","eq","fmt","from","from_bytes","gateway_key","hash","hash","into","invoice","serialize","timelock","to_bytes","to_owned","try_from","try_into","type_id","user_key","vzip","AgreedDecryptionShare","AgreedDecryptionShareKey","AgreedDecryptionShareKeyPrefix","Contract","ContractKey","ContractKeyPrefix","ContractUpdate","ContractUpdateKey","ContractUpdateKeyPrefix","DbKeyPrefix","DbKeyPrefixIter","LightningGateway","LightningGatewayKey","LightningGatewayKeyPrefix","Offer","OfferKey","OfferKeyPrefix","ProposeDecryptionShare","ProposeDecryptionShareKey","ProposeDecryptionShareKeyPrefix","back_idx","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","get","idx","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","iter","len","marker","next","next_back","nth","serialize","serialize","serialize","serialize","serialize","serialize","size_hint","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip"],"q":["fedimint_lnfedimint_ln::LightningOutput","","fedimint_ln::LightningOutputOutcome","","","fedimint_ln::common","","","","","","","","","","","","","","","","","","","","","","fedimint_ln::config","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_ln::contracts","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_ln::contracts::account","","","","","","","","","","","","","","","","","","","","","","","","fedimint_ln::contracts::incoming","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_ln::contracts::outgoing","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_ln::dbd":["Allow early refund of outgoing contract","Fund contract","","","","","","","","","","","","","The lightning module implements an account system. It does …","","","Represents an output of the Lightning module.","","","","","","Creat incoming contract offer","","","","While for now we only support spending the entire contract …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Of the three contract types only the outgoing one needs …","Contract to update","Signature of gateway","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A contract before execution as found in transaction outputs","The hash of a LN incoming contract","Outcome of a contract. Only incoming contracts currently …","Possible outcomes of preimage decryption","Threshold-encrypted <code>Preimage</code>","A contract after execution as saved in the database","Anything representing a contract which thus has an …","","","","The decrypted preimage was invalid","","","","","There aren’t enough decryption shares yet","","Share to decrypt an <code>EncryptedPreimage</code>","The decrypted preimage was valid","","","","Converts this type into the inner hash type.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Creates this type from the inner hash type.","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Converts a contract to its executed version.","Outputs the hash in hexadecimal form.","Creates the initial contract outcome that is created on …","","","","","","","","","","","Create a Schnorr public key from this preimage","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A generic contract to hold money in a pub key locked …","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","The funded version of an <code>IncomingContract</code> contains the …","Specialized smart contract for incoming payments","","The hash of a LN incoming contract offer","","Amount for which the user is willing to sell the preimage","","Converts this type into the inner hash type.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Status of preimage decryption, will either end in failure …","","","","","","","","","Encrypted preimage as specified in offer","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","Creates this type from the inner hash type.","","","","","Key that can unlock contract in case the decrypted …","","","","","","Payment hash which’s corresponding preimage is being sold","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Incoming contracts are funded exactly once, so they have …","","","","","","","","","","Outputs the hash in hexadecimal form.","","","","","","","","","","","","","","","","","","","","","","","","","Specialized smart contract for outgoing payments.","","","","Flag that can be set by the gateway and allows the client …","","","","","","","","","","Returns the argument unchanged.","","Public key of the LN gateway allowed to claim the HTLC …","","Hash that can be used to spend the output before the …","Calls <code>U::from(self)</code>.","Invoice containing metadata on how to obtain the preimage","","Block height at which the money will be spendable by the …","","","","","","Public key of the user that can claim the money back after …","","","Preimage decryption shares we received","Preimage decryption shares we received","","","","","","","","An iterator over the variants of Self","","","","","","","","","Our preimage decryption shares that still need to be …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[17,17,21,0,42,0,42,42,42,42,42,0,0,0,0,0,0,0,0,0,42,42,42,17,21,42,42,15,19,20,23,1,1,1,1,15,17,21,24,27,1,1,1,0,34,1,15,17,19,20,21,23,24,27,42,34,1,15,17,19,20,21,23,24,27,42,1,1,15,15,17,17,19,20,21,21,23,24,24,27,27,15,17,19,20,21,23,24,27,0,0,15,17,19,20,21,23,24,27,15,17,19,20,21,23,24,27,15,17,19,20,21,23,24,27,1,19,20,15,24,0,0,1,15,17,19,20,21,23,24,27,34,15,17,21,24,1,15,17,19,20,21,23,24,27,42,15,17,21,24,1,15,15,17,17,19,20,21,21,23,24,24,27,42,42,34,1,15,17,19,20,21,23,24,27,42,15,17,19,20,21,23,24,27,1,1,1,15,17,19,20,21,23,24,27,34,1,15,17,19,20,21,23,24,27,42,1,23,1,15,15,17,17,21,21,24,24,27,27,1,23,1,42,1,15,17,19,20,21,23,24,27,24,15,17,19,20,21,23,24,27,34,15,17,19,20,21,23,24,27,15,17,21,24,42,34,34,1,15,17,19,20,21,23,24,27,42,34,1,15,17,19,20,21,23,24,27,42,34,1,15,17,19,20,21,23,24,27,42,34,1,1,1,34,1,15,17,19,20,21,23,24,27,42,15,105,105,106,107,106,0,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,0,0,0,52,65,66,52,65,66,52,65,66,52,65,66,66,66,66,52,65,66,65,66,52,65,52,65,66,52,65,66,52,65,66,52,65,66,52,65,66,52,65,52,52,52,52,65,66,52,52,65,66,52,65,66,52,65,66,52,52,65,66,69,70,71,0,0,0,0,0,0,0,0,69,70,71,75,69,70,71,0,75,0,0,75,0,46,46,46,46,46,46,46,46,69,70,71,72,73,74,75,62,61,46,69,70,71,72,73,74,75,62,61,46,46,69,70,71,72,73,74,75,62,61,46,69,70,71,72,73,74,75,62,61,46,46,69,70,71,72,73,74,75,62,61,46,69,70,71,72,73,74,75,62,61,46,69,70,71,72,73,74,75,62,61,108,69,70,46,46,69,70,71,72,73,74,75,62,61,46,46,46,46,69,70,71,72,73,74,75,62,61,46,46,46,69,70,71,72,73,74,75,62,61,46,46,69,70,71,72,73,74,75,62,61,46,46,69,70,71,72,73,74,75,62,61,46,46,46,46,46,46,46,69,70,71,72,73,74,75,62,61,0,46,46,69,70,71,72,73,74,75,62,61,46,62,0,46,46,69,70,71,72,73,74,75,62,61,46,69,70,71,72,73,74,75,62,61,69,46,69,46,69,70,71,72,73,74,75,62,61,74,46,46,46,69,70,71,72,73,74,75,62,61,46,69,70,71,72,73,74,75,62,61,46,69,70,71,72,73,74,75,62,61,46,69,70,71,72,73,74,75,62,61,46,0,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,0,0,0,0,87,49,87,87,87,87,87,49,88,89,87,87,49,88,89,87,87,49,88,89,87,49,88,89,87,87,49,88,89,87,49,88,89,87,49,88,89,87,89,88,88,87,49,88,89,87,87,87,49,88,87,49,88,89,87,49,49,88,89,87,87,87,49,88,89,87,87,87,49,88,89,87,87,87,87,87,87,87,88,49,88,89,87,49,88,49,87,49,88,89,87,87,89,87,49,88,89,87,49,88,89,87,87,49,88,89,87,87,87,49,88,89,87,49,88,89,87,49,88,89,87,49,88,89,87,87,0,0,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,91,0,0,91,0,0,91,0,0,0,0,91,0,0,91,0,0,91,0,0,92,91,92,93,94,96,95,97,98,99,103,100,104,101,102,91,92,93,94,96,95,97,98,99,103,100,104,101,102,91,92,93,94,95,91,92,93,94,95,93,94,96,95,97,98,99,100,101,102,93,94,96,95,97,98,99,103,100,104,101,102,93,94,96,95,97,98,99,103,100,104,101,102,91,91,93,94,96,95,97,98,99,103,100,104,101,102,91,92,93,94,96,95,97,98,99,103,100,104,101,102,93,93,94,94,96,96,95,95,97,97,98,98,99,99,100,100,101,101,102,102,92,92,91,92,93,94,96,95,97,98,99,103,100,104,101,102,92,91,92,92,92,92,92,93,96,97,99,100,101,92,93,93,94,94,96,96,95,95,97,97,98,98,99,99,103,103,100,100,104,104,101,101,102,102,91,92,93,94,95,91,91,92,93,94,96,95,97,98,99,103,100,104,101,102,91,92,93,94,96,95,97,98,99,103,100,104,101,102,91,92,93,94,96,95,97,98,99,103,100,104,101,102,91,92,93,94,96,95,97,98,99,103,100,104,101,102],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[1,[[4,[[3,[1]]]]]],[[1,5,6],[[9,[[8,[7]]]]]],[[1,6,10],[[9,[[8,[7]]]]]],[[],11],[[],11],[[],11],[[],11],[[],11],[[1,6,12],[[9,[[8,[7]]]]]],[[1,6],[[9,[[8,[7]]]]]],[[1,6,4],[[9,[[8,[7]]]]]],[5,13],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[1,14]],0,[15,15],[[],16],[17,17],[[],18],[19,19],[20,20],[21,21],[[],22],[23,23],[24,24],[[],25],[[],26],[27,27],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[28,[[30,[15,29]]]],[28,[[30,[17,29]]]],[28,[[30,[19,29]]]],[28,[[30,[20,29]]]],[28,[[30,[21,29]]]],[28,[[30,[23,29]]]],[28,[[30,[24,29]]]],[28,[[30,[27,29]]]],[15,[[30,[31,32]]]],[17,[[30,[31,32]]]],[19,[[30,[31,32]]]],[20,[[30,[31,32]]]],[21,[[30,[31,32]]]],[23,[[30,[31,32]]]],[24,[[30,[31,32]]]],[27,[[30,[31,32]]]],[33,[[30,[31,32]]]],[33,[[30,[31,32]]]],[33,[[30,[31,32]]]],[33,[[30,[31,32]]]],[33,[[30,[31,32]]]],[33,[[30,[31,32]]]],[33,[[30,[31,32]]]],[33,[[30,[31,32]]]],[[1,6],[[9,[[8,[7]]]]]],0,0,0,0,0,0,[1],[[],[[30,[15]]]],[[],[[30,[17]]]],[[],[[30,[19]]]],[[],[[30,[20]]]],[[],[[30,[21]]]],[[],[[30,[23]]]],[[],[[30,[24]]]],[[],[[30,[27]]]],[[34,35,36,37,38],[[9,[[8,[7]]]]]],[[],39],[[],39],[[],39],[[],39],[[1,40,6],[[9,[[8,[7]]]]]],[[15,15],41],[[17,17],41],[[19,19],41],[[20,20],41],[[21,21],41],[[23,23],41],[[24,24],41],[[27,27],41],[[42,42],41],[16,41],[18,41],[22,41],[25,41],[[1,43],44],[[15,43],44],[[15,43],44],[[17,43],44],[[17,43],44],[[19,43],44],[[20,43],44],[[21,43],44],[[21,43],44],[[23,43],44],[[24,43],44],[[24,43],44],[[27,43],44],[[42,43],44],[[42,43],44],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[28,[[30,[45]]]],[28,[[30,[45]]]],[28,[[30,[45]]]],[28,[[30,[45]]]],[28,[[30,[45]]]],[28,[[30,[45]]]],[28,[[30,[45]]]],[28,[[30,[45]]]],[[1,6,46],[[47,[20]]]],[[1,6,48],[[47,[49]]]],[[1,6],[[4,[49]]]],[15],[17],[19],[20],[21],[23],[24],[27],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[1,6],[[4,[23]]]],0,[1,50],[[],51],[15,50],[17,50],[[],51],[21,50],[[],51],[[],51],[24,50],[27,50],[[],51],[52,1],0,[[1,6,10],[[9,[[8,[7]]]]]],[53],[[1,6,23]],[15,30],[17,30],[19,30],[20,30],[21,30],[23,30],[24,30],[27,30],0,[[],[[4,[54,55]]]],[[],[[4,[54,55]]]],[[],[[4,[54,55]]]],[[],[[4,[54,55]]]],[[],[[4,[54,55]]]],[[],[[4,[54,55]]]],[[],[[4,[54,55]]]],[[],[[4,[54,55]]]],[[34,56],[[58,[57]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],59],[[],59],[[],59],[[],59],[[],59],[[34,37]],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[34,36,56],58],[[1,36,61,62],41],[[1,5,6],[[9,[[8,[7]]]]]],[[1,6],[[9,[[8,[7]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,[[]],[[]],[63,63],[[]],[64,[[30,[25,29]]]],[64,[[30,[25,29]]]],[64,[[30,[16,29]]]],[64,[[30,[16,29]]]],[64,[[30,[18,29]]]],[64,[[30,[18,29]]]],[64,[[30,[22,29]]]],[64,[[30,[22,29]]]],[[],63],[[63,43],44],[[]],[[]],[[]],[[],30],[[],30],[[],60],[[]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[52,52],[65,65],[66,66],[[]],[[]],[[]],0,0,[[],66],[[],[[30,[52]]]],[[],[[30,[65]]]],[[],[[30,[66]]]],[[65,65],41],[[66,66],41],0,0,[[52,43],44],[[65,43],44],[[66,43],44],[[]],[[]],[[]],[[],52],[65],[66],[[]],[[]],[[]],[52,30],[65,30],[66,30],0,0,0,0,[52,57],[[]],[[]],[[]],[52],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],60],[[],60],[[],60],[[52,36],58],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],46],[[],67],[46,48],[46],[46],[[],31],[[]],[46],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[30,[[4,[68,55]]]]]],[46,46],[69,69],[70,70],[71,71],[72,72],[73,73],[74,74],[75,75],[62,62],[61,61],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[46,46],76],[28,[[30,[46,29]]]],[28,[[30,[69,29]]]],[28,[[30,[70,29]]]],[28,[[30,[71,29]]]],[28,[[30,[72,29]]]],[28,[[30,[73,29]]]],[28,[[30,[74,29]]]],[28,[[30,[75,29]]]],[28,[[30,[62,29]]]],[28,[[30,[61,29]]]],[46,[[30,[31,32]]]],[69,[[30,[31,32]]]],[70,[[30,[31,32]]]],[71,[[30,[31,32]]]],[72,[[30,[31,32]]]],[73,[[30,[31,32]]]],[74,[[30,[31,32]]]],[75,[[30,[31,32]]]],[62,[[30,[31,32]]]],[61,[[30,[31,32]]]],[33,[[30,[31,32]]]],[33,[[30,[31,32]]]],[33,[[30,[31,32]]]],[33,[[30,[31,32]]]],[33,[[30,[31,32]]]],[33,[[30,[31,32]]]],[33,[[30,[31,32]]]],[33,[[30,[31,32]]]],[33,[[30,[31,32]]]],[33,[[30,[31,32]]]],[[],46],[69,46],[70,46],[46],[77,[[30,[46]]]],[[],[[30,[69]]]],[[],[[30,[70]]]],[[],[[30,[71]]]],[[],[[30,[72]]]],[[],[[30,[73]]]],[[],[[30,[74]]]],[[],[[30,[75]]]],[[],[[30,[62]]]],[[],[[30,[61]]]],[[]],[[]],[[]],[[46,46],41],[[69,69],41],[[70,70],41],[[71,71],41],[[72,72],41],[[73,73],41],[[74,74],41],[[75,75],41],[[62,62],41],[[61,61],41],[[46,43],44],[[46,43],44],[[46,43],44],[[69,43],44],[[70,43],44],[[71,43],44],[[72,43],44],[[73,43],44],[[74,43],44],[[75,43],44],[[62,43],44],[[61,43],44],[48,46],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[30,[78]]]],[28,[[30,[45]]]],[28,[[30,[45]]]],[28,[[30,[45]]]],[28,[[30,[45]]]],[28,[[30,[45]]]],[28,[[30,[45]]]],[28,[[30,[45]]]],[28,[[30,[45]]]],[28,[[30,[45]]]],[28,[[30,[45]]]],[[],46],[48,46],[[],46],[[],[[30,[46,79]]]],[[],[[30,[46,79]]]],[2,[[30,[46]]]],[46],[69],[70],[71],[72],[73],[74],[75],[62],[61],0,[[46,80]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[46],[[74,81],62],0,[[46,46],[[47,[76]]]],[[46,82],30],[69,30],[70,30],[71,30],[72,30],[73,30],[74,30],[75,30],[62,30],[61,30],[[],[[4,[54,55]]]],[[],[[4,[54,55]]]],[[],[[4,[54,55]]]],[[],[[4,[54,55]]]],[[],[[4,[54,55]]]],[[],[[4,[54,55]]]],[[],[[4,[54,55]]]],[[],[[4,[54,55]]]],[[],[[4,[54,55]]]],[[],[[4,[54,55]]]],[[69,10],70],[[],59],[69,71],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[74,[[30,[83,84]]]],[[],59],[[],[[30,[67,85]]]],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],30],0,[[]],[[]],[86,86],[[]],[28,[[30,[86,29]]]],[86,[[30,[31,32]]]],[33,[[30,[31,32]]]],[86,46],[[],[[30,[86]]]],[[86,86],41],[[86,43],44],[[]],[28,[[30,[45]]]],[86],[[]],0,[86,30],[[],[[4,[54,55]]]],[[]],[[],30],[[],30],[[],60],[[]],0,0,0,0,[[],87],0,[[],67],[87,48],[87],[87],[[],31],[[]],[[]],[[]],[[]],[87],[[]],[[]],[[]],[[]],[[],[[30,[[4,[68,55]]]]]],[49,49],[88,88],[89,89],[87,87],[[]],[[]],[[]],[[]],[[87,87],76],[28,[[30,[49,29]]]],[28,[[30,[88,29]]]],[28,[[30,[89,29]]]],[28,[[30,[87,29]]]],[49,[[30,[31,32]]]],[88,[[30,[31,32]]]],[89,[[30,[31,32]]]],[87,[[30,[31,32]]]],[33,[[30,[31,32]]]],[33,[[30,[31,32]]]],[33,[[30,[31,32]]]],[33,[[30,[31,32]]]],0,[88,46],0,[87],[[],[[30,[49]]]],[[],[[30,[88]]]],[[],[[30,[89]]]],[77,[[30,[87]]]],[[]],[[]],0,0,[[]],[[49,49],41],[[88,88],41],[[89,89],41],[[87,87],41],0,[[49,43],44],[[88,43],44],[[89,43],44],[[87,43],44],[[87,43],44],[[87,43],44],[[]],[[]],[[]],[48,87],[[]],[[],[[30,[78]]]],[28,[[30,[45]]]],[28,[[30,[45]]]],[28,[[30,[45]]]],[28,[[30,[45]]]],[[],87],[48,87],[[],87],[[],[[30,[87,79]]]],[[],[[30,[87,79]]]],[2,[[30,[87]]]],0,[49],[88],[89],[87],0,0,[49,87],[[87,80]],[[]],[[]],[[]],[[]],[87],0,[[87,87],[[47,[76]]]],[49,30],[88,30],[89,30],[[87,82],30],[[],[[4,[54,55]]]],[[],[[4,[54,55]]]],[[],[[4,[54,55]]]],[[],[[4,[54,55]]]],[[],59],[[]],[[]],[[]],[[]],[[],59],[[],[[30,[67,85]]]],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],60],[[],60],[[],60],[[],60],[[]],[[]],[[]],[[]],[[],30],0,0,[[]],[[]],[90,48],0,[90,90],[[]],[28,[[30,[90,29]]]],[90,[[30,[31,32]]]],[33,[[30,[31,32]]]],[90,46],[[],[[30,[90]]]],[[90,90],41],[[90,43],44],[[]],[28,[[30,[45]]]],0,[90],0,[[]],0,[90,30],0,[[],[[4,[54,55]]]],[[]],[[],30],[[],30],[[],60],0,[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[91,91],[92,92],[93,93],[94,94],[95,95],[[]],[[]],[[]],[[]],[[]],[28,[[30,[93,29]]]],[28,[[30,[94,29]]]],[28,[[30,[96,29]]]],[28,[[30,[95,29]]]],[28,[[30,[97,29]]]],[28,[[30,[98,29]]]],[28,[[30,[99,29]]]],[28,[[30,[100,29]]]],[28,[[30,[101,29]]]],[28,[[30,[102,29]]]],[93,[[30,[31,32]]]],[94,[[30,[31,32]]]],[96,[[30,[31,32]]]],[95,[[30,[31,32]]]],[97,[[30,[31,32]]]],[98,[[30,[31,32]]]],[99,[[30,[31,32]]]],[103,[[30,[31,32]]]],[100,[[30,[31,32]]]],[104,[[30,[31,32]]]],[101,[[30,[31,32]]]],[102,[[30,[31,32]]]],[33,[[30,[31,32]]]],[33,[[30,[31,32]]]],[33,[[30,[31,32]]]],[33,[[30,[31,32]]]],[33,[[30,[31,32]]]],[33,[[30,[31,32]]]],[33,[[30,[31,32]]]],[33,[[30,[31,32]]]],[33,[[30,[31,32]]]],[33,[[30,[31,32]]]],[33,[[30,[31,32]]]],[33,[[30,[31,32]]]],[[91,43],44],[[91,43],44],[[93,43],44],[[94,43],44],[[96,43],44],[[95,43],44],[[97,43],44],[[98,43],44],[[99,43],44],[[103,43],44],[[100,43],44],[[104,43],44],[[101,43],44],[[102,43],44],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[28,[[30,[45]]]],[28,[[30,[45]]]],[28,[[30,[45]]]],[28,[[30,[45]]]],[28,[[30,[45]]]],[28,[[30,[45]]]],[28,[[30,[45]]]],[28,[[30,[45]]]],[28,[[30,[45]]]],[28,[[30,[45]]]],[28,[[30,[45]]]],[28,[[30,[45]]]],[28,[[30,[45]]]],[28,[[30,[45]]]],[28,[[30,[45]]]],[28,[[30,[45]]]],[28,[[30,[45]]]],[28,[[30,[45]]]],[28,[[30,[45]]]],[28,[[30,[45]]]],[[92,31],[[47,[91]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],92],[92,31],0,[92,47],[92,47],[[92,31],47],[93,30],[96,30],[97,30],[99,30],[100,30],[101,30],[92],[[],[[4,[54,55]]]],[[],[[4,[54,55]]]],[[],[[4,[54,55]]]],[[],[[4,[54,55]]]],[[],[[4,[54,55]]]],[[],[[4,[54,55]]]],[[],[[4,[54,55]]]],[[],[[4,[54,55]]]],[[],[[4,[54,55]]]],[[],[[4,[54,55]]]],[[],[[4,[54,55]]]],[[],[[4,[54,55]]]],[[],[[4,[54,55]]]],[[],[[4,[54,55]]]],[[],[[4,[54,55]]]],[[],[[4,[54,55]]]],[[],[[4,[54,55]]]],[[],[[4,[54,55]]]],[[],[[4,[54,55]]]],[[],[[4,[54,55]]]],[[],[[4,[54,55]]]],[[],[[4,[54,55]]]],[[],[[4,[54,55]]]],[[],[[4,[54,55]]]],[[]],[[]],[[]],[[]],[[]],[[],59],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]]],"p":[[3,"LightningModule"],[15,"str"],[3,"ApiEndpoint"],[3,"Vec"],[8,"ModuleInterconect"],[3,"DatabaseTransaction"],[8,"Future"],[3,"Box"],[3,"Pin"],[3,"OutPoint"],[8,"Any"],[3,"Audit"],[15,"u32"],[8,"Iterator"],[3,"LightningInput"],[3,"Input"],[4,"LightningOutput"],[3,"Output"],[3,"ContractOutput"],[3,"ContractAccount"],[4,"LightningOutputOutcome"],[3,"OutputOutcome"],[3,"LightningGateway"],[3,"LightningConsensusItem"],[3,"ConsensusItem"],[3,"VerificationCache"],[3,"LightningVerificationCache"],[3,"ModuleDecoderRegistry"],[3,"DecodeError"],[4,"Result"],[15,"usize"],[3,"Error"],[8,"Write"],[3,"LightningModuleConfigGen"],[3,"MuxPeerConnections"],[3,"PeerId"],[3,"ConfigGenParams"],[3,"TaskGroup"],[15,"u64"],[3,"HashSet"],[15,"bool"],[4,"LightningModuleError"],[3,"Formatter"],[6,"Result"],[4,"DecodingError"],[3,"ContractId"],[4,"Option"],[3,"Hash"],[3,"IncomingContractOffer"],[6,"ModuleKey"],[15,"u16"],[3,"LightningModuleConfig"],[3,"Demand"],[15,"u8"],[3,"Global"],[3,"ServerModuleConfig"],[3,"ClientModuleConfig"],[6,"Result"],[3,"String"],[3,"TypeId"],[3,"PreimageDecryptionShare"],[3,"EncryptedPreimage"],[3,"LightningModuleDecoder"],[8,"Read"],[3,"LightningModuleClientConfig"],[3,"FeeConsensus"],[3,"BitSlice"],[3,"u5"],[4,"Contract"],[4,"FundedContract"],[4,"ContractOutcome"],[3,"AccountContractOutcome"],[3,"OutgoingContractOutcome"],[3,"Preimage"],[4,"DecryptedPreimage"],[4,"Ordering"],[8,"Deserializer"],[4,"Error"],[4,"Error"],[8,"SliceIndex"],[3,"PublicKey"],[8,"Serializer"],[3,"XOnlyPublicKey"],[4,"Error"],[4,"BitSpanError"],[3,"AccountContract"],[3,"OfferId"],[3,"IncomingContract"],[3,"FundedIncomingContract"],[3,"OutgoingContract"],[4,"DbKeyPrefix"],[3,"DbKeyPrefixIter"],[3,"ContractKey"],[3,"ContractKeyPrefix"],[3,"ContractUpdateKeyPrefix"],[3,"ContractUpdateKey"],[3,"OfferKey"],[3,"OfferKeyPrefix"],[3,"ProposeDecryptionShareKey"],[3,"AgreedDecryptionShareKey"],[3,"LightningGatewayKey"],[3,"LightningGatewayKeyPrefix"],[3,"ProposeDecryptionShareKeyPrefix"],[3,"AgreedDecryptionShareKeyPrefix"],[13,"CancelOutgoing"],[13,"Contract"],[13,"Offer"],[8,"IdentifyableContract"]]},\
"fedimint_mint":{"doc":"","tn":["BlindNonce","CombineError","DifferentNonce","DifferentStructureSigShare","InvalidAmountTier","InvalidAmountTier","InvalidCoin","InvalidSignature","InvalidSignature","Mint","MintConfigGenParams","MintConfigGenerator","MintError","MintInput","MintOutput","MintOutputConfirmation","MintOutputOutcome","MintShareErrors","MultiplePeerContributions","NoOwnContribution","Nonce","Note","OutputConfirmationSignatures","OutputOutcome","PeerErrorType","SpentCoin","TooFewCoins","TooFewShares","TooFewValidShares","VerificationCache","api_base_name","api_endpoints","apply_input","apply_output","as_any","as_any","as_any","as_any","as_any","audit","await_consensus_proposal","begin_consensus_epoch","blind_sign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_verification_cache","cfg","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","combine","common","config","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_proposal","db","decoder","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","distributed_gen","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dyn_hash","dyn_hash","dyn_hash","dyn_hash","end_consensus_epoch","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","erased_eq","erased_eq","erased_eq","erased_eq","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","handle_backup_request","handle_recover_request","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","mint_amounts","module_key","module_key","module_key","module_key","module_key","module_key","module_key","module_key","module_key","module_key","module_key","new","out_point","output_status","process_partial_signature","provide","provide","pub_key","pub_key","pub_key_shares","sec_key","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","signatures","spend_key","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_client_config","to_message","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","trusted_dealer_gen","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","valid_coins","validate_config","validate_input","validate_output","verify","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","MintModuleDecoder","borrow","borrow_mut","clone","clone_into","decode_consensus_item","decode_consensus_item","decode_input","decode_input","decode_output","decode_output","decode_output_outcome","decode_output_outcome","default","deref","deref_mut","drop","fmt","from","init","into","to_owned","try_from","try_into","type_id","vzip","FeeConsensus","MintClientConfig","MintConfig","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","coin_issuance_abs","coin_spend_abs","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","eq","eq","fee_consensus","fee_consensus","fmt","fmt","fmt","from","from","from","from_parts","hash","init","init","init","into","into","into","peer_tbs_pks","peer_tbs_pks","serialize","serialize","serialize","tbs_pks","tbs_sks","threshold","to_client_config","to_owned","to_owned","to_owned","to_parts","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","validate_config","vzip","vzip","vzip","CoinNonce","DbKeyPrefix","DbKeyPrefixIter","ECashUserBackupSnapshot","EcashBackup","EcashBackupKey","EcashBackupKeyPrefix","Issuance","IssuanceTotal","MintAuditItem","MintAuditItemKey","MintAuditItemKeyPrefix","NonceKey","NonceKeyPrefix","OutputOutcome","OutputOutcomeKey","OutputOutcomeKeyPrefix","ProposedPartialSig","ProposedPartialSignatureKey","ProposedPartialSignaturesKeyPrefix","ReceivedPartialSig","ReceivedPartialSignatureKey","ReceivedPartialSignatureKeyOutputPrefix","ReceivedPartialSignaturesKeyPrefix","Redemption","RedemptionTotal","back_idx","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","data","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","get","hash","idx","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","iter","len","marker","next","next_back","nth","out_point","peer_id","request_id","request_id","serialize","serialize","serialize","serialize","serialize","serialize","serialize","size_hint","timestamp","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip"],"q":["fedimint_mintfedimint_mint::common","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_mint::config","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_mint::dbd":["<code>Nonce</code> but blinded by the user key","","","","","","","","","Data structures taking into account different amount tiers …","","","","","","A consenus item from one of the federation members …","","Represents an array of mint indexes that delivered faulty …","","","Unique ID of a mint note.","An verifiable one time use IOU from the mint.","Blind signature share from one Federation peer for a …","Result of Federation members confirming <code>MintOutput</code> by …eturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Constructs a new mint","Reference to a Federation Transaction containing an …","","","","","","","","","","","","","","","","","","","(Partial) signatures","Access the nonce as the public key to the spend key","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Verify the coin’s validity under a mit key <code>pk</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An iterator over the variants of Self","User’s backup, received at certain time, containing …","","Key used to store user’s ecash backups","","","","","Represents the amounts of issued (signed) and redeemed …","","","","","Transaction id and output index identifying an output …eturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,35,35,35,16,16,35,16,0,0,0,0,0,0,0,0,0,36,36,0,0,0,0,0,16,16,36,36,0,1,1,1,1,20,25,29,30,32,1,1,1,1,43,1,20,15,22,23,24,13,25,27,29,30,32,34,35,36,16,43,1,20,15,22,23,24,13,25,27,29,30,32,34,35,36,16,1,1,20,20,15,22,23,24,13,25,25,27,29,29,30,30,32,32,34,35,36,16,20,15,22,23,24,13,25,27,29,30,32,34,35,36,16,1,0,0,20,15,22,23,24,13,29,30,32,20,15,22,23,24,13,29,30,32,20,15,22,23,24,13,29,30,32,1,0,1,29,30,43,1,20,15,22,23,24,13,25,27,29,29,30,30,32,32,34,35,36,16,43,1,20,15,22,23,24,13,25,27,29,29,30,30,32,32,34,35,36,16,20,15,22,23,24,13,27,29,30,32,43,43,1,20,15,22,23,24,13,25,27,29,30,32,34,35,36,16,20,29,30,32,1,20,15,22,23,24,13,29,30,32,34,35,36,16,20,29,30,32,30,1,20,20,15,22,23,24,13,25,27,29,29,30,30,32,32,34,35,36,36,16,16,43,1,20,15,22,23,24,13,25,27,29,30,32,34,35,36,16,16,20,15,22,23,24,24,13,29,30,32,1,1,20,15,22,23,24,13,29,30,32,34,35,36,16,43,1,20,15,22,23,24,13,25,27,29,30,32,34,35,36,16,43,1,20,15,22,23,24,13,25,27,29,30,32,34,35,36,16,27,1,20,20,25,25,29,29,30,30,32,32,1,20,1,1,36,16,1,1,1,1,20,15,22,23,24,13,27,29,30,32,20,23,20,15,22,23,24,24,13,29,30,32,43,24,20,15,22,23,24,13,25,27,29,30,32,34,35,36,16,20,29,30,32,36,16,43,43,1,20,15,22,23,24,13,25,27,29,30,32,34,35,36,16,43,1,20,15,22,23,24,13,25,27,29,30,32,34,35,36,16,43,1,20,15,22,23,24,13,25,27,29,30,32,34,35,36,16,25,43,1,1,23,43,1,20,15,22,23,24,13,25,27,29,30,32,34,35,36,16,0,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,0,0,0,62,77,78,62,77,78,62,77,78,62,77,78,78,78,78,62,77,78,62,77,78,62,77,78,62,77,78,77,78,62,77,62,77,78,62,77,78,62,78,62,77,78,62,77,78,62,77,62,77,78,77,62,62,62,62,77,78,62,62,77,78,62,77,78,62,77,78,62,62,77,78,79,0,0,0,79,0,0,83,83,79,0,0,0,0,79,0,0,79,0,0,79,0,0,0,83,83,80,79,80,81,85,86,87,88,89,90,82,91,83,92,93,84,59,79,80,81,85,86,87,88,89,90,82,91,83,92,93,84,59,79,80,81,82,83,84,59,79,80,81,82,83,84,59,81,85,86,87,88,89,90,82,91,83,92,93,84,59,81,85,86,87,88,89,90,82,91,83,92,93,84,59,81,85,86,87,88,89,90,82,91,83,92,93,84,59,59,79,80,81,85,86,87,88,89,90,82,91,83,92,93,84,59,79,80,81,85,86,87,88,89,90,82,91,83,92,93,84,59,59,79,80,81,85,86,87,88,89,90,82,91,83,92,93,84,59,81,79,79,81,85,86,87,88,89,90,82,91,83,92,93,84,59,79,80,81,85,86,87,88,89,90,82,91,83,92,93,84,59,81,81,85,85,86,86,87,87,88,88,89,89,90,90,82,82,91,91,83,83,92,92,93,93,84,84,59,80,81,80,79,80,81,85,86,87,88,89,90,82,91,83,92,93,84,59,79,80,81,85,86,87,88,89,90,82,91,83,92,93,84,59,80,79,80,80,80,80,80,86,88,88,89,81,86,88,82,83,84,59,80,59,81,81,85,85,86,86,87,87,88,88,89,89,90,90,82,82,91,91,83,83,92,92,93,93,84,84,59,79,80,81,82,83,84,59,79,79,80,81,85,86,87,88,89,90,82,91,83,92,93,84,59,79,80,81,85,86,87,88,89,90,82,91,83,92,93,84,59,79,80,81,85,86,87,88,89,90,82,91,83,92,93,84,59,79,80,81,85,86,87,88,89,90,82,91,83,92,93,84,59],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[1,[[4,[[3,[1]]]]]],[[1,5,6],[[9,[[8,[7]]]]]],[[1,6,10],[[9,[[8,[7]]]]]],[[],11],[[],11],[[],11],[[],11],[[],11],[[1,6,12],[[9,[[8,[7]]]]]],[[1,6],[[9,[[8,[7]]]]]],[[1,6,4],[[9,[[8,[7]]]]]],[[1,[14,[13]]],[[17,[15,16]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[1,[0,[18,19]]]],0,[20,20],[[],21],[15,15],[22,22],[23,23],[24,24],[13,13],[25,25],[[],26],[27,27],[[],28],[29,29],[30,30],[[],31],[32,32],[[],33],[34,34],[35,35],[36,36],[16,16],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[1,[37,[15]],4]],0,0,[38,[[17,[20,39]]]],[38,[[17,[15,39]]]],[38,[[17,[22,39]]]],[38,[[17,[23,39]]]],[38,[[17,[24,39]]]],[38,[[17,[13,39]]]],[38,[[17,[29,39]]]],[38,[[17,[30,39]]]],[38,[[17,[32,39]]]],[20,[[17,[40,41]]]],[15,[[17,[40,41]]]],[22,[[17,[40,41]]]],[23,[[17,[40,41]]]],[24,[[17,[40,41]]]],[13,[[17,[40,41]]]],[29,[[17,[40,41]]]],[30,[[17,[40,41]]]],[32,[[17,[40,41]]]],[42,[[17,[40,41]]]],[42,[[17,[40,41]]]],[42,[[17,[40,41]]]],[42,[[17,[40,41]]]],[42,[[17,[40,41]]]],[42,[[17,[40,41]]]],[42,[[17,[40,41]]]],[42,[[17,[40,41]]]],[42,[[17,[40,41]]]],[[1,6],[[9,[[8,[7]]]]]],0,[1],[[],29],[[],30],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[29],[40],[30],[40],[32],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[29],[40],[40],[30],[32],[40],[40],[40],[40],[40],[[],[[17,[20]]]],[[],[[17,[15]]]],[[],[[17,[22]]]],[[],[[17,[23]]]],[[],[[17,[24]]]],[[],[[17,[13]]]],[[],[[17,[27]]]],[[],[[17,[29]]]],[[],[[17,[30]]]],[[],[[17,[32]]]],[[43,44,45,46,47],[[9,[[8,[7]]]]]],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[[],48],[[],48],[[],48],[[],48],[[1,49,6],[[9,[[8,[7]]]]]],[[20,20],50],[[15,15],50],[[22,22],50],[[23,23],50],[[24,24],50],[[13,13],50],[[29,29],50],[[30,30],50],[[32,32],50],[[34,34],50],[[35,35],50],[[36,36],50],[[16,16],50],[21,50],[28,50],[31,50],[33,50],[[30,51]],[[1,52],53],[[20,52],53],[[20,52],53],[[15,52],53],[[22,52],53],[[23,52],53],[[24,52],53],[[13,52],53],[[25,52],53],[[27,52],53],[[29,52],53],[[29,52],53],[[30,52],53],[[30,52],53],[[32,52],53],[[32,52],53],[[34,52],53],[[35,52],53],[[36,52],53],[[36,52],53],[[16,52],53],[[16,52],53],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[54,16],[38,[[17,[55]]]],[38,[[17,[55]]]],[38,[[17,[55]]]],[38,[[17,[55]]]],[[],24],[38,[[17,[55]]]],[38,[[17,[55]]]],[38,[[17,[55]]]],[38,[[17,[55]]]],[38,[[17,[55]]]],[[1,6,56],[[17,[57]]]],[[1,6,58],[[37,[59]]]],[20],[15],[22],[23],[24],[13],[29],[30],[32],[34],[35],[36],[16],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[1,60],[20,60],[[],61],[[],61],[25,60],[29,60],[[],61],[30,60],[[],61],[[],61],[32,60],[62,1],0,[[1,6,10],[[9,[[8,[7]]]]]],[[1,6,45,10,15]],[63],[63],[1,[[66,[64,65]]]],0,0,0,[20,17],[15,17],[22,17],[23,17],[24,17],[13,17],[27,17],[29,17],[30,17],[32,17],0,[23,58],[[],[[4,[67,68]]]],[[],[[4,[67,68]]]],[[],[[4,[67,68]]]],[[],[[4,[67,68]]]],[[],[[4,[67,68]]]],[24,[[4,[67]]]],[[],[[4,[67,68]]]],[[],[[4,[67,68]]]],[[],[[4,[67,68]]]],[[],[[4,[67,68]]]],[[43,69],[[71,[70]]]],[24,72],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[43,46]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[],74],0,[[43,45,69],71],[[1,5,6],[[9,[[8,[7]]]]]],[[1,6],[[9,[[8,[7]]]]]],[[23,65],50],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[75,75],[[]],[76,[[17,[21,39]]]],[76,[[17,[21,39]]]],[76,[[17,[28,39]]]],[76,[[17,[28,39]]]],[76,[[17,[31,39]]]],[76,[[17,[31,39]]]],[76,[[17,[33,39]]]],[76,[[17,[33,39]]]],[[],75],[40],[40],[40],[[75,52],53],[[]],[[],40],[[]],[[]],[[],17],[[],17],[[],74],[[]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[62,62],[77,77],[78,78],[[]],[[]],[[]],0,0,[[],78],[40],[40],[40],[40],[40],[40],[[],[[17,[62]]]],[[],[[17,[77]]]],[[],[[17,[78]]]],[40],[40],[40],[[77,77],50],[[78,78],50],0,0,[[62,52],53],[[77,52],53],[[78,52],53],[[]],[[]],[[]],[[],62],[78],[[],40],[[],40],[[],40],[[]],[[]],[[]],0,0,[62,17],[77,17],[78,17],0,0,0,[62,70],[[]],[[]],[[]],[62],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],74],[[],74],[[],74],[[62,45],71],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[79,79],[80,80],[81,81],[82,82],[83,83],[84,84],[59,59],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[38,[[17,[81,39]]]],[38,[[17,[85,39]]]],[38,[[17,[86,39]]]],[38,[[17,[87,39]]]],[38,[[17,[88,39]]]],[38,[[17,[89,39]]]],[38,[[17,[90,39]]]],[38,[[17,[82,39]]]],[38,[[17,[91,39]]]],[38,[[17,[83,39]]]],[38,[[17,[92,39]]]],[38,[[17,[93,39]]]],[38,[[17,[84,39]]]],[38,[[17,[59,39]]]],[81,[[17,[40,41]]]],[85,[[17,[40,41]]]],[86,[[17,[40,41]]]],[87,[[17,[40,41]]]],[88,[[17,[40,41]]]],[89,[[17,[40,41]]]],[90,[[17,[40,41]]]],[82,[[17,[40,41]]]],[91,[[17,[40,41]]]],[83,[[17,[40,41]]]],[92,[[17,[40,41]]]],[93,[[17,[40,41]]]],[84,[[17,[40,41]]]],[59,[[17,[40,41]]]],[42,[[17,[40,41]]]],[42,[[17,[40,41]]]],[42,[[17,[40,41]]]],[42,[[17,[40,41]]]],[42,[[17,[40,41]]]],[42,[[17,[40,41]]]],[42,[[17,[40,41]]]],[42,[[17,[40,41]]]],[42,[[17,[40,41]]]],[42,[[17,[40,41]]]],[42,[[17,[40,41]]]],[42,[[17,[40,41]]]],[42,[[17,[40,41]]]],[42,[[17,[40,41]]]],0,[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[[],[[17,[59]]]],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[[81,81],50],[[79,52],53],[[79,52],53],[[81,52],53],[[85,52],53],[[86,52],53],[[87,52],53],[[88,52],53],[[89,52],53],[[90,52],53],[[82,52],53],[[91,52],53],[[83,52],53],[[92,52],53],[[93,52],53],[[84,52],53],[[59,52],53],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[38,[[17,[55]]]],[38,[[17,[55]]]],[38,[[17,[55]]]],[38,[[17,[55]]]],[38,[[17,[55]]]],[38,[[17,[55]]]],[38,[[17,[55]]]],[38,[[17,[55]]]],[38,[[17,[55]]]],[38,[[17,[55]]]],[38,[[17,[55]]]],[38,[[17,[55]]]],[38,[[17,[55]]]],[38,[[17,[55]]]],[38,[[17,[55]]]],[38,[[17,[55]]]],[38,[[17,[55]]]],[38,[[17,[55]]]],[38,[[17,[55]]]],[38,[[17,[55]]]],[38,[[17,[55]]]],[38,[[17,[55]]]],[38,[[17,[55]]]],[38,[[17,[55]]]],[38,[[17,[55]]]],[38,[[17,[55]]]],[38,[[17,[55]]]],[[80,40],[[37,[79]]]],[81],0,[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],80],[80,40],0,[80,37],[80,37],[[80,40],37],0,0,0,0,[81,17],[86,17],[88,17],[82,17],[83,17],[84,17],[59,17],[80],0,[[],[[4,[67,68]]]],[[],[[4,[67,68]]]],[[],[[4,[67,68]]]],[[],[[4,[67,68]]]],[[],[[4,[67,68]]]],[[],[[4,[67,68]]]],[[],[[4,[67,68]]]],[[],[[4,[67,68]]]],[[],[[4,[67,68]]]],[[],[[4,[67,68]]]],[[],[[4,[67,68]]]],[[],[[4,[67,68]]]],[[],[[4,[67,68]]]],[[],[[4,[67,68]]]],[[],[[4,[67,68]]]],[[],[[4,[67,68]]]],[[],[[4,[67,68]]]],[[],[[4,[67,68]]]],[[],[[4,[67,68]]]],[[],[[4,[67,68]]]],[[],[[4,[67,68]]]],[[],[[4,[67,68]]]],[[],[[4,[67,68]]]],[[],[[4,[67,68]]]],[[],[[4,[67,68]]]],[[],[[4,[67,68]]]],[[],[[4,[67,68]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],73],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]]],"p":[[3,"Mint"],[15,"str"],[3,"ApiEndpoint"],[3,"Vec"],[8,"ModuleInterconect"],[3,"DatabaseTransaction"],[8,"Future"],[3,"Box"],[3,"Pin"],[3,"OutPoint"],[8,"Any"],[3,"Audit"],[3,"BlindNonce"],[3,"TieredMulti"],[3,"OutputConfirmationSignatures"],[4,"MintError"],[4,"Result"],[8,"Iterator"],[8,"Send"],[3,"MintOutputConfirmation"],[3,"ConsensusItem"],[3,"OutputOutcome"],[3,"Note"],[3,"Nonce"],[3,"VerificationCache"],[3,"VerificationCache"],[3,"MintConfigGenParams"],[3,"Input"],[3,"MintInput"],[3,"MintOutput"],[3,"Output"],[3,"MintOutputOutcome"],[3,"OutputOutcome"],[3,"MintShareErrors"],[4,"PeerErrorType"],[4,"CombineError"],[4,"Option"],[3,"ModuleDecoderRegistry"],[3,"DecodeError"],[15,"usize"],[3,"Error"],[8,"Write"],[3,"MintConfigGenerator"],[3,"MuxPeerConnections"],[3,"PeerId"],[3,"ConfigGenParams"],[3,"TaskGroup"],[15,"u64"],[3,"HashSet"],[15,"bool"],[8,"IntoIterator"],[3,"Formatter"],[6,"Result"],[3,"InvalidAmountTierError"],[4,"DecodingError"],[3,"SignedBackupRequest"],[3,"ApiError"],[3,"XOnlyPublicKey"],[3,"ECashUserBackupSnapshot"],[6,"ModuleKey"],[15,"u16"],[3,"MintConfig"],[3,"Demand"],[3,"Amount"],[3,"AggregatePublicKey"],[3,"HashMap"],[15,"u8"],[3,"Global"],[3,"ServerModuleConfig"],[3,"ClientModuleConfig"],[6,"Result"],[3,"Message"],[3,"String"],[3,"TypeId"],[3,"MintModuleDecoder"],[8,"Read"],[3,"MintClientConfig"],[3,"FeeConsensus"],[4,"DbKeyPrefix"],[3,"DbKeyPrefixIter"],[3,"NonceKey"],[3,"OutputOutcomeKey"],[4,"MintAuditItemKey"],[3,"EcashBackupKey"],[3,"NonceKeyPrefix"],[3,"ProposedPartialSignatureKey"],[3,"ProposedPartialSignaturesKeyPrefix"],[3,"ReceivedPartialSignatureKey"],[3,"ReceivedPartialSignatureKeyOutputPrefix"],[3,"ReceivedPartialSignaturesKeyPrefix"],[3,"OutputOutcomeKeyPrefix"],[3,"MintAuditItemKeyPrefix"],[3,"EcashBackupKeyPrefix"]]},\
"fedimint_rocksdb":{"doc":"","t":[3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,2,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["RocksDb","RocksDbReadOnly","RocksDbTransaction","begin_transaction","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","commit_tx","commit_tx","fmt","from","from","from","from","inner","into","into","into","open","open_read_only","raw_find_by_prefix","raw_find_by_prefix","raw_get_bytes","raw_get_bytes","raw_insert_bytes","raw_insert_bytes","raw_remove_entry","raw_remove_entry","rocksdb","rollback_tx_to_savepoint","rollback_tx_to_savepoint","set_tx_savepoint","set_tx_savepoint","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip"],"q":["fedimint_rocksdb","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,1,6,7,1,6,7,1,6,7,1,6,7,1,1,1,6,7,1,1,6,6,7,6,7,6,7,6,7,0,6,7,6,7,6,7,1,6,7,1,6,7,1,6,7,1],"f":[0,0,0,[[1,2],[[5,[[4,[3]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[[4,[6]]],[[5,[[4,[3]]]]]],[[[4,[7]]],[[5,[[4,[3]]]]]],[[1,8],9],[[]],[[]],[[]],[10,1],[1,10],[[]],[[]],[[]],[[[12,[11]]],[[14,[1,13]]]],[[[12,[11]]],[[14,[6,13]]]],[6,[[5,[[4,[3]]]]]],[7,[[5,[[4,[3]]]]]],[6,[[5,[[4,[3]]]]]],[7,[[5,[[4,[3]]]]]],[[6,[16,[15]]],[[5,[[4,[3]]]]]],[[7,[16,[15]]],[[5,[[4,[3]]]]]],[6,[[5,[[4,[3]]]]]],[7,[[5,[[4,[3]]]]]],0,[6,[[5,[[4,[3]]]]]],[7,[[5,[[4,[3]]]]]],[6,[[5,[[4,[3]]]]]],[7,[[5,[[4,[3]]]]]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],18],[[],18],[[],18],[[]],[[]],[[]]],"p":[[3,"RocksDb"],[3,"ModuleDecoderRegistry"],[8,"Future"],[3,"Box"],[3,"Pin"],[3,"RocksDbReadOnly"],[3,"RocksDbTransaction"],[3,"Formatter"],[6,"Result"],[6,"OptimisticTransactionDB"],[3,"Path"],[8,"AsRef"],[3,"Error"],[6,"Result"],[15,"u8"],[3,"Vec"],[4,"Result"],[3,"TypeId"]]},\
"fedimint_server":{"doc":"","t":[13,4,4,6,3,13,17,3,6,13,13,5,12,11,11,11,11,11,11,11,11,11,12,11,11,0,12,0,12,0,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,12,5,0,0,0,11,11,11,0,12,11,11,11,11,12,11,0,11,11,11,12,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,17,13,13,4,3,3,3,3,11,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,12,12,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,5,12,12,12,12,12,12,12,11,11,12,0,0,0,11,11,11,12,12,12,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,5,5,3,6,3,3,3,3,6,13,6,13,13,4,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,12,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,0,11,11,11,11,11,11,11,12,12,11,12,11,11,11,11,12,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,3,11,11,11,11,11,11,12,11,11,11,11,11,11,11,13,3,3,4,3,13,3,3,13,3,3,13,3,13,3,3,13,3,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,4,3,13,3,3,4,13,13,13,8,13,13,13,13,3,3,3,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,13,13,13,3,13,3,13,13,13,13,13,3,3,3,3,3,4,4,4,3,13,13,13,13,13,13,13,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,13,3,4,3,4,4,3,4,8,13,13,13,13,13,13,13,3,13,3,3,13,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,3,3,3,3,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,12,11,12,11,11,11,11,11,12,11,13,3,3,13,3,3,13,3,3,4,3,13,3,3,13,3,3,13,3,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,4,13,13,13,13,13,13,13,3,3,3,4,3,3,3,3,3,13,13,3,3,3,3,4,13,13,13,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,4,3,3,13,3,3,13,13,13,4,3,3,3,13,3,3,13,3,3,13,3,3,3,13,13,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,17,13,13,13,8,13,13,13,6,13,6,13,3,13,3,13,3,3,4,3,13,3,13,13,3,13,13,13,3,3,3,3,3,4,4,3,3,3,3,13,13,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,12,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,0,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,12,12,12,12,12,5,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,0,12,12,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,3,3,4,3,13,3,3,13,3,3,13,3,3,13,3,3,3,13,3,3,13,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,8,10,10,13,3,4,13,13,13,3,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,17,6,6,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,12,12,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,0,0,0,3,5,5,11,11,11,11,11,11,11,12,11,11,11,11,5,5,11,11,11,11,11,6,6,6,8,3,6,3,3,11,11,11,11,11,11,11,11,12,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,0,11,11,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,12,12,11,11,11,11,11,11,5,11,11,11,11,12,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,6,3,3,6,6,8,6,12,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,3,13,3,3,13,3,17,3,3,4,3,6,3,8,3,12,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,12,12,12,10,12,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,3,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,13,13,4,8,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,16,8,10,13,13,3,3,4,13,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,0,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,4,13,13,13,13,4,3,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Continue","CoreError","EpochMessage","EpochStep","FedimintServer","MismatchingVariant","NUM_EPOCHS_REJOIN_AHEAD","OsRngGen","PeerMessage","PendingPreimage","RejoinRequest","all_decoders","api","await_next_epoch","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cfg","clone","clone_into","config","connections","consensus","consensus","db","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","drop","epoch","fmt","fmt","fmt","from","from","from","from","get_rng","handle_message","handle_step","hbbft","init","init","init","init","into","into","into","into","is_retryable","last_processed_epoch","module_parse_outcome","modules","multiplexed","net","new","new_with","next_epoch_to_process","outcome","peers","process_outcome","propose_epoch","provide","rejoin_at_epoch","rejoin_at_epoch","request_rejoin","rng","run","run_consensus","run_consensus_epoch","run_empty_epochs","serialize","start_consensus","start_next_epoch","to_owned","to_string","transaction","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","DEFAULT_MAX_CLIENT_CONNECTIONS","Epoch","Hbbft","KeyType","Peer","PeerServerParams","ServerConfig","ServerConfigParams","add_modules","address","api","api_addr","api_bind_addr","base_port","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cert","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","connect","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","distributed_gen","drop","drop","drop","drop","drop","epoch_pk_set","epoch_sks","eq","equivalent","federation_name","federation_name","fmt","fmt","fmt","fmt","from","from","from","from","from","from","gen_cert_and_key","gen_denominations","gen_local","gen_network","gen_params","get_client_config","get_incoming_count","get_module_config","get_or_error","hash","hbbft","hbbft","hbbft_bind_addr","hbbft_pk_set","hbbft_sks","identity","init","init","init","init","init","into","into","into","into","into","load_from_file","max_connections","modules","modules_consensus","modules_local","modules_private","name","name","network_config","peers","peers","serde_binary_human_readable","serde_tls_cert","serde_tls_key","serialize","serialize","serialize","server_dkg","tls","tls_cert","tls_cert","tls_config","tls_key","to_client_config","to_owned","to_owned","to_owned","to_owned","trusted_dealer_gen","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","validate_config","vzip","vzip","vzip","vzip","vzip","deserialize","serialize","deserialize","serialize","deserialize","serialize","AcceptedTransaction","ConsensusOutcome","ConsensusOutcomeConversion","ConsensusProposal","FedimintConsensus","FundingVerifier","HoneyBadgerMessage","ModuleError","SerdeConsensusOutcome","TransactionConflictError","TransactionError","TransactionSubmissionError","VerificationCaches","add_input","add_output","audit","await_consensus_proposal","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_interconnect","build_verification_caches","caches","cfg","clone","clone","clone","clone_into","clone_into","clone_into","consensus_decode","consensus_encode","consensus_encode_dyn","database_transaction","db","debug","decoders","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop_peers","epoch","epoch_history","eq","eq","equivalent","fee_amount","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_bytes","get_cache","get_consensus_proposal","get_last_epoch","hash","init","init","init","init","init","init","init","input_amount","interconnect","into","into","into","into","into","into","into","items","modules","new","output_amount","process_consensus_outcome","process_transaction","provide","register_module","rng_gen","save_epoch_history","source","submit_transaction","to_bytes","to_owned","to_owned","to_owned","to_string","transaction","transaction_notify","transaction_status","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","verify_funding","vzip","vzip","vzip","vzip","vzip","vzip","vzip","epoch_message","item_message","FedimintInterconnect","borrow","borrow_mut","call","deref","deref_mut","drop","fedimint","from","init","into","try_from","try_into","type_id","vzip","AcceptedTransaction","AcceptedTransactionKey","AcceptedTransactionKeyPrefix","DbKeyPrefix","DbKeyPrefixIter","DropPeer","DropPeerKey","DropPeerKeyPrefix","EpochHistory","EpochHistoryKey","EpochHistoryKeyPrefix","LastEpoch","LastEpochKey","ProposedTransaction","ProposedTransactionKey","ProposedTransactionKeyPrefix","RejectedTransaction","RejectedTransactionKey","RejectedTransactionKeyPrefix","back_idx","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","get","idx","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","iter","len","marker","next","next_back","nth","serialize","serialize","serialize","serialize","serialize","serialize","size_hint","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","ConsensusItem","EpochHistory","EpochInfo","EpochSignature","EpochSignatureShare","EpochVerifyError","InvalidEpochHash","InvalidPreviousEpochHash","InvalidSignature","IterUnzipConsensusItem","MissingPreviousEpoch","MissingSignature","Module","NotEnoughValidSigShares","OutcomeHistory","SerdeConsensusItem","SerdeEpochHistory","Transaction","UnzipConsensusItem","add_sig_to_prev","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","epoch","epoch_info","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","hash","hash","hash","hash","hash","hash","hash","hash","hash","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","items","last_hash","module","new","outcome","serialize","serialize","serialize","serialize","signature","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","transaction","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_inner","try_into_inner","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unzip_consensus_item","verify_hash","verify_sig","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","CancelOutgoing","Contract","Contract","ContractAccount","ContractNotReady","ContractOutput","InsufficientFunds","InsufficientIncomingFunding","InvalidCancellationSignature","InvalidEncryptedPreimage","InvalidPreimage","LightningConsensusItem","LightningGateway","LightningInput","LightningModule","LightningModuleConfigGen","LightningModuleError","LightningOutput","LightningOutputOutcome","LightningVerificationCache","MissingPreimage","NoOffer","NotOutgoingContract","Offer","Offer","UnknownContract","ZeroOutput","amount","amount","amount","api","api_base_name","api_endpoints","apply_input","apply_output","as_any","as_any","as_any","as_any","as_any","audit","await_consensus_proposal","begin_consensus_epoch","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_verification_cache","cfg","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","common","config","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_proposal","contract","contract","contract_id","contract_id","contracts","db","decoder","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","distributed_gen","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dyn_hash","dyn_hash","dyn_hash","dyn_hash","end_consensus_epoch","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_eq","erased_eq","erased_eq","erased_eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","get_contract_account","get_offer","get_offers","hash","hash","hash","hash","hash","hash","hash","hash","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","list_gateways","mint_pub_key","module_key","module_key","module_key","module_key","module_key","module_key","module_key","module_key","module_key","module_key","module_key","new","node_pub_key","output_status","provide","register_gateway","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","share","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_client_config","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","trusted_dealer_gen","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_outcome","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","validate_config","validate_input","validate_output","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","witness","contract","gateway_signature","id","id","outcome","LightningModuleDecoder","borrow","borrow_mut","clone","clone_into","decode_consensus_item","decode_consensus_item","decode_input","decode_input","decode_output","decode_output","decode_output_outcome","decode_output_outcome","default","deref","deref_mut","drop","fmt","from","init","into","to_owned","try_from","try_into","type_id","vzip","FeeConsensus","LightningModuleClientConfig","LightningModuleConfig","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","contract_input","contract_output","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","eq","eq","equivalent","equivalent","fee_consensus","fee_consensus","fmt","fmt","fmt","from","from","from","from_parts","hash","hash","init","init","init","into","into","into","serialize","serialize","serialize","threshold","threshold_pub_key","threshold_pub_keys","threshold_sec_key","to_client_config","to_owned","to_owned","to_owned","to_parts","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","validate_config","vzip","vzip","vzip","Account","Account","Account","AccountContractOutcome","Contract","ContractId","ContractOutcome","DecryptedPreimage","EncryptedPreimage","FundedContract","IdentifyableContract","Incoming","Incoming","Incoming","Invalid","Outgoing","Outgoing","Outgoing","OutgoingContractOutcome","Pending","Preimage","PreimageDecryptionShare","Some","account","all_zeros","as_bits","as_hash","as_inner","as_ref","base32_len","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_base32","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","contract_id","contract_id","contract_id","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","encode_hex","encode_hex_upper","engine","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_byte_iter","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_engine","from_hash","from_inner","from_slice","from_slice_delegated","from_str","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","incoming","index","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into_inner","new","outgoing","partial_cmp","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_funded","to_hex","to_outcome","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_public_key","to_string","try_as_bits","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_outcome","try_into_outcome","try_into_outcome","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","write_base32","AccountContract","borrow","borrow_mut","clone","clone_into","consensus_decode","consensus_encode","consensus_encode_dyn","contract_id","deref","deref_mut","deserialize","drop","eq","equivalent","fmt","from","from_bytes","hash","init","into","key","serialize","to_bytes","to_owned","try_from","try_into","type_id","vzip","FundedIncomingContract","IncomingContract","IncomingContractOffer","OfferId","all_zeros","amount","as_bits","as_hash","as_inner","as_ref","base32_len","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_base32","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","contract","contract_id","decrypted_preimage","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","encode_hex","encode_hex_upper","encrypted_preimage","encrypted_preimage","engine","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","expiry_time","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_byte_iter","from_bytes","from_bytes","from_bytes","from_bytes","from_engine","from_hash","from_inner","from_slice","from_slice_delegated","from_str","gateway_key","hash","hash","hash","hash","hash","hash","id","index","init","init","init","init","into","into","into","into","into_inner","out_point","partial_cmp","serialize","serialize","serialize","serialize","to_bytes","to_bytes","to_bytes","to_bytes","to_hex","to_owned","to_owned","to_owned","to_owned","to_string","try_as_bits","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into_outcome","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","write_base32","OutgoingContract","borrow","borrow_mut","cancellation_message","cancelled","clone","clone_into","consensus_decode","consensus_encode","consensus_encode_dyn","contract_id","deref","deref_mut","deserialize","drop","eq","equivalent","fmt","from","from_bytes","gateway_key","hash","hash","init","into","invoice","serialize","timelock","to_bytes","to_owned","try_from","try_into","type_id","user_key","vzip","AgreedDecryptionShare","AgreedDecryptionShareKey","AgreedDecryptionShareKeyPrefix","Contract","ContractKey","ContractKeyPrefix","ContractUpdate","ContractUpdateKey","ContractUpdateKeyPrefix","DbKeyPrefix","DbKeyPrefixIter","LightningGateway","LightningGatewayKey","LightningGatewayKeyPrefix","Offer","OfferKey","OfferKeyPrefix","ProposeDecryptionShare","ProposeDecryptionShareKey","ProposeDecryptionShareKeyPrefix","back_idx","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","idx","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","iter","len","marker","next","next_back","nth","serialize","serialize","serialize","serialize","serialize","serialize","size_hint","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","BlindNonce","CombineError","DifferentNonce","DifferentStructureSigShare","InvalidAmountTier","InvalidAmountTier","InvalidCoin","InvalidSignature","InvalidSignature","Mint","MintConfigGenParams","MintConfigGenerator","MintError","MintInput","MintOutput","MintOutputConfirmation","MintOutputOutcome","MintShareErrors","MultiplePeerContributions","NoOwnContribution","Nonce","Note","OutputConfirmationSignatures","OutputOutcome","PeerErrorType","SpentCoin","TooFewCoins","TooFewShares","TooFewValidShares","VerificationCache","api_base_name","api_endpoints","apply_input","apply_output","as_any","as_any","as_any","as_any","as_any","audit","await_consensus_proposal","begin_consensus_epoch","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_verification_cache","cfg","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","common","config","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_proposal","db","decoder","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","distributed_gen","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dyn_hash","dyn_hash","dyn_hash","dyn_hash","end_consensus_epoch","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_eq","erased_eq","erased_eq","erased_eq","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","mint_amounts","module_key","module_key","module_key","module_key","module_key","module_key","module_key","module_key","module_key","module_key","module_key","new","out_point","output_status","provide","provide","pub_key","pub_key","pub_key_shares","sec_key","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","signatures","spend_key","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_client_config","to_message","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","trusted_dealer_gen","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_outcome","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","valid_coins","validate_config","validate_input","validate_output","verify","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","MintModuleDecoder","borrow","borrow_mut","clone","clone_into","decode_consensus_item","decode_consensus_item","decode_input","decode_input","decode_output","decode_output","decode_output_outcome","decode_output_outcome","default","deref","deref_mut","drop","fmt","from","init","into","to_owned","try_from","try_into","type_id","vzip","FeeConsensus","MintClientConfig","MintConfig","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","coin_issuance_abs","coin_spend_abs","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","eq","eq","equivalent","equivalent","fee_consensus","fee_consensus","fmt","fmt","fmt","from","from","from","from_parts","hash","init","init","init","into","into","into","peer_tbs_pks","peer_tbs_pks","serialize","serialize","serialize","tbs_pks","tbs_sks","threshold","to_client_config","to_owned","to_owned","to_owned","to_parts","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","validate_config","vzip","vzip","vzip","CoinNonce","DbKeyPrefix","DbKeyPrefixIter","ECashUserBackupSnapshot","EcashBackup","EcashBackupKey","EcashBackupKeyPrefix","Issuance","IssuanceTotal","MintAuditItem","MintAuditItemKey","MintAuditItemKeyPrefix","NonceKey","NonceKeyPrefix","OutputOutcome","OutputOutcomeKey","OutputOutcomeKeyPrefix","ProposedPartialSig","ProposedPartialSignatureKey","ProposedPartialSignaturesKeyPrefix","ReceivedPartialSig","ReceivedPartialSignatureKey","ReceivedPartialSignatureKeyOutputPrefix","ReceivedPartialSignaturesKeyPrefix","Redemption","RedemptionTotal","back_idx","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","data","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","hash","idx","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","iter","len","marker","next","next_back","nth","out_point","peer_id","request_id","request_id","serialize","serialize","serialize","serialize","serialize","serialize","serialize","size_hint","timestamp","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","CONFIRMATION_TARGET","DuplicateSignature","ErrorFinalizingPsbt","InvalidSignature","IterUnzipWalletConsensusItem","MalformedSignature","MissingOrMalformedChangeTweak","NotEnoughSpendableUTXO","PartialSig","PegInAlreadyClaimed","PegInDescriptor","PegInProofError","PegOut","PegOutFeeRate","PegOutFees","PegOutSignature","PegOutSignatureItem","PendingTransaction","ProcessPegOutSigError","RoundConsensus","RoundConsensus","RoundConsensusItem","RpcError","SighashError","SpendableUTXO","UnknownNetwork","UnknownPegInProofBlock","UnknownTransaction","UnsignedTransaction","UnzipWalletConsensusItem","Wallet","WalletConfigGenParams","WalletConfigGenerator","WalletConsensusItem","WalletError","WalletInput","WalletOutput","WalletOutputOutcome","WalletVerificationCache","WrongNetwork","WrongSignatureCount","amount","amount","amount","api_base_name","api_endpoints","apply_input","apply_output","as_any","as_any","as_any","as_any","as_any","audit","await_consensus_proposal","begin_consensus_epoch","bitcoin_rpc","block_height","block_height","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","broadcast_pending_tx","btc_rpc","build_verification_cache","cfg","change","change","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","common","config","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_height","consensus_proposal","current_round_consensus","db","decoder","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","distributed_gen","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dyn_hash","dyn_hash","dyn_hash","dyn_hash","end_consensus_epoch","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_eq","erased_eq","erased_eq","erased_eq","fee_rate","fee_rate","fee_rate","fees","fees","finality_delay","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","get_wallet_value","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_address_valid_for_network","keys","module_key","module_key","module_key","module_key","module_key","module_key","module_key","module_key","module_key","module_key","module_key","network","new_with_bitcoind","output_status","peg_out_signature","process_randomness_contributions","provide","provide","psbt","randomness","randomness_beacon","recipient","round_consensus","run_broadcast_pending_tx","secp","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","signature","signatures","source","target_height","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_client_config","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","total_weight","trusted_dealer_gen","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_outcome","tweak","tweak","tweakable","tx","txid","txoproof","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unzip_wallet_consensus_item","validate_config","validate_input","validate_output","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","WalletModuleDecoder","borrow","borrow_mut","clone","clone_into","decode_consensus_item","decode_consensus_item","decode_input","decode_input","decode_output","decode_output","decode_output_outcome","decode_output_outcome","default","deref","deref_mut","drop","fmt","from","init","into","to_owned","try_from","try_into","type_id","vzip","FeeConsensus","WalletClientConfig","WalletConfig","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","btc_rpc","clone","clone","clone","clone_into","clone_into","clone_into","default","default_fee","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","eq","eq","equivalent","equivalent","fee_consensus","fee_consensus","finality_delay","finality_delay","fmt","fmt","fmt","from","from","from","from_parts","hash","hash","init","init","init","into","into","into","network","network","new","new","peer_peg_in_keys","peg_in_abs","peg_in_descriptor","peg_in_descriptor","peg_in_key","peg_out_abs","serialize","serialize","serialize","to_client_config","to_owned","to_owned","to_owned","to_parts","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","validate_config","vzip","vzip","vzip","BlockHash","BlockHashKey","BlockHashKeyPrefix","DbKeyPrefix","DbKeyPrefixIter","PegOutBitcoinOutPoint","PegOutBitcoinTransaction","PegOutBitcoinTransactionPrefix","PegOutTxSigCi","PegOutTxSignatureCI","PegOutTxSignatureCIPrefix","PendingTransaction","PendingTransactionKey","PendingTransactionPrefixKey","RoundConsensus","RoundConsensusKey","UTXOKey","UTXOPrefixKey","UnsignedTransaction","UnsignedTransactionKey","UnsignedTransactionPrefixKey","Utxo","back_idx","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","idx","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","iter","len","marker","next","next_back","nth","serialize","serialize","serialize","serialize","serialize","serialize","serialize","size_hint","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","CompressedPublicKey","borrow","borrow_mut","clone","clone_into","cmp","deref","deref_mut","deserialize","drop","eq","equivalent","fmt","fmt","from","from_str","hash","hash_to_hash160","init","into","is_uncompressed","key","new","partial_cmp","serialize","to_hash160","to_hash256","to_owned","to_pubkeyhash","to_public_key","to_ripemd160","to_sha256","to_string","try_from","try_into","tweak","type_id","vzip","Contract","Tweakable","encode","tweak","OutputIndexOutOfRange","PegInProof","PegInProofError","ScriptDoesNotMatch","TooManyTransactionOutputs","TransactionNotInProof","TxOutProof","block","block_header","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","contains_tx","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","drop","drop","drop","eq","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from_bytes","from_bytes","hash","hash","identity","init","init","init","into","into","into","merkle_proof","new","outpoint","output_idx","proof_block","provide","serialize","serialize","to_bytes","to_bytes","to_owned","to_owned","to_string","transaction","try_from","try_from","try_from","try_into","try_into","try_into","tweak_contract_key","tweak_contract_key","tx_output","txout_proof","type_id","type_id","type_id","validate","validate_args","verify","vzip","vzip","vzip","MAX_PEER_OUT_OF_ORDER_MESSAGES","ModuleId","ModuleIdRef","ModuleMultiplexed","ModuleMultiplexerInner","ModuleMultiplexerOutOfOrder","PeerConnectionMultiplexer","ban_peer","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","connections","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","drop","fmt","from","from","from","from","init","init","init","init","inner","into","into","into","into","key","msg","msgs","new","out_of_order","peer_counts","receive","send","serialize","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","api","connect","framed","peers","queue","RpcHandlerCtx","attach_endpoints","attach_endpoints_erased","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","fedimint","fmt","from","init","into","run_server","server_endpoints","to_owned","try_from","try_into","type_id","vzip","AnyConnector","ConnectResult","ConnectionListener","Connector","PeerCertStore","SharedAnyConnector","TlsConfig","TlsTcpConnector","accept_connection","authenticate_peer","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cert_store","clone","clone","clone_into","clone_into","connect_framed","connect_framed","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","fmt","fmt","fmt","from","from","from","get_peer_by_cert","init","init","init","into","into","into","into_dyn","listen","listen","mock","new","new","our_certificate","our_certificate","our_private_key","our_private_key","peer_certificates","peer_certs","peer_certs","peer_names","peer_names","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","MockConnector","MockNetwork","borrow","borrow","borrow_mut","borrow_mut","clients","clients","connect_framed","connector","deref","deref","deref_mut","deref_mut","do_handshake","drop","drop","from","from","id","init","init","into","into","listen","new","timeout","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","AnyFramedTransport","BidiFramed","BincodeCodec","FramedSink","FramedStream","FramedTransport","TcpBidiFramed","_pd","borrow","borrow","borrow_mut","borrow_mut","borrow_parts","borrow_split","borrow_split","decode","deref","deref","deref_mut","deref_mut","drop","drop","encode","fmt","fmt","from","from","init","init","into","into","into_dyn","new","new","new_from_tcp","new_from_tcp","poll_close","poll_flush","poll_next","poll_ready","sink","start_send","stream","try_from","try_from","try_into","try_into","try_poll_next","type_id","type_id","vzip","vzip","CommonPeerConnectionState","Connected","ConnectedPeerConnectionState","ConnectionConfig","Disconnected","DisconnectedPeerConnectionState","MAX_FAIL_RECONNECT_COUNTER","NetworkConfig","PeerConnection","PeerConnectionState","PeerConnectionStateMachine","PeerConnector","PeerMessage","PeerSlice","ReconnectPeerConnections","ack","address","ban_peer","bind_addr","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cfg","clone","clone","clone","clone_into","clone_into","clone_into","common","connect","connect","connection","connections","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","disconnect","disconnect_err","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","failed_reconnect_counter","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","identity","incoming","incoming","incoming_connections","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","last_received","msg","new","new","nodes","outgoing","outgoing","peer","peers","peers","receive","receive","receive_connection","receive_message","receive_message_inner","reconnect","reconnect_at","resend_buffer_contents","resend_queue","run","run_io_thread","run_listen_task","send","send","send_message","send_message_connected","serialize","serialize","serialize","state","state_transition","state_transition_connected","state_transition_disconnected","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_reconnect","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","MessageId","MessageQueue","UniqueMessage","ack","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","drop","drop","drop","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","id","increment","init","init","init","into","into","into","iter","msg","next_id","partial_cmp","partial_cmp","push","queue","serialize","serialize","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","Accepted","Rejected","SerdeOutputOutcome","TransactionStatus","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","eq","eq","equivalent","equivalent","fmt","fmt","from","from","from","hash","hash","init","init","into","into","is_final","legacy","serialize","serialize","to_owned","to_owned","try_from","try_from","try_into","try_into","try_into_inner","type_id","type_id","vzip","vzip","epoch","outputs","LN","Mint","OutputOutcome","TryIntoOutcome","Wallet","borrow","borrow_mut","clone","clone_into","consensus_decode","consensus_encode","consensus_encode_dyn","deref","deref_mut","drop","eq","equivalent","fmt","from","from","from_bytes","hash","init","into","is_final","to_bytes","to_owned","try_from","try_into","try_into_outcome","try_into_variant","type_id","vzip","Rng","RngGenerator","get_rng","InvalidSignature","MissingSignature","SerdeTransaction","Transaction","TransactionError","UnbalancedTransaction","agg_keys","agg_sign","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","consensus_decode","consensus_encode","consensus_encode_dyn","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","eq","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from_bytes","hash","hash","init","init","init","inputs","into","into","into","legacy","outputs","provide","serialize","signature","to_bytes","to_owned","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","try_into_inner","tx_hash","tx_hash_from_parts","type_id","type_id","type_id","validate_signature","vzip","vzip","vzip","fee","inputs","outputs","Input","LN","LN","Mint","Mint","Output","Transaction","Wallet","Wallet","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","drop","drop","drop","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","from_bytes","from_bytes","from_bytes","hash","hash","hash","init","init","init","inputs","into","into","into","into_type_erased","outputs","serialize","serialize","signature","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","tx_hash","tx_hash_from_parts","type_id","type_id","type_id","validate_signature","vzip","vzip","vzip"],"q":["fedimint_server","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_server::config","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_server::config::serde_binary_human_readable","","fedimint_server::config::serde_tls_cert","","fedimint_server::config::serde_tls_key","","fedimint_server::consensus","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_server::consensus::debug","","fedimint_server::consensus::interconnect","","","","","","","","","","","","","","","fedimint_server::dbfedimint_server::epochfedimint_server::modules::lnfedimint_server::modules::ln::LightningOutput","","fedimint_server::modules::ln::LightningOutputOutcome","","","fedimint_server::modules::ln::common","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_server::modules::ln::config","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_server::modules::ln::contractsfedimint_server::modules::ln::contracts::account","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_server::modules::ln::contracts::incoming","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_server::modules::ln::contracts::outgoing","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_server::modules::ln::dbfedimint_server::modules::mintfedimint_server::modules::mint::common","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_server::modules::mint::config","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_server::modules::mint::dbfedimint_server::modules::walletfedimint_server::modules::wallet::common","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_server::modules::wallet::config","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_server::modules::wallet::dbfedimint_server::modules::wallet::keys","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_server::modules::wallet::tweakable","","","","fedimint_server::modules::wallet::txoproof","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_server::multiplexed","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_server::net","","","","","fedimint_server::net::api","","","","","","","","","","","","","","","","","","","","","","fedimint_server::net::connect","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_server::net::connect::mock","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_server::net::framed","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_server::net::peersfedimint_server::net::queue","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_server::outcome","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_server::outcome::TransactionStatus","","fedimint_server::outcome::legacy","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_server::rng","","","fedimint_server::transaction","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_server::transaction::TransactionError","","","fedimint_server::transaction::legacy","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","how many epochs ahead of consensus to rejoin","","","","","","","","","","","","","","","","","","","Fedimint toplevel config","","The actual implementation of the federated mint","","Provides interfaces for ACID-compliant data store backends","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Runs a single HBBFT consensus step","Handles one step of the HBBFT algorithm, sending messages …","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if queried outpoint isn’t ready yet but may …","","","","Implementation of multiplexed peer connections","Networking for mint-to-mint and client-to-mint …","","","Returns the next epoch that we need to process, based on …","","","Requests, verifies and processes history from peers","","","If we are rejoining and received a threshold of messages …","","Sends a rejoin request to all peers, indicating the number …","Some abstractions to handle randomness","Start all the components of the mint and plug them together","Loop <code>run_conensus_epoch</code> until shut down","The main consensus function:","","","Starts consensus by skipping to the last saved epoch …","","","","","","","","","","","","","","","","","","","","","","","","","","","","network config for a server","","","","The peer’s websocket network address and port (e.g. …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Creates a new config from the results of a trusted or …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Generates denominations as powers of 2 until a <code>max</code>","config for servers running on different ports on a local …","","","","","Constructs a module config by name","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","extra options for extra settings and modules","","","","","human-readable name","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Proposed HBBFT consensus changes including removing peers","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Configuration describing the federation and containing our …","","","","","","","","","","","KV Database into which all state is persisted to recover …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Cryptographic random number generator used for everything","","","","","","","","","","Notifies tasks when there is a new transaction","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","outputs a useful debug message for epochs indicating what …","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","An iterator over the variants of Self","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","All the consensus items along with the <code>PeerId</code> of the peer …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Allow early refund of outgoing contract","Fund contract","","","","","","","","","","","","","The lightning module implements an account system. It does …","","","Represents an output of the Lightning module.","","","","","","Creat incoming contract offer","","","","While for now we only support spending the entire contract …eturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Of the three contract types only the outgoing one needs …","Contract to update","Signature of gateway","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A contract before execution as found in transaction outputs","The hash of a LN incoming contract","Outcome of a contract. Only incoming contracts currently …","Possible outcomes of preimage decryption","Threshold-encrypted <code>Preimage</code>","A contract after execution as saved in the database","Anything representing a contract which thus has an …","","","","The decrypted preimage was invalid","","","","","There aren’t enough decryption shares yet","","Share to decrypt an <code>EncryptedPreimage</code>","The decrypted preimage was valid","","","","Converts this type into the inner hash type.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Creates this type from the inner hash type.","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Converts a contract to its executed version.","Outputs the hash in hexadecimal form.","Creates the initial contract outcome that is created on …","","","","","","","","","","","Create a Schnorr public key from this preimage","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A generic contract to hold money in a pub key locked …","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","The funded version of an <code>IncomingContract</code> contains the …","Specialized smart contract for incoming payments","","The hash of a LN incoming contract offer","","Amount for which the user is willing to sell the preimage","","Converts this type into the inner hash type.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Status of preimage decryption, will either end in failure …","","","","","","","","","","","","","","","","","","","","","Encrypted preimage as specified in offer","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Creates this type from the inner hash type.","","","","","Key that can unlock contract in case the decrypted …","","","","","","Payment hash which’s corresponding preimage is being sold","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Incoming contracts are funded exactly once, so they have …","","","","","","","","","","Outputs the hash in hexadecimal form.","","","","","","","","","","","","","","","","","","","","","","","","","Specialized smart contract for outgoing payments.","","","","Flag that can be set by the gateway and allows the client …","","","","","","","","","","","","","","Returns the argument unchanged.","","Public key of the LN gateway allowed to claim the HTLC …","","Hash that can be used to spend the output before the …","","Calls <code>U::from(self)</code>.","Invoice containing metadata on how to obtain the preimage","","Block height at which the money will be spendable by the …","","","","","","Public key of the user that can claim the money back after …","","","Preimage decryption shares we received","Preimage decryption shares we received","","","","","","","","An iterator over the variants of Self","","","","","","","","","Our preimage decryption shares that still need to be …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>Nonce</code> but blinded by the user key","","","","","","","","","Data structures taking into account different amount tiers …","","","","","","A consenus item from one of the federation members …","","Represents an array of mint indexes that delivered faulty …","","","Unique ID of a mint note.","An verifiable one time use IOU from the mint.","Blind signature share from one Federation peer for a …","Result of Federation members confirming <code>MintOutput</code> by …eturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Constructs a new mint","Reference to a Federation Transaction containing an …","","","","","","","","","","","","","","","","","","(Partial) signatures","Access the nonce as the public key to the spend key","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Verify the coin’s validity under a mit key <code>pk</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An iterator over the variants of Self","User’s backup, received at certain time, containing …","","Key used to store user’s ecash backups","","","","","Represents the amounts of issued (signed) and redeemed …","","","","","Transaction id and output index identifying an output …eturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A peg-out tx that is ready to be broadcast with a tweak …","","","","","","","","","","","A PSBT that is awaiting enough signatures from the …","","","","","","","","","Contains the Bitcoin transaction id of the transaction …eturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeeturns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Confirmations required for a peg in to be accepted by …","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","The bitcoin network the client will use","","","","","","The federations public peg-in-descriptor","","","","","","","","","","","","","","","","","","","","","","","","","","","","An iterator over the variants of Self","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","An object that can be used as a ricardian contract to …","A key or object containing keys that may be tweaked for …","Serialize the contract in a deterministic way to be used …","Tweak the key with a <code>tweak</code> contract","","A proof about a script owning a certain output. Verifyable …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Amount of per-peer messages after which we will stop …","TODO: Use proper ModuleId after modularization is complete","","A <code>Msg</code> that can target a specific destination module","Shared, mutable (wrapped in mutex) data of …","","A wrapper around <code>AnyPeerConnections</code> multiplexing …","","","","","","","","","","","","","","Underlying connection pool","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Messages per <code>ModuleId</code> in a queue each","","Messages that arrived before an interested thread asked …","Track pending messages per peer to avoid a potential DoS","Await receipt of a message from any connected peer.","","","","","","","","","","","","","","","","","","","","","Implements the client API through which users interact …","Provides an abstract network connection interface and …","Adapter that implements a message based protocol on top of …","Implements a connection manager for communication with …","","A state of fedimint server passed to each rpc handler …","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","Owned <code>Connector</code> trait object","Result of a connection opening future","Owned trait object type for incoming connection listeners","Allows to connect to peers and to listen for incoming …","","Shared <code>Connector</code> trait object","","TCP connector with encryption and authentication","","","","","","","","","Copy of the certs from <code>peer_certs</code>, but in a format that …","","","","","Connect to a <code>destination</code>","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Transform this concrete <code>Connector</code> into an owned trait …","Listen for incoming connections on <code>bind_addr</code>","","Fake network stack used in tests","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Owned <code>FramedTransport</code> trait object","Framed transport codec for streams","Framed codec that uses <code>bincode</code> to encode structs with <code>serde</code>…","Sink (sending) half of <code>BidiFramed</code>","Stream (receiving) half of <code>BidiFramed</code>","A bidirectional framed transport adapter that can be split …","Special case for tokio <code>TcpStream</code> based <code>BidiFramed</code> instances","","","","","","Splits the codec in its sending and receiving parts","Split the framed transport into read and write half","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Transforms concrete <code>FramedTransport</code> object into an owned …","Builds a new <code>BidiFramed</code> codec around a stream <code>stream</code>.","","Special constructor for tokio TCP connections.","Special constructor for tokio TCP connections.","","","","","","","","","","","","","","","","","","","","Information needed to connect to one other federation …","","","Maximum connection failures we consider for our back-off …","Specifies the network configuration for …","","","","Owned <code>Connector</code> trait object used by …","Internal message type for <code>ReconnectPeerConnections</code>, just …","","Connection manager that automatically reconnects to peers","","The peer’s network address and port (e.g. <code>10.42.0.10:4000</code>…","","Our listen address for incoming connections from other …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Our federation member’s identity","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Creates a new <code>ReconnectPeerConnections</code> connection manager …","","","","","","","Map of all peers’ connection information we want to be …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","The transaction was accepted and is now being processed","The rejected state is only recorded if the error happens …","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","Cheaply generates a new random number generator. Since …","","","","","An atomic value transfer operation within the Fedimint …","","","Aggregate a stream of public keys.","Create an aggregated signature over the <code>msg</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","<code>Input</code>s consumed by the transaction","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Old transaction definition used by old client.","<code>Output</code>s created as a result of the transaction","","","Aggregated MuSig2 signature over all the public keys of …","","","","","","","","","","","","Hash of the transaction (excluding the signature).","Generate the transaction hash.","","","","Validate the aggregated Schnorr Signature signed over the …","","","","","","","An Input consumed by a Transaction is defined within a …","","","","","","An atomic value transfer operation within the Fedimint …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","<code>Input</code>s consumed by the transaction","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","<code>Output</code>s created as a result of the transaction","","","Aggregated MuSig2 signature over all the public keys of …","","","","","","","","","","","","","Hash of the transaction (excluding the signature).","Generate the transaction hash.","","","","Validate the aggregated Schnorr Signature signed over the …","","",""],"i":[5,0,0,0,0,8,0,0,0,8,5,0,2,2,2,12,8,5,2,12,8,5,2,5,5,0,2,0,2,0,2,12,8,5,2,12,8,5,5,2,12,8,5,0,8,8,5,2,12,8,5,12,2,2,2,2,12,8,5,2,12,8,5,8,2,0,0,0,0,2,2,2,0,2,2,2,8,2,2,2,0,2,2,2,2,5,2,2,5,8,0,2,12,8,5,2,12,8,5,2,12,8,5,2,12,8,5,0,37,37,0,0,0,0,0,20,330,36,35,20,330,330,20,35,36,37,330,20,35,36,37,330,20,35,36,37,20,35,36,37,0,330,20,35,36,37,330,20,35,36,37,20,35,37,20,330,20,35,36,37,20,20,37,37,20,36,20,35,36,37,330,20,20,35,36,37,0,36,36,36,36,20,20,20,20,37,35,36,20,20,20,20,330,20,35,36,37,330,20,35,36,37,0,20,36,20,20,20,330,35,20,36,20,0,0,0,20,35,37,36,36,20,35,20,20,20,20,35,36,37,20,330,20,35,36,37,330,20,35,36,37,330,20,35,36,37,20,330,20,35,36,37,0,0,0,0,0,0,0,0,0,0,0,0,0,74,0,74,74,0,0,60,60,21,21,21,60,67,26,68,66,74,21,60,67,26,68,66,74,21,21,66,21,67,26,68,67,26,68,68,68,68,21,21,0,21,60,21,60,67,26,68,66,74,21,60,67,26,68,66,74,21,60,67,26,68,66,74,26,68,21,67,68,68,60,67,26,68,66,74,74,21,60,67,67,26,68,66,74,74,68,66,21,21,68,21,60,67,26,68,66,74,60,0,21,60,67,26,68,66,74,26,21,21,60,21,21,74,21,21,21,74,21,68,67,26,68,74,68,21,21,21,60,67,26,68,66,74,21,60,67,26,68,66,74,21,60,67,26,68,66,74,60,21,60,67,26,68,66,74,0,0,0,63,63,63,63,63,63,63,63,63,63,63,63,63,63,91,0,0,0,0,91,0,0,91,0,0,91,0,91,0,0,91,0,0,92,91,92,94,95,96,97,98,99,100,101,93,102,103,91,92,94,95,96,97,98,99,100,101,93,102,103,91,92,93,91,92,93,94,95,96,97,98,99,100,101,93,102,103,94,95,96,97,98,99,100,101,93,102,103,94,95,96,97,98,99,100,101,93,102,103,91,92,94,95,96,97,98,99,100,101,93,102,103,91,92,94,95,96,97,98,99,100,101,93,102,103,91,92,94,95,96,97,98,99,100,101,93,102,103,91,91,94,95,96,97,98,99,100,101,93,102,103,91,92,94,95,96,97,98,99,100,101,93,102,103,94,94,95,95,96,96,97,97,98,98,99,99,100,100,101,101,93,93,102,102,103,103,92,92,91,92,94,95,96,97,98,99,100,101,93,102,103,91,92,94,95,96,97,98,99,100,101,93,102,103,92,91,92,92,92,92,92,94,96,98,100,93,103,92,94,94,95,95,96,96,97,97,98,98,99,99,100,100,101,101,93,93,102,102,103,103,91,92,93,91,91,92,94,95,96,97,98,99,100,101,93,102,103,91,92,94,95,96,97,98,99,100,101,93,102,103,91,92,94,95,96,97,98,99,100,101,93,102,103,91,92,94,95,96,97,98,99,100,101,93,102,103,0,0,88,0,0,0,25,25,25,0,25,25,88,25,0,0,0,88,0,73,88,108,15,104,105,73,106,75,25,88,108,15,104,105,73,106,75,25,88,15,104,105,73,106,75,88,15,104,105,73,106,75,88,104,105,73,75,88,104,105,73,75,88,104,105,73,75,88,108,15,104,105,73,106,75,25,88,108,15,104,105,73,106,75,25,15,104,105,106,88,108,15,104,105,73,106,75,25,75,108,88,15,104,105,73,106,75,25,88,15,104,105,73,106,75,25,88,15,104,105,73,106,75,25,88,108,15,15,104,105,73,106,106,75,25,88,104,105,73,75,88,15,104,105,73,106,75,75,73,88,108,15,104,105,73,106,75,25,88,108,15,104,105,73,106,75,25,75,75,108,73,73,15,104,105,106,73,88,104,105,73,75,88,15,104,105,73,106,75,108,88,108,15,104,105,73,106,75,25,88,108,15,104,105,73,106,75,25,15,106,88,108,15,104,105,73,106,75,25,331,73,73,88,108,15,104,105,73,106,75,25,118,118,122,0,130,0,130,130,130,130,130,0,0,0,0,0,0,0,0,0,130,130,130,118,122,130,130,116,119,120,123,110,110,110,110,116,118,122,125,126,110,110,110,127,110,116,118,119,120,122,123,125,126,130,127,110,116,118,119,120,122,123,125,126,130,110,110,116,116,118,118,119,120,122,122,123,125,125,126,126,116,118,119,120,122,123,125,126,0,0,116,118,119,120,122,123,125,126,116,118,119,120,122,123,125,126,116,118,119,120,122,123,125,126,110,119,120,116,125,0,0,110,127,110,116,118,119,120,122,123,125,126,130,127,110,116,118,119,120,122,123,125,126,130,116,118,119,120,122,123,125,126,127,127,110,116,118,119,120,122,123,125,126,130,116,118,122,125,110,116,118,119,120,122,123,125,126,130,116,118,119,120,122,123,125,126,130,116,118,122,125,110,116,116,118,118,119,120,122,122,123,125,125,126,130,130,127,110,116,118,119,120,122,123,123,125,126,130,116,118,119,120,122,123,125,126,110,110,110,116,118,119,120,122,123,125,126,127,110,116,118,119,120,122,123,125,126,130,127,110,116,118,119,120,122,123,125,126,130,110,123,110,116,116,118,118,122,122,125,125,126,126,110,123,110,130,110,116,118,119,120,122,123,125,126,125,116,118,119,120,122,123,125,126,127,116,118,119,120,122,123,125,126,116,118,122,125,130,127,127,110,116,118,119,120,122,123,125,126,130,127,110,116,118,119,120,122,123,125,126,130,122,127,110,116,118,119,120,122,123,125,126,130,127,110,110,127,110,116,118,119,120,122,123,125,126,130,116,332,332,333,334,333,0,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,0,0,0,133,138,139,133,138,139,133,138,139,133,138,139,139,139,139,133,138,139,133,138,139,133,138,139,133,138,139,138,139,138,139,133,138,133,138,139,133,138,139,133,138,139,133,138,139,133,138,139,133,138,139,133,138,133,133,133,133,138,139,133,133,138,139,133,138,139,133,138,139,133,133,138,139,142,143,144,0,0,0,0,0,0,0,0,142,143,144,148,142,143,144,0,148,0,0,148,0,132,132,132,132,132,132,132,132,142,143,144,145,146,147,148,149,150,132,142,143,144,145,146,147,148,149,150,132,132,142,143,144,145,146,147,148,149,150,132,142,143,144,145,146,147,148,149,150,132,132,142,143,144,145,146,147,148,149,150,132,142,143,144,145,146,147,148,149,150,132,142,143,144,145,146,147,148,149,150,335,142,143,132,132,142,143,144,145,146,147,148,149,150,132,142,143,144,145,146,147,148,149,150,132,142,143,144,145,146,147,148,149,150,132,142,143,144,145,146,147,148,149,150,132,132,132,132,142,143,144,145,146,147,148,149,150,132,142,143,144,145,146,147,148,149,150,132,132,132,142,143,144,145,146,147,148,149,150,132,132,142,143,144,145,146,147,148,149,150,132,132,142,143,144,145,146,147,148,149,150,132,132,132,132,132,132,132,142,143,144,145,146,147,148,149,150,0,132,132,142,143,144,145,146,147,148,149,150,132,142,143,144,145,146,147,148,149,150,132,149,0,132,132,142,143,144,145,146,147,148,149,150,132,142,143,144,145,146,147,148,149,150,142,132,142,132,142,143,144,145,146,147,148,149,150,147,132,132,132,142,143,144,145,146,147,148,149,150,132,142,143,144,145,146,147,148,149,150,145,146,147,132,142,143,144,145,146,147,148,149,150,132,142,143,144,145,146,147,148,149,150,132,0,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,0,0,0,0,158,159,158,158,158,158,158,159,160,161,158,158,159,160,161,158,158,159,160,161,158,159,160,161,158,158,159,160,161,158,159,160,161,158,159,160,161,158,161,160,160,159,160,161,158,158,159,160,161,158,159,160,161,158,159,160,161,158,158,158,159,160,158,159,160,161,158,159,160,161,158,159,159,160,161,158,158,158,159,160,161,158,158,158,159,160,161,158,158,158,158,158,158,158,160,159,160,161,158,159,160,159,158,159,160,161,158,159,160,161,158,158,161,158,159,160,161,158,159,160,161,158,158,159,160,161,158,158,158,159,160,161,158,159,160,161,158,158,159,160,161,158,159,160,161,158,158,0,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,163,0,0,163,0,0,163,0,0,0,0,163,0,0,163,0,0,163,0,0,164,163,164,165,166,168,167,169,170,171,175,172,176,173,174,163,164,165,166,168,167,169,170,171,175,172,176,173,174,163,164,165,166,167,163,164,165,166,167,165,166,168,167,169,170,171,172,173,174,165,166,168,167,169,170,171,175,172,176,173,174,165,166,168,167,169,170,171,175,172,176,173,174,163,164,165,166,168,167,169,170,171,175,172,176,173,174,163,164,165,166,168,167,169,170,171,175,172,176,173,174,163,164,165,166,168,167,169,170,171,175,172,176,173,174,163,163,165,166,168,167,169,170,171,175,172,176,173,174,163,164,165,166,168,167,169,170,171,175,172,176,173,174,165,165,166,166,168,168,167,167,169,169,170,170,171,171,172,172,173,173,174,174,164,163,164,165,166,168,167,169,170,171,175,172,176,173,174,163,164,165,166,168,167,169,170,171,175,172,176,173,174,164,163,164,164,164,164,164,165,168,169,171,172,173,164,165,165,166,166,168,168,167,167,169,169,170,170,171,171,175,175,172,172,176,176,173,173,174,174,163,164,165,166,167,163,163,164,165,166,168,167,169,170,171,175,172,176,173,174,163,164,165,166,168,167,169,170,171,175,172,176,173,174,163,164,165,166,168,167,169,170,171,175,172,176,173,174,163,164,165,166,168,167,169,170,171,175,172,176,173,174,0,0,190,190,190,192,192,190,192,0,0,0,0,0,0,0,0,0,191,191,0,0,0,0,0,192,192,191,191,0,177,177,177,177,178,184,186,187,188,177,177,177,193,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,177,177,178,178,179,180,181,182,183,184,184,185,186,186,187,187,188,188,189,190,191,192,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,0,0,178,179,180,181,182,183,186,187,188,178,179,180,181,182,183,186,187,188,178,179,180,181,182,183,186,187,188,177,0,177,186,187,193,177,178,179,180,181,182,183,184,185,186,186,187,187,188,188,189,190,191,192,193,177,178,179,180,181,182,183,184,185,186,186,187,187,188,188,189,190,191,192,178,179,180,181,182,183,185,186,187,188,193,193,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,178,186,187,188,177,178,179,180,181,182,183,186,187,188,189,190,191,192,178,179,180,181,182,183,186,187,188,189,190,191,192,178,186,187,188,187,177,178,178,179,180,181,182,183,184,185,186,186,187,187,188,188,189,190,191,191,192,192,193,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,192,178,179,180,181,182,182,183,186,187,188,178,179,180,181,182,183,186,187,188,189,190,191,192,193,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,185,177,178,178,184,184,186,186,187,187,188,188,177,178,177,191,192,177,177,177,177,178,179,180,181,182,183,185,186,187,188,178,181,178,179,180,181,182,182,183,186,187,188,193,182,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,178,186,187,188,191,192,193,193,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,188,193,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,184,193,177,177,181,193,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,0,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,0,0,0,195,200,201,195,200,201,195,200,201,195,200,201,201,201,201,195,200,201,195,200,201,195,200,201,195,200,201,200,201,200,201,195,200,195,200,201,195,200,201,195,201,195,200,201,195,200,201,195,200,195,200,201,200,195,195,195,195,200,201,195,195,200,201,195,200,201,195,200,201,195,195,200,201,202,0,0,0,202,0,0,206,206,202,0,0,0,0,202,0,0,202,0,0,202,0,0,0,206,206,203,202,203,204,209,210,211,212,213,214,205,215,206,216,217,207,208,202,203,204,209,210,211,212,213,214,205,215,206,216,217,207,208,202,203,204,205,206,207,208,202,203,204,205,206,207,208,204,209,210,211,212,213,214,205,215,206,216,217,207,208,204,209,210,211,212,213,214,205,215,206,216,217,207,208,204,209,210,211,212,213,214,205,215,206,216,217,207,208,208,202,203,204,209,210,211,212,213,214,205,215,206,216,217,207,208,202,203,204,209,210,211,212,213,214,205,215,206,216,217,207,208,208,202,203,204,209,210,211,212,213,214,205,215,206,216,217,207,208,204,204,202,202,204,209,210,211,212,213,214,205,215,206,216,217,207,208,202,203,204,209,210,211,212,213,214,205,215,206,216,217,207,208,204,204,209,209,210,210,211,211,212,212,213,213,214,214,205,205,215,215,206,206,216,216,217,217,207,207,208,204,203,202,203,204,209,210,211,212,213,214,205,215,206,216,217,207,208,202,203,204,209,210,211,212,213,214,205,215,206,216,217,207,208,203,202,203,203,203,203,203,210,212,212,213,204,210,212,205,206,207,208,203,208,204,204,209,209,210,210,211,211,212,212,213,213,214,214,205,205,215,215,206,206,216,216,217,217,207,207,208,202,203,204,205,206,207,208,202,202,203,204,209,210,211,212,213,214,205,215,206,216,217,207,208,202,203,204,209,210,211,212,213,214,205,215,206,216,217,207,208,202,203,204,209,210,211,212,213,214,205,215,206,216,217,207,208,202,203,204,209,210,211,212,213,214,205,215,206,216,217,207,208,0,237,237,237,0,237,237,236,0,236,0,236,0,236,0,222,0,0,0,0,222,0,236,237,0,236,236,237,0,0,0,0,0,0,0,0,0,0,0,236,237,218,226,229,220,220,220,220,222,230,232,233,234,220,220,220,231,223,225,235,222,241,223,224,225,220,226,227,228,218,229,230,231,232,233,234,236,237,235,222,241,223,224,225,220,226,227,228,218,229,230,231,232,233,234,236,237,0,220,220,220,227,228,222,222,223,224,225,226,227,228,218,229,230,230,231,232,232,233,233,234,234,222,223,224,225,226,227,228,218,229,230,231,232,233,234,0,0,222,223,224,225,226,227,228,218,229,230,232,233,234,222,223,224,225,226,227,228,218,229,230,232,233,234,222,223,224,225,226,227,228,218,229,230,232,233,234,220,220,220,0,220,235,222,241,223,224,225,220,226,227,228,218,229,230,231,232,232,233,233,234,236,237,235,222,241,223,224,225,220,226,227,228,218,229,230,231,232,232,233,233,234,236,237,222,223,224,225,226,218,229,230,231,232,233,234,235,235,222,241,223,224,225,220,226,227,228,218,229,230,231,232,233,234,236,237,222,230,232,233,220,222,223,224,225,218,229,230,232,233,234,236,222,223,224,225,218,229,230,232,233,234,236,222,230,232,233,223,225,218,228,229,231,222,222,223,224,225,220,226,227,228,218,229,230,230,231,232,232,233,233,234,236,236,237,237,235,222,241,223,224,225,220,226,227,228,218,229,230,231,232,233,234,236,236,236,237,222,223,224,225,226,227,228,218,229,230,232,233,234,220,222,223,224,225,218,229,230,232,233,234,235,222,241,223,224,225,220,226,227,228,218,229,230,231,232,233,234,236,237,235,222,241,223,224,225,220,226,227,228,218,229,230,231,232,233,234,236,237,0,0,222,222,220,230,230,232,232,233,233,234,234,231,220,220,241,220,236,237,228,223,225,229,241,0,220,222,223,224,225,226,227,228,218,229,230,231,232,233,234,224,228,236,220,222,223,224,225,226,227,228,218,229,230,232,233,234,235,222,223,224,225,226,227,228,218,229,230,231,232,233,234,222,230,232,233,236,237,218,235,235,222,241,223,224,225,220,226,227,228,218,229,230,231,232,233,234,236,237,235,222,241,223,224,225,220,226,227,228,218,229,230,231,232,233,234,236,237,230,226,227,0,227,224,0,235,222,241,223,224,225,220,226,227,228,218,229,230,231,232,233,234,236,237,336,235,220,220,235,222,241,223,224,225,220,226,227,228,218,229,230,231,232,233,234,236,237,0,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,0,0,0,240,243,244,240,243,244,240,240,243,244,240,243,244,244,240,240,243,244,240,243,244,240,243,244,240,243,244,243,244,243,244,240,243,240,243,240,243,244,240,243,244,240,243,244,240,243,244,240,243,244,240,243,240,243,240,244,240,243,240,244,240,243,244,240,240,243,244,240,240,243,244,240,243,244,240,243,244,240,240,243,244,249,0,0,0,0,249,0,0,249,0,0,249,0,0,249,0,0,0,249,0,0,249,250,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,251,252,253,254,255,256,257,258,259,260,261,262,263,251,252,253,254,255,256,257,258,259,260,261,262,263,251,252,253,254,255,256,257,258,259,260,261,262,263,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,249,249,251,252,253,254,255,256,257,258,259,260,261,262,263,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,251,251,252,252,253,253,254,254,255,255,256,256,257,257,258,258,259,259,260,260,261,261,262,262,263,263,250,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,250,249,250,250,250,250,250,251,253,255,256,258,260,262,250,251,251,252,252,253,253,254,254,255,255,256,256,257,257,258,258,259,259,260,260,261,261,262,262,263,263,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,249,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,0,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,0,0,337,338,238,0,0,238,238,238,0,270,270,272,270,238,272,270,238,272,270,272,270,272,270,272,270,272,270,270,272,270,238,272,270,238,272,270,272,270,238,272,270,272,270,272,270,238,238,272,270,238,272,270,272,270,272,272,270,238,272,270,238,270,272,272,272,272,238,272,270,272,270,272,270,238,272,272,270,238,272,270,238,272,272,272,272,272,270,238,272,272,272,272,270,238,0,0,0,0,0,0,0,278,281,339,280,278,281,339,280,278,280,278,280,278,339,281,281,339,280,278,281,339,280,278,280,281,339,280,278,280,281,339,280,278,281,339,280,278,278,281,339,280,278,280,280,281,278,339,281,278,278,280,280,278,281,339,280,278,281,339,280,278,281,339,280,278,281,339,280,278,0,0,0,0,0,0,0,0,284,284,284,284,284,284,284,284,284,284,284,284,0,0,284,284,284,284,284,0,0,0,0,0,0,0,0,286,286,289,39,286,289,39,286,289,39,286,39,286,340,289,289,39,286,289,39,286,289,39,286,289,39,286,289,39,286,286,289,39,286,289,39,286,340,340,289,0,289,286,289,39,289,39,286,289,39,289,39,39,286,289,39,286,289,39,286,289,39,286,289,39,286,0,0,293,292,293,292,293,292,292,293,293,292,293,292,0,293,292,293,292,292,293,292,293,292,292,293,0,293,292,293,292,293,292,293,292,0,0,0,0,0,0,0,295,294,295,294,295,294,341,294,295,294,295,294,295,294,295,295,294,295,294,295,294,295,294,295,341,294,295,301,294,294,294,294,294,294,294,294,294,295,294,295,294,294,295,294,295,0,308,0,0,308,0,0,0,0,0,0,0,0,0,0,306,305,304,38,304,311,316,307,314,315,308,38,305,306,304,311,316,307,314,315,308,38,305,306,307,38,305,306,38,305,306,316,307,307,315,304,304,311,316,307,314,315,308,38,305,306,304,311,316,307,314,315,308,38,305,306,38,305,306,307,307,304,311,316,307,314,315,308,38,305,306,314,38,305,306,304,311,316,307,314,315,308,38,305,306,38,311,307,307,304,311,316,307,314,315,308,38,305,306,304,311,316,307,314,315,308,38,305,306,307,306,304,311,38,311,307,307,342,38,304,311,307,307,307,307,314,307,307,316,311,304,304,311,307,307,38,305,306,316,316,307,307,38,305,306,304,311,316,307,314,315,308,38,305,306,304,311,316,307,314,315,308,38,305,306,307,304,311,316,307,314,315,308,38,305,306,304,311,316,307,314,315,308,38,305,306,0,0,0,318,318,319,320,318,319,320,318,319,320,318,319,320,319,320,318,318,319,320,318,319,320,319,320,318,319,320,318,319,320,318,319,320,318,319,320,318,319,320,320,319,318,319,320,318,319,320,318,320,318,319,320,318,318,319,320,318,319,320,318,319,320,318,319,320,318,319,320,318,319,320,87,87,0,0,87,324,87,324,87,324,87,324,87,324,87,324,87,324,87,324,87,324,87,324,87,324,87,324,324,87,324,87,324,87,324,87,0,87,324,87,324,87,324,87,324,324,87,324,87,324,343,343,135,135,0,0,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,344,135,135,135,345,0,345,76,76,0,0,0,76,0,0,81,326,76,81,326,76,81,326,81,326,81,81,81,81,326,76,81,326,76,326,81,326,76,81,326,81,326,81,326,76,76,81,326,326,76,81,81,326,81,326,76,81,81,326,76,0,81,76,326,81,81,81,326,76,81,326,76,81,326,76,326,81,81,81,326,76,81,81,326,76,346,346,346,0,328,329,328,329,0,0,328,329,327,328,329,327,328,329,327,328,329,327,328,329,327,328,329,327,328,329,327,328,329,327,328,329,327,328,329,328,329,327,328,329,327,328,329,327,328,329,327,328,329,327,328,329,327,328,329,327,328,329,327,328,329,327,327,328,329,327,327,328,329,327,327,328,329,327,328,329,327,328,329,327,328,329,327,327,327,328,329,327,327,328,329],"f":[0,0,0,0,0,0,0,0,0,0,0,[[],1],0,[2,[[4,[3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[5,5],[[]],0,0,0,0,0,[6],[6],[6],[6],[6],[6],[6],[6],[[],[[7,[5]]]],[6],[6],[6],[6],0,[[8,9],[[7,[10]]]],[[8,9],[[7,[10]]]],[[5,9],11],[[]],[[]],[[]],[[]],[12],[2,[[4,[[14,[13]]]]]],[[2,[17,[[14,[15]],16]]],[[4,[[14,[13]]]]]],0,[[],6],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[]],[8,18],0,[[19,1]],0,0,0,[[20,21,22],2],[[20,21,[23,[5]],22],2],[2,24],0,0,[[2,13],[[7,[25]]]],[[2,26],[[4,[[17,[[14,[15]],16]]]]]],[27],[[2,24,16]],0,[[2,24]],0,[[20,21,22],28],[[2,29]],[[2,30],[[4,[[14,[13]]]]]],0,[5,7],[2],[2,18],[[]],[[],31],0,[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],32],[[],32],[[],32],[[],32],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,[[20,[34,[31,33]]]],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[20,20],[35,35],[36,36],[37,37],[[]],[[]],[[]],[[]],[[38,39,22],40],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[[],[[7,[20]]]],[[],[[7,[35]]]],[[],[[7,[37]]]],[[41,16,36,[0,[42,43]],22],[[28,[[4,[20]]]]]],[6],[6],[6],[6],[6],0,0,[[37,37],18],[[],18],0,0,[[20,9],11],[[35,9],11],[[36,9],11],[[37,9],11],[[]],[[36,16,[45,[44]],46,[45,[44]],46,[34,[31,33]]],20],[[]],[[]],[[]],[[]],[47,[[7,[48]]]],[49,[[14,[49]]]],[[49,50,47,47],[[51,[16,36]]]],[[47,16,50,34],38],[[31,52,16,49,34,31,31,53,54],36],[[20,47]],[20,50],[[20,47],[[28,[55]]]],[[34,47],[[28,[56]]]],[37],0,0,0,0,0,0,[[],6],[[],6],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[]],[[]],[57,[[7,[48]]]],0,0,0,0,0,0,0,[20,38],[36,[[34,[16,35]]]],0,0,0,0,[20,7],[35,7],[37,7],0,0,0,0,[20,39],0,[20,58],[[]],[[]],[[]],[[]],[[51,[0,[42,43]]]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],32],[[],32],[[],32],[[],32],[[],32],[[20,16],28],[[]],[[]],[[]],[[]],[[]],[[],7],[[],7],[[],[[7,[59]]]],[59,7],[[],[[7,[52]]]],[52,7],0,0,0,0,0,0,0,0,0,0,0,0,0,[[60,61]],[[60,61]],[21,62],[21],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[21,63],[[21,[0,[64,65]]],66],0,0,[67,67],[26,26],[68,68],[[]],[[]],[[]],[1,[[7,[68,69]]]],[68,[[7,[6,70]]]],[71,[[7,[6,70]]]],[21,72],0,0,[21,1],[[],60],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],0,0,[[21,24],[[3,[73]]]],[[67,67],18],[[68,68],18],[[],18],0,[[67,9],11],[[26,9],11],[[68,9],11],[[66,9],11],[[74,9],11],[[74,9],11],[[]],[[]],[75,67],[[]],[[]],[[]],[[]],[[]],[76,74],[1,[[7,[77]]]],[[66,78],79],[21,26],[21,[[3,[24]]]],[68],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[20,80],21],0,[[21,13]],[[21,72,81,66],[[7,[74]]]],[27],[[21,82],21],0,[[21,13,72,14]],[74,[[3,[83]]]],[[21,81],[[7,[74]]]],[[],[[14,[84,85]]]],[[]],[[]],[[]],[[],31],0,0,[[21,86],[[3,[87]]]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[60,[[7,[76]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[13,31],[88,31],0,[[]],[[]],[[63,47,31,56],[[90,[[89,[30]]]]]],[6],[6],[6],0,[[]],[[],6],[[]],[[],7],[[],7],[[],32],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[91,91],[92,92],[93,93],[[]],[[]],[[]],[1,[[7,[94,69]]]],[1,[[7,[95,69]]]],[1,[[7,[96,69]]]],[1,[[7,[97,69]]]],[1,[[7,[98,69]]]],[1,[[7,[99,69]]]],[1,[[7,[100,69]]]],[1,[[7,[101,69]]]],[1,[[7,[93,69]]]],[1,[[7,[102,69]]]],[1,[[7,[103,69]]]],[94,[[7,[6,70]]]],[95,[[7,[6,70]]]],[96,[[7,[6,70]]]],[97,[[7,[6,70]]]],[98,[[7,[6,70]]]],[99,[[7,[6,70]]]],[100,[[7,[6,70]]]],[101,[[7,[6,70]]]],[93,[[7,[6,70]]]],[102,[[7,[6,70]]]],[103,[[7,[6,70]]]],[71,[[7,[6,70]]]],[71,[[7,[6,70]]]],[71,[[7,[6,70]]]],[71,[[7,[6,70]]]],[71,[[7,[6,70]]]],[71,[[7,[6,70]]]],[71,[[7,[6,70]]]],[71,[[7,[6,70]]]],[71,[[7,[6,70]]]],[71,[[7,[6,70]]]],[71,[[7,[6,70]]]],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[[91,9],11],[[91,9],11],[[94,9],11],[[95,9],11],[[96,9],11],[[97,9],11],[[98,9],11],[[99,9],11],[[100,9],11],[[101,9],11],[[93,9],11],[[102,9],11],[[103,9],11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,[[7,[77]]]],[1,[[7,[77]]]],[1,[[7,[77]]]],[1,[[7,[77]]]],[1,[[7,[77]]]],[1,[[7,[77]]]],[1,[[7,[77]]]],[1,[[7,[77]]]],[1,[[7,[77]]]],[1,[[7,[77]]]],[1,[[7,[77]]]],[1,[[7,[77]]]],[1,[[7,[77]]]],[1,[[7,[77]]]],[1,[[7,[77]]]],[1,[[7,[77]]]],[1,[[7,[77]]]],[1,[[7,[77]]]],[1,[[7,[77]]]],[1,[[7,[77]]]],[1,[[7,[77]]]],[1,[[7,[77]]]],[[92,6],[[3,[91]]]],0,[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],92],[92,6],0,[92,3],[92,3],[[92,6],3],[94,7],[96,7],[98,7],[100,7],[93,7],[103,7],[92],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[]],[[]],[[]],[[],31],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[73,46,73],[[7,[73,25]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[88,88],[15,15],[104,104],[105,105],[73,73],[106,106],[75,75],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,[[7,[88,69]]]],[1,[[7,[104,69]]]],[1,[[7,[105,69]]]],[1,[[7,[73,69]]]],[1,[[7,[75,69]]]],[88,[[7,[6,70]]]],[104,[[7,[6,70]]]],[105,[[7,[6,70]]]],[73,[[7,[6,70]]]],[75,[[7,[6,70]]]],[71,[[7,[6,70]]]],[71,[[7,[6,70]]]],[71,[[7,[6,70]]]],[71,[[7,[6,70]]]],[71,[[7,[6,70]]]],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[[],[[7,[15]]]],[[],[[7,[104]]]],[[],[[7,[105]]]],[[],[[7,[106]]]],[6],[6],[6],[6],[6],[6],[6],[6],[6],0,0,[[88,88],18],[[15,15],18],[[104,104],18],[[105,105],18],[[73,73],18],[[106,106],18],[[75,75],18],[[25,25],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[88,9],[[7,[10]]]],[[15,9],[[7,[10]]]],[[104,9],[[7,[10]]]],[[105,9],[[7,[10]]]],[[73,9],[[7,[10]]]],[[106,9],[[7,[10]]]],[[75,9],[[7,[10]]]],[[25,9],[[7,[10]]]],[[]],[[]],[88,15],[[]],[[]],[[]],[[]],[73,106],[[]],[[]],[[]],[1,[[7,[77]]]],[1,[[7,[77]]]],[1,[[7,[77]]]],[1,[[7,[77]]]],[1,[[7,[77]]]],[88],[15],[104],[105],[73],[106],[75],[75,107],0,[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[24,[34,[16,[14,[88,85]],85]],3],73],0,[15,7],[104,7],[105,7],[106,7],0,[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[15,1],[[7,[88,69]]]],[[106,1],[[7,[73,69]]]],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],108],[[73,3],[[7,[25]]]],[[73,109],[[7,[25]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[110,47],[110,[[14,[[111,[110]],85]]]],[[110,112,72],[[90,[[89,[30,85]]]]]],[[110,72,113],[[90,[[89,[30,85]]]]]],[[],114],[[],114],[[],114],[[],114],[[],114],[[110,72,62],[[90,[[89,[30,85]]]]]],[[110,72],[[90,[[89,[30,85]]]]]],[[110,72,[14,[85]]],[[90,[[89,[30,85]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[110,64]],0,[[],115],[116,116],[[],117],[118,118],[119,119],[120,120],[[],121],[122,122],[123,123],[[],124],[125,125],[126,126],[[],79],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[1,[[7,[116,69]]]],[1,[[7,[118,69]]]],[1,[[7,[119,69]]]],[1,[[7,[120,69]]]],[1,[[7,[122,69]]]],[1,[[7,[123,69]]]],[1,[[7,[125,69]]]],[1,[[7,[126,69]]]],[116,[[7,[6,70]]]],[118,[[7,[6,70]]]],[119,[[7,[6,70]]]],[120,[[7,[6,70]]]],[122,[[7,[6,70]]]],[123,[[7,[6,70]]]],[125,[[7,[6,70]]]],[126,[[7,[6,70]]]],[71,[[7,[6,70]]]],[71,[[7,[6,70]]]],[71,[[7,[6,70]]]],[71,[[7,[6,70]]]],[71,[[7,[6,70]]]],[71,[[7,[6,70]]]],[71,[[7,[6,70]]]],[71,[[7,[6,70]]]],[[110,72],[[90,[[89,[30,85]]]]]],0,0,0,0,0,0,[110],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[[],[[7,[116]]]],[[],[[7,[118]]]],[[],[[7,[119]]]],[[],[[7,[120]]]],[[],[[7,[122]]]],[[],[[7,[123]]]],[[],[[7,[125]]]],[[],[[7,[126]]]],[[127,41,16,128,22],[[90,[[89,[30,85]]]]]],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[[],24],[[],24],[[],24],[[],24],[[110,129,72],[[90,[[89,[30,85]]]]]],[[116,116],18],[[118,118],18],[[119,119],18],[[120,120],18],[[122,122],18],[[123,123],18],[[125,125],18],[[126,126],18],[[130,130],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[115,18],[117,18],[121,18],[124,18],[[110,9],[[7,[10]]]],[[116,9],[[7,[10]]]],[[116,9],[[7,[10]]]],[[118,9],[[7,[10]]]],[[118,9],[[7,[10]]]],[[119,9],[[7,[10]]]],[[120,9],[[7,[10]]]],[[122,9],[[7,[10]]]],[[122,9],[[7,[10]]]],[[123,9],[[7,[10]]]],[[125,9],[[7,[10]]]],[[125,9],[[7,[10]]]],[[126,9],[[7,[10]]]],[[130,9],[[7,[10]]]],[[130,9],[[7,[10]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[131,123],[[]],[[]],[[]],[1,[[7,[77]]]],[1,[[7,[77]]]],[1,[[7,[77]]]],[1,[[7,[77]]]],[1,[[7,[77]]]],[1,[[7,[77]]]],[1,[[7,[77]]]],[1,[[7,[77]]]],[[110,72,132],30],[[110,72,107],30],[[110,72],30],[116],[118],[119],[120],[122],[123],[125],[126],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[110,72],30],0,[110,50],[[],50],[116,50],[[],50],[118,50],[122,50],[[],50],[[],50],[125,50],[[],50],[126,50],[133,110],0,[[110,72,113],[[90,[[89,[30,85]]]]]],[27],[[110,72,123],30],[116,7],[118,7],[119,7],[120,7],[122,7],[123,7],[125,7],[126,7],0,[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[127,33],[[7,[134,48]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],31],[[],31],[[],31],[[],31],[[],31],[[127,128]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[135,[[7,[122,8]]]],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[127,16,33],[[7,[48]]]],[[110,112,72],[[90,[[89,[30,85]]]]]],[[110,72],[[90,[[89,[30,85]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,[[]],[[]],[136,136],[[]],[137,[[7,[124,69]]]],[137,[[7,[124,69]]]],[137,[[7,[115,69]]]],[137,[[7,[115,69]]]],[137,[[7,[117,69]]]],[137,[[7,[117,69]]]],[137,[[7,[121,69]]]],[137,[[7,[121,69]]]],[[],136],[6],[6],[6],[[136,9],[[7,[10]]]],[[]],[[],6],[[]],[[]],[[],7],[[],7],[[],32],[[]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[133,133],[138,138],[139,139],[[]],[[]],[[]],0,0,[[],139],[6],[6],[6],[6],[6],[6],[[],[[7,[133]]]],[[],[[7,[138]]]],[[],[[7,[139]]]],[6],[6],[6],[[138,138],18],[[139,139],18],[[],18],[[],18],0,0,[[133,9],[[7,[10]]]],[[138,9],[[7,[10]]]],[[139,9],[[7,[10]]]],[[]],[[]],[[]],[[],133],[138],[139],[[],6],[[],6],[[],6],[[]],[[]],[[]],[133,7],[138,7],[139,7],0,0,0,0,[133,134],[[]],[[]],[[]],[133],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],32],[[],32],[[],32],[[133,16],[[7,[48]]]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],132],[[],140],[132,107],[132],[132],[[],6],[132],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[7,[[14,[141,85]]]]]],[132,132],[142,142],[143,143],[144,144],[145,145],[146,146],[147,147],[148,148],[149,149],[150,150],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[132,132],151],[1,[[7,[132,69]]]],[1,[[7,[142,69]]]],[1,[[7,[143,69]]]],[1,[[7,[144,69]]]],[1,[[7,[145,69]]]],[1,[[7,[146,69]]]],[1,[[7,[147,69]]]],[1,[[7,[148,69]]]],[1,[[7,[149,69]]]],[1,[[7,[150,69]]]],[132,[[7,[6,70]]]],[142,[[7,[6,70]]]],[143,[[7,[6,70]]]],[144,[[7,[6,70]]]],[145,[[7,[6,70]]]],[146,[[7,[6,70]]]],[147,[[7,[6,70]]]],[148,[[7,[6,70]]]],[149,[[7,[6,70]]]],[150,[[7,[6,70]]]],[71,[[7,[6,70]]]],[71,[[7,[6,70]]]],[71,[[7,[6,70]]]],[71,[[7,[6,70]]]],[71,[[7,[6,70]]]],[71,[[7,[6,70]]]],[71,[[7,[6,70]]]],[71,[[7,[6,70]]]],[71,[[7,[6,70]]]],[71,[[7,[6,70]]]],[[],132],[142,132],[143,132],[132],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[[],[[7,[132]]]],[[],[[7,[142]]]],[[],[[7,[143]]]],[[],[[7,[144]]]],[[],[[7,[145]]]],[[],[[7,[146]]]],[[],[[7,[147]]]],[[],[[7,[148]]]],[[],[[7,[149]]]],[[],[[7,[150]]]],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[[]],[[]],[[]],[[132,132],18],[[142,142],18],[[143,143],18],[[144,144],18],[[145,145],18],[[146,146],18],[[147,147],18],[[148,148],18],[[149,149],18],[[150,150],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[132,9],[[7,[10]]]],[[132,9],[[7,[10]]]],[[132,9],[[7,[10]]]],[[142,9],[[7,[10]]]],[[143,9],[[7,[10]]]],[[144,9],[[7,[10]]]],[[145,9],[[7,[10]]]],[[146,9],[[7,[10]]]],[[147,9],[[7,[10]]]],[[148,9],[[7,[10]]]],[[149,9],[[7,[10]]]],[[150,9],[[7,[10]]]],[[]],[107,132],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[7,[152]]]],[1,[[7,[77]]]],[1,[[7,[77]]]],[1,[[7,[77]]]],[1,[[7,[77]]]],[1,[[7,[77]]]],[1,[[7,[77]]]],[1,[[7,[77]]]],[1,[[7,[77]]]],[1,[[7,[77]]]],[1,[[7,[77]]]],[[],132],[107,132],[[],132],[[],[[7,[132,153]]]],[[],[[7,[132,153]]]],[47,[[7,[132]]]],[132],[142],[143],[144],[145],[146],[147],[148],[149],[150],0,[132],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[132],[[147,109],149],0,[[132,132],[[3,[151]]]],[132,7],[142,7],[143,7],[144,7],[145,7],[146,7],[147,7],[148,7],[149,7],[150,7],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[142,113],143],[[],31],[142,144],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[147,[[7,[154,155]]]],[[],31],[[],[[7,[140,156]]]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[135,[[7,[145,8]]]],[135,[[7,[146,8]]]],[135,[[7,[147,8]]]],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],0,[[]],[[]],[157,157],[[]],[1,[[7,[157,69]]]],[157,[[7,[6,70]]]],[71,[[7,[6,70]]]],[157,132],[6],[6],[[],[[7,[157]]]],[6],[[157,157],18],[[],18],[[157,9],[[7,[10]]]],[[]],[1,[[7,[77]]]],[157],[[],6],[[]],0,[157,7],[[],[[14,[84,85]]]],[[]],[[],7],[[],7],[[],32],[[]],0,0,0,0,[[],158],0,[[],140],[158,107],[158],[158],[[],6],[[]],[[]],[[]],[158],[[]],[[]],[[]],[[]],[[]],[[],[[7,[[14,[141,85]]]]]],[159,159],[160,160],[161,161],[158,158],[[]],[[]],[[]],[[]],[[158,158],151],[1,[[7,[159,69]]]],[1,[[7,[160,69]]]],[1,[[7,[161,69]]]],[1,[[7,[158,69]]]],[159,[[7,[6,70]]]],[160,[[7,[6,70]]]],[161,[[7,[6,70]]]],[158,[[7,[6,70]]]],[71,[[7,[6,70]]]],[71,[[7,[6,70]]]],[71,[[7,[6,70]]]],[71,[[7,[6,70]]]],0,[160,132],0,[6],[6],[6],[158],[6],[6],[6],[6],[6],[[],[[7,[159]]]],[[],[[7,[160]]]],[[],[[7,[161]]]],[[],[[7,[158]]]],[6],[6],[6],[6],[[]],[[]],0,0,[[]],[[159,159],18],[[160,160],18],[[161,161],18],[[158,158],18],[[],18],[[],18],[[],18],[[],18],0,[[159,9],[[7,[10]]]],[[160,9],[[7,[10]]]],[[161,9],[[7,[10]]]],[[158,9],[[7,[10]]]],[[158,9],[[7,[10]]]],[[158,9],[[7,[10]]]],[[]],[[]],[[]],[[]],[107,158],[[],[[7,[152]]]],[1,[[7,[77]]]],[1,[[7,[77]]]],[1,[[7,[77]]]],[1,[[7,[77]]]],[[],158],[107,158],[[],158],[[],[[7,[158,153]]]],[[],[[7,[158,153]]]],[47,[[7,[158]]]],0,[159],[160],[161],[158],0,0,[159,158],[158],[[],6],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[]],[158],0,[[158,158],[[3,[151]]]],[159,7],[160,7],[161,7],[158,7],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[],31],[[]],[[]],[[]],[[]],[[],31],[[],[[7,[140,156]]]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[135,[[7,[158,8]]]],[[],32],[[],32],[[],32],[[],32],[[]],[[]],[[]],[[]],[[],7],0,[[]],[[]],[162,107],0,[162,162],[[]],[1,[[7,[162,69]]]],[162,[[7,[6,70]]]],[71,[[7,[6,70]]]],[162,132],[6],[6],[[],[[7,[162]]]],[6],[[162,162],18],[[],18],[[162,9],[[7,[10]]]],[[]],[1,[[7,[77]]]],0,[162],0,[[],6],[[]],0,[162,7],0,[[],[[14,[84,85]]]],[[]],[[],7],[[],7],[[],32],0,[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[163,163],[164,164],[165,165],[166,166],[167,167],[[]],[[]],[[]],[[]],[[]],[1,[[7,[165,69]]]],[1,[[7,[166,69]]]],[1,[[7,[168,69]]]],[1,[[7,[167,69]]]],[1,[[7,[169,69]]]],[1,[[7,[170,69]]]],[1,[[7,[171,69]]]],[1,[[7,[172,69]]]],[1,[[7,[173,69]]]],[1,[[7,[174,69]]]],[165,[[7,[6,70]]]],[166,[[7,[6,70]]]],[168,[[7,[6,70]]]],[167,[[7,[6,70]]]],[169,[[7,[6,70]]]],[170,[[7,[6,70]]]],[171,[[7,[6,70]]]],[175,[[7,[6,70]]]],[172,[[7,[6,70]]]],[176,[[7,[6,70]]]],[173,[[7,[6,70]]]],[174,[[7,[6,70]]]],[71,[[7,[6,70]]]],[71,[[7,[6,70]]]],[71,[[7,[6,70]]]],[71,[[7,[6,70]]]],[71,[[7,[6,70]]]],[71,[[7,[6,70]]]],[71,[[7,[6,70]]]],[71,[[7,[6,70]]]],[71,[[7,[6,70]]]],[71,[[7,[6,70]]]],[71,[[7,[6,70]]]],[71,[[7,[6,70]]]],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[[163,9],[[7,[10]]]],[[163,9],[[7,[10]]]],[[165,9],[[7,[10]]]],[[166,9],[[7,[10]]]],[[168,9],[[7,[10]]]],[[167,9],[[7,[10]]]],[[169,9],[[7,[10]]]],[[170,9],[[7,[10]]]],[[171,9],[[7,[10]]]],[[175,9],[[7,[10]]]],[[172,9],[[7,[10]]]],[[176,9],[[7,[10]]]],[[173,9],[[7,[10]]]],[[174,9],[[7,[10]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,[[7,[77]]]],[1,[[7,[77]]]],[1,[[7,[77]]]],[1,[[7,[77]]]],[1,[[7,[77]]]],[1,[[7,[77]]]],[1,[[7,[77]]]],[1,[[7,[77]]]],[1,[[7,[77]]]],[1,[[7,[77]]]],[1,[[7,[77]]]],[1,[[7,[77]]]],[1,[[7,[77]]]],[1,[[7,[77]]]],[1,[[7,[77]]]],[1,[[7,[77]]]],[1,[[7,[77]]]],[1,[[7,[77]]]],[1,[[7,[77]]]],[1,[[7,[77]]]],0,[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],164],[164,6],0,[164,3],[164,3],[[164,6],3],[165,7],[168,7],[169,7],[171,7],[172,7],[173,7],[164],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[]],[[]],[[]],[[]],[[]],[[],31],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[177,47],[177,[[14,[[111,[177]],85]]]],[[177,112,72],[[90,[[89,[30,85]]]]]],[[177,72,113],[[90,[[89,[30,85]]]]]],[[],114],[[],114],[[],114],[[],114],[[],114],[[177,72,62],[[90,[[89,[30,85]]]]]],[[177,72],[[90,[[89,[30,85]]]]]],[[177,72,[14,[85]]],[[90,[[89,[30,85]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[177,[0,[64,65]]]],0,[[],124],[178,178],[179,179],[180,180],[181,181],[182,182],[183,183],[184,184],[[],79],[185,185],[[],115],[186,186],[187,187],[[],117],[188,188],[[],121],[189,189],[190,190],[191,191],[192,192],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[1,[[7,[178,69]]]],[1,[[7,[179,69]]]],[1,[[7,[180,69]]]],[1,[[7,[181,69]]]],[1,[[7,[182,69]]]],[1,[[7,[183,69]]]],[1,[[7,[186,69]]]],[1,[[7,[187,69]]]],[1,[[7,[188,69]]]],[178,[[7,[6,70]]]],[179,[[7,[6,70]]]],[180,[[7,[6,70]]]],[181,[[7,[6,70]]]],[182,[[7,[6,70]]]],[183,[[7,[6,70]]]],[186,[[7,[6,70]]]],[187,[[7,[6,70]]]],[188,[[7,[6,70]]]],[71,[[7,[6,70]]]],[71,[[7,[6,70]]]],[71,[[7,[6,70]]]],[71,[[7,[6,70]]]],[71,[[7,[6,70]]]],[71,[[7,[6,70]]]],[71,[[7,[6,70]]]],[71,[[7,[6,70]]]],[71,[[7,[6,70]]]],[[177,72],[[90,[[89,[30,85]]]]]],0,[177],[[],186],[[],187],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[186],[187],[6],[188],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[186],[6],[6],[187],[188],[6],[6],[6],[6],[6],[[],[[7,[178]]]],[[],[[7,[179]]]],[[],[[7,[180]]]],[[],[[7,[181]]]],[[],[[7,[182]]]],[[],[[7,[183]]]],[[],[[7,[185]]]],[[],[[7,[186]]]],[[],[[7,[187]]]],[[],[[7,[188]]]],[[193,41,16,128,22],[[90,[[89,[30,85]]]]]],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[[],24],[[],24],[[],24],[[],24],[[177,129,72],[[90,[[89,[30,85]]]]]],[[178,178],18],[[179,179],18],[[180,180],18],[[181,181],18],[[182,182],18],[[183,183],18],[[186,186],18],[[187,187],18],[[188,188],18],[[189,189],18],[[190,190],18],[[191,191],18],[[192,192],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[124,18],[115,18],[117,18],[121,18],[187],[[177,9],[[7,[10]]]],[[178,9],[[7,[10]]]],[[178,9],[[7,[10]]]],[[179,9],[[7,[10]]]],[[180,9],[[7,[10]]]],[[181,9],[[7,[10]]]],[[182,9],[[7,[10]]]],[[183,9],[[7,[10]]]],[[184,9],[[7,[10]]]],[[185,9],[[7,[10]]]],[[186,9],[[7,[10]]]],[[186,9],[[7,[10]]]],[[187,9],[[7,[10]]]],[[187,9],[[7,[10]]]],[[188,9],[[7,[10]]]],[[188,9],[[7,[10]]]],[[189,9],[[7,[10]]]],[[190,9],[[7,[10]]]],[[191,9],[[7,[10]]]],[[191,9],[[7,[10]]]],[[192,9],[[7,[10]]]],[[192,9],[[7,[10]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[194,192],[[]],[1,[[7,[77]]]],[1,[[7,[77]]]],[1,[[7,[77]]]],[1,[[7,[77]]]],[[],182],[1,[[7,[77]]]],[1,[[7,[77]]]],[1,[[7,[77]]]],[1,[[7,[77]]]],[1,[[7,[77]]]],[178],[179],[180],[181],[182],[183],[186],[187],[188],[189],[190],[191],[192],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[177,50],[178,50],[[],50],[[],50],[184,50],[186,50],[[],50],[[],50],[187,50],[188,50],[[],50],[195,177],0,[[177,72,113],[[90,[[89,[30,85]]]]]],[27],[27],[177,[[51,[49,196,197]]]],0,0,0,[178,7],[179,7],[180,7],[181,7],[182,7],[183,7],[185,7],[186,7],[187,7],[188,7],0,[181,154],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[182,[[14,[84,85]]]],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[193,33],[[7,[134,48]]]],[182,198],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[193,128]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[135,[[7,[188,8]]]],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],0,[[193,16,33],[[7,[48]]]],[[177,112,72],[[90,[[89,[30,85]]]]]],[[177,72],[[90,[[89,[30,85]]]]]],[[181,196],18],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[199,199],[[]],[137,[[7,[124,69]]]],[137,[[7,[124,69]]]],[137,[[7,[115,69]]]],[137,[[7,[115,69]]]],[137,[[7,[117,69]]]],[137,[[7,[117,69]]]],[137,[[7,[121,69]]]],[137,[[7,[121,69]]]],[[],199],[6],[6],[6],[[199,9],[[7,[10]]]],[[]],[[],6],[[]],[[]],[[],7],[[],7],[[],32],[[]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[195,195],[200,200],[201,201],[[]],[[]],[[]],0,0,[[],201],[6],[6],[6],[6],[6],[6],[[],[[7,[195]]]],[[],[[7,[200]]]],[[],[[7,[201]]]],[6],[6],[6],[[200,200],18],[[201,201],18],[[],18],[[],18],0,0,[[195,9],[[7,[10]]]],[[200,9],[[7,[10]]]],[[201,9],[[7,[10]]]],[[]],[[]],[[]],[[],195],[201],[[],6],[[],6],[[],6],[[]],[[]],[[]],0,0,[195,7],[200,7],[201,7],0,0,0,[195,134],[[]],[[]],[[]],[195],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],32],[[],32],[[],32],[[195,16],[[7,[48]]]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[202,202],[203,203],[204,204],[205,205],[206,206],[207,207],[208,208],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,[[7,[204,69]]]],[1,[[7,[209,69]]]],[1,[[7,[210,69]]]],[1,[[7,[211,69]]]],[1,[[7,[212,69]]]],[1,[[7,[213,69]]]],[1,[[7,[214,69]]]],[1,[[7,[205,69]]]],[1,[[7,[215,69]]]],[1,[[7,[206,69]]]],[1,[[7,[216,69]]]],[1,[[7,[217,69]]]],[1,[[7,[207,69]]]],[1,[[7,[208,69]]]],[204,[[7,[6,70]]]],[209,[[7,[6,70]]]],[210,[[7,[6,70]]]],[211,[[7,[6,70]]]],[212,[[7,[6,70]]]],[213,[[7,[6,70]]]],[214,[[7,[6,70]]]],[205,[[7,[6,70]]]],[215,[[7,[6,70]]]],[206,[[7,[6,70]]]],[216,[[7,[6,70]]]],[217,[[7,[6,70]]]],[207,[[7,[6,70]]]],[208,[[7,[6,70]]]],[71,[[7,[6,70]]]],[71,[[7,[6,70]]]],[71,[[7,[6,70]]]],[71,[[7,[6,70]]]],[71,[[7,[6,70]]]],[71,[[7,[6,70]]]],[71,[[7,[6,70]]]],[71,[[7,[6,70]]]],[71,[[7,[6,70]]]],[71,[[7,[6,70]]]],[71,[[7,[6,70]]]],[71,[[7,[6,70]]]],[71,[[7,[6,70]]]],[71,[[7,[6,70]]]],0,[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[[],[[7,[208]]]],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[[204,204],18],[[],18],[[202,9],[[7,[10]]]],[[202,9],[[7,[10]]]],[[204,9],[[7,[10]]]],[[209,9],[[7,[10]]]],[[210,9],[[7,[10]]]],[[211,9],[[7,[10]]]],[[212,9],[[7,[10]]]],[[213,9],[[7,[10]]]],[[214,9],[[7,[10]]]],[[205,9],[[7,[10]]]],[[215,9],[[7,[10]]]],[[206,9],[[7,[10]]]],[[216,9],[[7,[10]]]],[[217,9],[[7,[10]]]],[[207,9],[[7,[10]]]],[[208,9],[[7,[10]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,[[7,[77]]]],[1,[[7,[77]]]],[1,[[7,[77]]]],[1,[[7,[77]]]],[1,[[7,[77]]]],[1,[[7,[77]]]],[1,[[7,[77]]]],[1,[[7,[77]]]],[1,[[7,[77]]]],[1,[[7,[77]]]],[1,[[7,[77]]]],[1,[[7,[77]]]],[1,[[7,[77]]]],[1,[[7,[77]]]],[1,[[7,[77]]]],[1,[[7,[77]]]],[1,[[7,[77]]]],[1,[[7,[77]]]],[1,[[7,[77]]]],[1,[[7,[77]]]],[1,[[7,[77]]]],[1,[[7,[77]]]],[1,[[7,[77]]]],[1,[[7,[77]]]],[1,[[7,[77]]]],[1,[[7,[77]]]],[1,[[7,[77]]]],[204],0,[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],203],[203,6],0,[203,3],[203,3],[[203,6],3],0,0,0,0,[204,7],[210,7],[212,7],[205,7],[206,7],[207,7],[208,7],[203],0,[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],31],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[218,219],0,0,[220,47],[220,[[14,[[111,[220]],85]]]],[[220,112,72],[[90,[[89,[30,85]]]]]],[[220,72,113],[[90,[[89,[30,85]]]]]],[[],114],[[],114],[[],114],[[],114],[[],114],[[220,72,62],[[90,[[89,[30,85]]]]]],[[220,72],[[90,[[89,[30,85]]]]]],[[220,72,[14,[85]]],[[90,[[89,[30,85]]]]]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[72,221],30],0,[[220,64]],0,0,0,[[],124],[222,222],[223,223],[224,224],[225,225],[226,226],[227,227],[228,228],[218,218],[229,229],[230,230],[[],121],[231,231],[232,232],[[],115],[[],117],[233,233],[234,234],[[],79],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[1,[[7,[222,69]]]],[1,[[7,[223,69]]]],[1,[[7,[224,69]]]],[1,[[7,[225,69]]]],[1,[[7,[226,69]]]],[1,[[7,[227,69]]]],[1,[[7,[228,69]]]],[1,[[7,[218,69]]]],[1,[[7,[229,69]]]],[1,[[7,[230,69]]]],[1,[[7,[232,69]]]],[1,[[7,[233,69]]]],[1,[[7,[234,69]]]],[222,[[7,[6,70]]]],[223,[[7,[6,70]]]],[224,[[7,[6,70]]]],[225,[[7,[6,70]]]],[226,[[7,[6,70]]]],[227,[[7,[6,70]]]],[228,[[7,[6,70]]]],[218,[[7,[6,70]]]],[229,[[7,[6,70]]]],[230,[[7,[6,70]]]],[232,[[7,[6,70]]]],[233,[[7,[6,70]]]],[234,[[7,[6,70]]]],[71,[[7,[6,70]]]],[71,[[7,[6,70]]]],[71,[[7,[6,70]]]],[71,[[7,[6,70]]]],[71,[[7,[6,70]]]],[71,[[7,[6,70]]]],[71,[[7,[6,70]]]],[71,[[7,[6,70]]]],[71,[[7,[6,70]]]],[71,[[7,[6,70]]]],[71,[[7,[6,70]]]],[71,[[7,[6,70]]]],[71,[[7,[6,70]]]],[[220,72],30],[[220,72],[[90,[[89,[30,85]]]]]],[[220,72],30],0,[220],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[232],[6],[233],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[232],[6],[233],[6],[6],[6],[[],[[7,[222]]]],[[],[[7,[223]]]],[[],[[7,[224]]]],[[],[[7,[225]]]],[[],[[7,[226]]]],[[],[[7,[218]]]],[[],[[7,[229]]]],[[],[[7,[230]]]],[[],[[7,[231]]]],[[],[[7,[232]]]],[[],[[7,[233]]]],[[],[[7,[234]]]],[[235,41,16,128,22],[[90,[[89,[30,85]]]]]],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[[],24],[[],24],[[],24],[[],24],[[220,129,72],[[90,[[89,[30,85]]]]]],[[222,222],18],[[223,223],18],[[224,224],18],[[225,225],18],[[218,218],18],[[229,229],18],[[230,230],18],[[232,232],18],[[233,233],18],[[234,234],18],[[236,236],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[124,18],[121,18],[115,18],[117,18],0,0,0,0,0,0,[[222,9],[[7,[10]]]],[[222,9],[[7,[10]]]],[[223,9],[[7,[10]]]],[[224,9],[[7,[10]]]],[[225,9],[[7,[10]]]],[[220,9],[[7,[10]]]],[[226,9],[[7,[10]]]],[[227,9],[[7,[10]]]],[[228,9],[[7,[10]]]],[[218,9],[[7,[10]]]],[[229,9],[[7,[10]]]],[[230,9],[[7,[10]]]],[[230,9],[[7,[10]]]],[[231,9],[[7,[10]]]],[[232,9],[[7,[10]]]],[[232,9],[[7,[10]]]],[[233,9],[[7,[10]]]],[[233,9],[[7,[10]]]],[[234,9],[[7,[10]]]],[[236,9],[[7,[10]]]],[[236,9],[[7,[10]]]],[[237,9],[[7,[10]]]],[[237,9],[[7,[10]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[48,236],[238,236],[[]],[[]],[1,[[7,[77]]]],[1,[[7,[77]]]],[1,[[7,[77]]]],[1,[[7,[77]]]],[1,[[7,[77]]]],[1,[[7,[77]]]],[1,[[7,[77]]]],[1,[[7,[77]]]],[1,[[7,[77]]]],[1,[[7,[77]]]],[1,[[7,[77]]]],[1,[[7,[77]]]],[1,[[7,[77]]]],[[220,72],30],[222],[223],[224],[225],[218],[229],[230],[232],[233],[234],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[239,53],18],0,[[],50],[222,50],[220,50],[230,50],[[],50],[232,50],[[],50],[233,50],[[],50],[234,50],[[],50],0,[[240,80,221,22,1],30],[[220,72,113],[[90,[[89,[30,85]]]]]],0,[[220,[14,[85]]]],[27],[27],0,0,0,0,0,[[80,221,1,29],30],0,[222,7],[223,7],[224,7],[225,7],[226,7],[227,7],[228,7],[218,7],[229,7],[230,7],[231,7],[232,7],[233,7],[234,7],0,0,[236,[[3,[83]]]],[220,30],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[235,33],[[7,[134,48]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],0,[[235,128]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[135,[[7,[230,8]]]],0,0,0,0,0,0,[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],241],[[235,16,33],[[7,[48]]]],[[220,112,72],[[90,[[89,[30,85]]]]]],[[220,72],[[90,[[89,[30,85]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[242,242],[[]],[137,[[7,[124,69]]]],[137,[[7,[124,69]]]],[137,[[7,[115,69]]]],[137,[[7,[115,69]]]],[137,[[7,[117,69]]]],[137,[[7,[117,69]]]],[137,[[7,[121,69]]]],[137,[[7,[121,69]]]],[[],242],[6],[6],[6],[[242,9],[[7,[10]]]],[[]],[[],6],[[]],[[]],[[],7],[[],7],[[],32],[[]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,[240,240],[243,243],[244,244],[[]],[[]],[[]],[[],244],0,[6],[6],[6],[6],[6],[6],[[],[[7,[240]]]],[[],[[7,[243]]]],[[],[[7,[244]]]],[6],[6],[6],[[243,243],18],[[244,244],18],[[],18],[[],18],0,0,0,0,[[240,9],[[7,[10]]]],[[243,9],[[7,[10]]]],[[244,9],[[7,[10]]]],[[]],[[]],[[]],[[],240],[243],[244],[[],6],[[],6],[[],6],[[]],[[]],[[]],0,0,[[[34,[16,245,85]],246,6,247,53,54],240],[[[248,[245]],53,54],243],0,0,0,0,0,0,[240,7],[243,7],[244,7],[240,134],[[]],[[]],[[]],[240],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],32],[[],32],[[],32],[[240,16],[[7,[48]]]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[249,249],[250,250],[251,251],[252,252],[253,253],[254,254],[255,255],[256,256],[257,257],[258,258],[259,259],[260,260],[261,261],[262,262],[263,263],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,[[7,[251,69]]]],[1,[[7,[252,69]]]],[1,[[7,[253,69]]]],[1,[[7,[254,69]]]],[1,[[7,[255,69]]]],[1,[[7,[256,69]]]],[1,[[7,[257,69]]]],[1,[[7,[258,69]]]],[1,[[7,[259,69]]]],[1,[[7,[260,69]]]],[1,[[7,[261,69]]]],[1,[[7,[262,69]]]],[1,[[7,[263,69]]]],[251,[[7,[6,70]]]],[252,[[7,[6,70]]]],[253,[[7,[6,70]]]],[254,[[7,[6,70]]]],[255,[[7,[6,70]]]],[256,[[7,[6,70]]]],[257,[[7,[6,70]]]],[258,[[7,[6,70]]]],[259,[[7,[6,70]]]],[260,[[7,[6,70]]]],[261,[[7,[6,70]]]],[262,[[7,[6,70]]]],[263,[[7,[6,70]]]],[71,[[7,[6,70]]]],[71,[[7,[6,70]]]],[71,[[7,[6,70]]]],[71,[[7,[6,70]]]],[71,[[7,[6,70]]]],[71,[[7,[6,70]]]],[71,[[7,[6,70]]]],[71,[[7,[6,70]]]],[71,[[7,[6,70]]]],[71,[[7,[6,70]]]],[71,[[7,[6,70]]]],[71,[[7,[6,70]]]],[71,[[7,[6,70]]]],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[[249,9],[[7,[10]]]],[[249,9],[[7,[10]]]],[[251,9],[[7,[10]]]],[[252,9],[[7,[10]]]],[[253,9],[[7,[10]]]],[[254,9],[[7,[10]]]],[[255,9],[[7,[10]]]],[[256,9],[[7,[10]]]],[[257,9],[[7,[10]]]],[[258,9],[[7,[10]]]],[[259,9],[[7,[10]]]],[[260,9],[[7,[10]]]],[[261,9],[[7,[10]]]],[[262,9],[[7,[10]]]],[[263,9],[[7,[10]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,[[7,[77]]]],[1,[[7,[77]]]],[1,[[7,[77]]]],[1,[[7,[77]]]],[1,[[7,[77]]]],[1,[[7,[77]]]],[1,[[7,[77]]]],[1,[[7,[77]]]],[1,[[7,[77]]]],[1,[[7,[77]]]],[1,[[7,[77]]]],[1,[[7,[77]]]],[1,[[7,[77]]]],[1,[[7,[77]]]],[1,[[7,[77]]]],[1,[[7,[77]]]],[1,[[7,[77]]]],[1,[[7,[77]]]],[1,[[7,[77]]]],[1,[[7,[77]]]],[1,[[7,[77]]]],[1,[[7,[77]]]],[1,[[7,[77]]]],[1,[[7,[77]]]],[1,[[7,[77]]]],[1,[[7,[77]]]],0,[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],250],[250,6],0,[250,3],[250,3],[[250,6],3],[251,7],[253,7],[255,7],[256,7],[258,7],[260,7],[262,7],[250],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],31],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[245,245],[[]],[[245,245],151],[6],[6],[[],[[7,[245]]]],[6],[[245,245],18],[[],18],[[245,9],[[7,[10]]]],[[245,9],[[7,[10]]]],[[]],[47,[[7,[245]]]],[245],[[],264],[[],6],[[]],[245,18],0,[265,245],[[245,245],[[3,[151]]]],[245,7],[[],264],[[],266],[[]],[245],[245,267],[[],268],[[],107],[[],31],[[],7],[[],7],[[245,269],245],[[],32],[[]],0,0,[[],[[7,[70]]]],[269],0,0,0,0,0,0,0,[270,271],0,[[]],[[]],[[]],[[]],[[]],[[]],[272,272],[270,270],[[]],[[]],[1,[[7,[272,69]]]],[1,[[7,[270,69]]]],[272,[[7,[6,70]]]],[270,[[7,[6,70]]]],[71,[[7,[6,70]]]],[71,[[7,[6,70]]]],[[270,273],18],[6],[6],[6],[6],[6],[6],[[],[[7,[272]]]],[[],[[7,[270]]]],[6],[6],[6],[[272,272],18],[[270,270],18],[[],18],[[],18],[[272,9],[[7,[10]]]],[[270,9],[[7,[10]]]],[[238,9],[[7,[10]]]],[[238,9],[[7,[10]]]],[[]],[[]],[[]],[1,[[7,[77]]]],[1,[[7,[77]]]],[272],[270],[272],[[],6],[[],6],[[],6],[[]],[[]],[[]],0,[[270,274,54,154],[[7,[272,238]]]],[272,275],0,[272,271],[27],[272,7],[270,7],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[]],[[]],[[],31],0,[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[272,154],0,[272,276],0,[[],32],[[],32],[[],32],[272,[[7,[277]]]],[272,[[7,[277]]]],[[272,269,248],[[7,[238]]]],[[]],[[]],[[]],0,0,0,0,0,0,0,[[278,16],[[90,[[89,[30]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[280,[279,279]]],[[280,[279,279]]]],[[[278,[279,279]]],[[278,[279,279]]]],[[]],[[]],0,[[],281],[6],[6],[6],[6],[6],[6],[6],[6],[[],[[7,[280]]]],[6],[6],[6],[6],[[[280,[282,282]],9],11],[[]],[[]],[[]],[[]],[[],6],[[],6],[[],6],[[],6],0,[[]],[[]],[[]],[[]],0,0,0,[[[40,[280]]],278],0,0,[278,[[90,[[89,[30]]]]]],[278,[[90,[[89,[30]]]]]],[280,7],[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],32],[[],32],[[],32],[[],32],[[]],[[]],[[]],[[]],0,0,0,0,0,0,[[283,[14,[[111,[21]]]],[3,[47]]]],[[283,82]],[[]],[[]],[284,284],[[]],[6],[6],[6],0,[[284,9],11],[[]],[[],6],[[]],[[20,[285,[21]],29]],[[],[[14,[[111,[21]]]]]],[[]],[[],7],[[],7],[[],32],[[]],0,0,0,0,0,0,0,0,[[286,287,288],[[7,[48]]]],[[286,3],[[7,[16,48]]]],[[]],[[]],[[]],[[]],[[]],[[]],0,[39,39],[286,286],[[]],[[]],[[31,16],[[90,[[89,[30]]]]]],[[289,31,16],[[90,[[89,[30]]]]]],[6],[6],[6],[6],[6],[6],[6],[6],[6],[[289,9],11],[[39,9],11],[[286,9],11],[[]],[[]],[[]],[[286,59],[[3,[16]]]],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[],290],[31,[[90,[[89,[30]]]]]],[[289,31],[[90,[[89,[30]]]]]],0,[39,289],[291,286],0,0,0,0,0,0,0,0,0,[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],32],[[],32],[[],32],[[]],[[]],[[]],0,0,[[]],[[]],[[]],[[]],0,0,[[292,31,16],[[90,[[89,[30]]]]]],[[293,16],292],[6],[6],[6],[6],[16,[[7,[16,48]]]],[6],[6],[[]],[[]],0,[[],6],[[],6],[[]],[[]],[[292,31],[[90,[[89,[30]]]]]],[[],293],[[],3],[[],7],[[],7],[[],7],[[],7],[[],32],[[],32],[[]],[[]],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[294],[[]],[294],[[295,296],[[7,[3]]]],[6],[6],[6],[6],[6],[6],[[295,296],7],[[[294,[282,282,282]],9],11],[[[295,[282]],9],11],[[]],[[]],[[],6],[[],6],[[]],[[]],[[],297],[[],[[294,[298,299]]]],[[],295],[300,301],[300,301],[[[90,[294]],302],[[303,[7]]]],[[[90,[294]],302],[[303,[7]]]],[[[90,[294]],302],[[303,[3]]]],[[[90,[294]],302],[[303,[7]]]],0,[[[90,[294]]],7],0,[[],7],[[],7],[[],7],[[],7],[[90,302],[[303,[[3,[7]]]]]],[[],32],[[],32],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[304,16],[[90,[[89,[30]]]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[38,38],[305,305],[[[306,[279]]],[[306,[279]]]],[[]],[[]],[[]],0,[[307,[297,[306]],24],308],0,0,0,[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[[],[[7,[38]]]],[[],[[7,[305]]]],[[],[[7,[306]]]],[[307,24],308],[[307,48,24],308],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],0,[[38,9],11],[[305,9],11],[[[306,[282]],9],11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[38,23,22],304],[[16,305,[309,[306]],[310,[[297,[306]]]],22],311],[[38,47,[51,[16,31]]],[[14,[312]]]],0,0,0,[313,[[14,[16]]]],0,[304,[[90,[[89,[30]]]]]],[311,4],[[307,314,[297,[306]]],308],[[307,315,[7,[306,48]]],308],[[307,[7,[306,48]]],[[7,[48]]]],[[307,314],308],0,[[307,297],[[7,[48]]]],0,[[316,29]],[[317,310,16,305,[309,[306]],[310,[[297,[306]]]],29]],[[38,[309,[306]],[51,[16,[317,[[297,[306]]]]]],29]],[304,[[90,[[89,[30]]]]]],[311,4],[[307,314],308],[[307,315],308],[38,7],[305,7],[306,7],0,[316,[[3,[316]]]],[[307,315],[[3,[308]]]],[[307,314],[[3,[308]]]],[[]],[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[307,[[7,[[297,[306]],48]]]],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[318,319]],[[]],[[]],[[]],[[]],[[]],[[]],[[[318,[279]]],[[318,[279]]]],[319,319],[[[320,[279]]],[[320,[279]]]],[[]],[[]],[[]],[[319,319],151],[[[320,[321]],320],151],[[],318],[6],[6],[6],[6],[6],[6],[[],[[7,[319]]]],[[],[[7,[320]]]],[6],[6],[6],[[[318,[322]],318],18],[[319,319],18],[[[320,[322]],320],18],[[],18],[[],18],[[],18],[[[318,[282]],9],11],[[319,9],11],[[[320,[282]],9],11],[[]],[[]],[[]],0,[319,319],[[],6],[[],6],[[],6],[[]],[[]],[[]],[318,64],0,0,[[319,319],[[3,[151]]]],[[[320,[323]],320],[[3,[151]]]],[318,320],0,[319,7],[320,7],[[]],[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],32],[[],32],[[],32],[[]],[[]],[[]],0,0,0,0,[[]],[[]],[[]],[[]],[87,87],[324,324],[[]],[[]],[6],[6],[6],[6],[[],[[7,[87]]]],[[],[[7,[324]]]],[6],[6],[[87,87],18],[[324,324],18],[[],18],[[],18],[[87,9],[[7,[10]]]],[[324,9],[[7,[10]]]],[[]],[[]],[121,324],[87],[324],[[],6],[[],6],[[]],[[]],[87,18],0,[87,7],[324,7],[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[324,1],[[7,[121,69]]]],[[],32],[[],32],[[]],[[]],0,0,0,0,0,0,0,[[]],[[]],[135,135],[[]],[1,[[7,[135,69]]]],[135,[[7,[6,70]]]],[71,[[7,[6,70]]]],[6],[6],[6],[[135,135],18],[[],18],[[135,9],[[7,[10]]]],[[]],[121,135],[1,[[7,[77]]]],[135],[[],6],[[]],[135,18],[[],[[14,[84,85]]]],[[]],[[],7],[[],7],[135,[[7,[8]]]],[135,[[7,[8]]]],[[],32],[[]],0,0,[[]],0,0,0,0,0,0,[[],154],[269,325],[[]],[[]],[[]],[[]],[[]],[[]],[81,81],[326,326],[[]],[[]],[1,[[7,[81,69]]]],[81,[[7,[6,70]]]],[71,[[7,[6,70]]]],[6],[6],[6],[6],[6],[6],[[],[[7,[326]]]],[6],[6],[6],[[81,81],18],[[326,326],18],[[],18],[[],18],[[81,9],[[7,[10]]]],[[326,9],[[7,[10]]]],[[76,9],[[7,[10]]]],[[76,9],[[7,[10]]]],[[]],[[]],[81,326],[[]],[1,[[7,[77]]]],[81],[326],[[],6],[[],6],[[],6],0,[[]],[[]],[[]],0,0,[27],[326,7],0,[[],[[14,[84,85]]]],[[]],[[]],[[],31],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[326,1],[[7,[81,69]]]],[81,86],[[],86],[[],32],[[],32],[[],32],[[81,64],[[7,[76]]]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[327,327],[328,328],[329,329],[[]],[[]],[[]],[1,[[7,[327,69]]]],[1,[[7,[328,69]]]],[1,[[7,[329,69]]]],[327,[[7,[6,70]]]],[328,[[7,[6,70]]]],[329,[[7,[6,70]]]],[71,[[7,[6,70]]]],[71,[[7,[6,70]]]],[71,[[7,[6,70]]]],[6],[6],[6],[6],[6],[6],[[],[[7,[328]]]],[[],[[7,[329]]]],[6],[6],[6],[[327,327],18],[[328,328],18],[[329,329],18],[[],18],[[],18],[[],18],[[327,9],[[7,[10]]]],[[328,9],[[7,[10]]]],[[329,9],[[7,[10]]]],[[]],[[]],[[]],[1,[[7,[77]]]],[1,[[7,[77]]]],[1,[[7,[77]]]],[327],[328],[329],[[],6],[[],6],[[],6],0,[[]],[[]],[[]],[327,81],0,[328,7],[329,7],0,[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[],[[14,[84,85]]]],[[]],[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[327,86],[[],86],[[],32],[[],32],[[],32],[[327,64],[[7,[76]]]],[[]],[[]],[[]]],"p":[[3,"ModuleDecoderRegistry"],[3,"FedimintServer"],[4,"Option"],[6,"Cancellable"],[4,"EpochMessage"],[15,"usize"],[4,"Result"],[4,"CoreError"],[3,"Formatter"],[3,"Error"],[6,"Result"],[3,"OsRngGen"],[6,"ConsensusOutcome"],[3,"Vec"],[3,"SerdeConsensusItem"],[3,"PeerId"],[6,"Step"],[15,"bool"],[6,"SerdeConsensusOutcome"],[3,"ServerConfig"],[3,"FedimintConsensus"],[3,"TaskGroup"],[6,"PeerConnector"],[15,"u64"],[4,"EpochVerifyError"],[3,"ConsensusProposal"],[3,"Demand"],[6,"Result"],[3,"TaskHandle"],[8,"Future"],[3,"String"],[3,"TypeId"],[3,"ServerModuleConfig"],[3,"BTreeMap"],[3,"Peer"],[3,"ServerConfigParams"],[4,"KeyType"],[3,"NetworkConfig"],[3,"TlsConfig"],[3,"PeerConnections"],[3,"MuxPeerConnections"],[8,"RngCore"],[8,"CryptoRng"],[3,"SecretKeyShare"],[3,"SerdeSecret"],[3,"PublicKeySet"],[15,"str"],[3,"Error"],[3,"Amount"],[15,"u16"],[3,"HashMap"],[3,"PrivateKey"],[4,"Network"],[15,"u32"],[8,"TypedServerModuleConfig"],[4,"Value"],[3,"Path"],[3,"ClientConfig"],[3,"Certificate"],[3,"FundingVerifier"],[3,"TransactionItemAmount"],[3,"Audit"],[3,"FedimintInterconnect"],[8,"Iterator"],[8,"Send"],[3,"VerificationCaches"],[3,"ConsensusOutcomeConversion"],[3,"AcceptedTransaction"],[3,"DecodeError"],[3,"Error"],[8,"Write"],[3,"DatabaseTransaction"],[3,"EpochHistory"],[4,"TransactionSubmissionError"],[3,"OutcomeHistory"],[4,"TransactionError"],[4,"DecodingError"],[6,"ModuleKey"],[3,"VerificationCache"],[3,"Database"],[3,"Transaction"],[3,"ServerModule"],[8,"Error"],[15,"u8"],[3,"Global"],[3,"TransactionId"],[4,"TransactionStatus"],[4,"ConsensusItem"],[3,"Box"],[3,"Pin"],[4,"DbKeyPrefix"],[3,"DbKeyPrefixIter"],[3,"EpochHistoryKey"],[3,"ProposedTransactionKey"],[3,"ProposedTransactionKeyPrefix"],[3,"AcceptedTransactionKey"],[3,"AcceptedTransactionKeyPrefix"],[3,"RejectedTransactionKey"],[3,"RejectedTransactionKeyPrefix"],[3,"DropPeerKey"],[3,"DropPeerKeyPrefix"],[3,"EpochHistoryKeyPrefix"],[3,"LastEpochKey"],[3,"EpochSignatureShare"],[3,"EpochSignature"],[3,"SerdeEpochHistory"],[3,"Hash"],[3,"UnzipConsensusItem"],[3,"PublicKey"],[3,"LightningModule"],[3,"ApiEndpoint"],[8,"ModuleInterconect"],[3,"OutPoint"],[8,"Any"],[3,"Input"],[3,"LightningInput"],[3,"Output"],[4,"LightningOutput"],[3,"ContractOutput"],[3,"ContractAccount"],[3,"OutputOutcome"],[4,"LightningOutputOutcome"],[3,"LightningGateway"],[3,"ConsensusItem"],[3,"LightningConsensusItem"],[3,"LightningVerificationCache"],[3,"LightningModuleConfigGen"],[3,"ConfigGenParams"],[3,"HashSet"],[4,"LightningModuleError"],[3,"GatewayClientConfig"],[3,"ContractId"],[3,"LightningModuleConfig"],[3,"ClientModuleConfig"],[4,"OutputOutcome"],[3,"LightningModuleDecoder"],[8,"Read"],[3,"LightningModuleClientConfig"],[3,"FeeConsensus"],[3,"BitSlice"],[3,"u5"],[4,"Contract"],[4,"FundedContract"],[4,"ContractOutcome"],[3,"AccountContractOutcome"],[3,"OutgoingContractOutcome"],[3,"Preimage"],[4,"DecryptedPreimage"],[3,"EncryptedPreimage"],[3,"PreimageDecryptionShare"],[4,"Ordering"],[4,"Error"],[4,"Error"],[3,"XOnlyPublicKey"],[4,"Error"],[4,"BitSpanError"],[3,"AccountContract"],[3,"OfferId"],[3,"IncomingContractOffer"],[3,"IncomingContract"],[3,"FundedIncomingContract"],[3,"OutgoingContract"],[4,"DbKeyPrefix"],[3,"DbKeyPrefixIter"],[3,"ContractKey"],[3,"ContractKeyPrefix"],[3,"ContractUpdateKeyPrefix"],[3,"ContractUpdateKey"],[3,"OfferKey"],[3,"OfferKeyPrefix"],[3,"ProposeDecryptionShareKey"],[3,"AgreedDecryptionShareKey"],[3,"LightningGatewayKey"],[3,"LightningGatewayKeyPrefix"],[3,"ProposeDecryptionShareKeyPrefix"],[3,"AgreedDecryptionShareKeyPrefix"],[3,"Mint"],[3,"MintOutputConfirmation"],[3,"OutputConfirmationSignatures"],[3,"OutputOutcome"],[3,"Note"],[3,"Nonce"],[3,"BlindNonce"],[3,"VerificationCache"],[3,"MintConfigGenParams"],[3,"MintInput"],[3,"MintOutput"],[3,"MintOutputOutcome"],[3,"MintShareErrors"],[4,"PeerErrorType"],[4,"CombineError"],[4,"MintError"],[3,"MintConfigGenerator"],[3,"InvalidAmountTierError"],[3,"MintConfig"],[3,"AggregatePublicKey"],[3,"RandomState"],[3,"Message"],[3,"MintModuleDecoder"],[3,"MintClientConfig"],[3,"FeeConsensus"],[4,"DbKeyPrefix"],[3,"DbKeyPrefixIter"],[3,"NonceKey"],[3,"OutputOutcomeKey"],[4,"MintAuditItemKey"],[3,"EcashBackupKey"],[3,"ECashUserBackupSnapshot"],[3,"NonceKeyPrefix"],[3,"ProposedPartialSignatureKey"],[3,"ProposedPartialSignaturesKeyPrefix"],[3,"ReceivedPartialSignatureKey"],[3,"ReceivedPartialSignatureKeyOutputPrefix"],[3,"ReceivedPartialSignaturesKeyPrefix"],[3,"OutputOutcomeKeyPrefix"],[3,"MintAuditItemKeyPrefix"],[3,"EcashBackupKeyPrefix"],[3,"PegOutFees"],[3,"Amount"],[3,"Wallet"],[3,"BitcoindRpc"],[4,"WalletConsensusItem"],[3,"RoundConsensusItem"],[3,"PegOutSignatureItem"],[3,"RoundConsensus"],[3,"SpendableUTXO"],[3,"PendingTransaction"],[3,"UnsignedTransaction"],[3,"PegOut"],[3,"WalletOutputOutcome"],[3,"WalletConfigGenParams"],[3,"WalletInput"],[3,"WalletOutput"],[3,"WalletVerificationCache"],[3,"WalletConfigGenerator"],[4,"WalletError"],[4,"ProcessPegOutSigError"],[4,"PegInProofError"],[3,"Address"],[3,"WalletConfig"],[3,"UnzipWalletConsensusItem"],[3,"WalletModuleDecoder"],[3,"WalletClientConfig"],[3,"FeeConsensus"],[3,"CompressedPublicKey"],[3,"SecretKey"],[3,"BitcoindRpcCfg"],[4,"Descriptor"],[4,"DbKeyPrefix"],[3,"DbKeyPrefixIter"],[3,"BlockHashKey"],[3,"BlockHashKeyPrefix"],[3,"UTXOKey"],[3,"UTXOPrefixKey"],[3,"RoundConsensusKey"],[3,"UnsignedTransactionKey"],[3,"UnsignedTransactionPrefixKey"],[3,"PendingTransactionKey"],[3,"PendingTransactionPrefixKey"],[3,"PegOutTxSignatureCI"],[3,"PegOutTxSignatureCIPrefix"],[3,"PegOutBitcoinTransaction"],[3,"PegOutBitcoinTransactionPrefix"],[3,"Hash"],[3,"PublicKey"],[3,"Hash"],[3,"PublicKey"],[3,"Hash"],[3,"Secp256k1"],[3,"TxOutProof"],[3,"BlockHash"],[3,"PegInProof"],[3,"Txid"],[3,"Transaction"],[3,"OutPoint"],[3,"TxOut"],[3,"ValidationErrors"],[3,"PeerConnectionMultiplexer"],[8,"Clone"],[3,"ModuleMultiplexed"],[3,"ModuleMultiplexerOutOfOrder"],[8,"Debug"],[3,"RpcModule"],[3,"RpcHandlerCtx"],[3,"Arc"],[3,"PeerCertStore"],[3,"TcpListener"],[3,"TlsAcceptor"],[3,"TlsTcpConnector"],[6,"AnyConnector"],[8,"IntoIterator"],[3,"MockConnector"],[3,"MockNetwork"],[3,"BidiFramed"],[3,"BincodeCodec"],[3,"BytesMut"],[6,"AnyFramedTransport"],[3,"WriteHalf"],[3,"ReadHalf"],[3,"TcpStream"],[6,"TcpBidiFramed"],[3,"Context"],[4,"Poll"],[3,"ReconnectPeerConnections"],[3,"ConnectionConfig"],[3,"PeerMessage"],[3,"CommonPeerConnectionState"],[4,"PeerConnectionState"],[6,"SharedAnyConnector"],[3,"Receiver"],[3,"PeerConnection"],[3,"Node"],[3,"BTreeSet"],[3,"DisconnectedPeerConnectionState"],[3,"ConnectedPeerConnectionState"],[3,"PeerConnectionStateMachine"],[3,"Sender"],[3,"MessageQueue"],[3,"MessageId"],[3,"UniqueMessage"],[8,"Ord"],[8,"PartialEq"],[8,"PartialOrd"],[3,"SerdeOutputOutcome"],[3,"Signature"],[3,"SerdeTransaction"],[3,"Transaction"],[4,"Input"],[4,"Output"],[3,"PeerServerParams"],[8,"IterUnzipConsensusItem"],[13,"CancelOutgoing"],[13,"Contract"],[13,"Offer"],[8,"IdentifyableContract"],[8,"IterUnzipWalletConsensusItem"],[8,"Contract"],[8,"Tweakable"],[3,"ModuleMultiplexerInner"],[8,"Connector"],[8,"FramedTransport"],[8,"PeerSlice"],[13,"Accepted"],[8,"TryIntoOutcome"],[8,"RngGenerator"],[13,"UnbalancedTransaction"]]},\
"fedimint_sled":{"doc":"Sled implementation of the <code>Database</code> trait. It should not …","t":[3,3,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,12,11,11,11,11,11,11,2,11,11,11,11,11,11,11,11],"n":["SledDb","SledTransaction","begin_transaction","borrow","borrow","borrow_mut","borrow_mut","commit_tx","db","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","from","init","init","inner","into","into","num_pending_operations","num_savepoint_operations","open","operations","raw_find_by_prefix","raw_get_bytes","raw_insert_bytes","raw_remove_entry","rollback_tx_to_savepoint","set_tx_savepoint","sled","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip"],"q":["fedimint_sled","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","",""],"i":[0,0,1,1,6,1,6,6,6,1,6,1,6,1,6,1,6,1,1,6,1,6,1,1,6,6,6,1,6,6,6,6,6,6,6,0,1,6,1,6,1,6,1,6],"f":[0,0,[[1,2],[[5,[[4,[3]]]]]],[[]],[[]],[[]],[[]],[[[4,[6]]],[[5,[[4,[3]]]]]],0,[7],[7],[7],[7],[7],[7],[[1,8],9],[[6,8],9],[[]],[10,1],[[]],[[],7],[[],7],[1,10],[[]],[[]],0,0,[[[12,[11]],13],[[15,[1,14]]]],0,[6,[[5,[[4,[3]]]]]],[6,[[5,[[4,[3]]]]]],[[6,[17,[16]]],[[5,[[4,[3]]]]]],[6,[[5,[[4,[3]]]]]],[6,[[5,[[4,[3]]]]]],[6,[[5,[[4,[3]]]]]],0,[[],18],[[],18],[[],18],[[],18],[[],19],[[],19],[[]],[[]]],"p":[[3,"SledDb"],[3,"ModuleDecoderRegistry"],[8,"Future"],[3,"Box"],[3,"Pin"],[3,"SledTransaction"],[15,"usize"],[3,"Formatter"],[6,"Result"],[3,"Tree"],[3,"Path"],[8,"AsRef"],[15,"str"],[4,"Error"],[6,"Result"],[15,"u8"],[3,"Vec"],[4,"Result"],[3,"TypeId"]]},\
"fedimint_testing":{"doc":"","t":[3,3,3,12,5,5,12,11,11,11,11,11,11,0,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,0,0,10,10,10,10,3,3,3,11,12,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,12,12,11,11,12,11,11,11,11,11,11,12,11,11,11,11,11,11,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11],"n":["FakeFed","FakeInterconnect","TestInputMeta","amount","assert_all_equal","assert_all_equal_result","block_height","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","btc","call","client_cfg","client_cfg","client_cfg_typed","consensus_round","decoders","eq","fetch_from_all","fmt","fmt","from","from","from","generate_fake_utxo","into","into","into","keys","members","new","new_block_height_responder","output_outcome","patch_dbs","set_block_height","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","verify_input","verify_output","vzip","vzip","vzip","BitcoinTest","bitcoind","fixtures","get_new_address","mine_block_and_get_received","mine_blocks","send_and_mine_block","FakeBitcoindRpc","FakeBitcoindRpcController","FakeBitcoindRpcState","add_pending_tx_to_block","block_height","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","controller","default","default","fee_rate","fmt","fmt","from","from","from","get_block","get_block_hash","get_block_height","get_fee_rate","get_network","height_hash","into","into","into","is_btc_sent_to","new","set_block_height","set_fee_rate","state","state","submit_transaction","to_owned","transactions","try_from","try_from","try_from","try_into","try_into","try_into","tx_in_blocks","type_id","type_id","type_id","vzip","vzip","vzip","FakeBitcoinTest","blocks","borrow","borrow_mut","clone","clone_into","default","fmt","from","get_block","get_block_hash","get_block_height","get_fee_rate","get_network","get_new_address","into","mine_block","mine_block_and_get_received","mine_blocks","new","new_transaction","pending","pending_merkle_tree","send_and_mine_block","submit_transaction","to_owned","try_from","try_into","type_id","vzip"],"q":["fedimint_testing","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_testing::btc","","","","","","","fedimint_testing::btc::bitcoind","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_testing::btc::fixtures","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","Make sure all elements are equal for <code>Result&lt;O, E&gt;</code>","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Returns a new address.","Mine a block to include any pending transactions then get …","Mines a given number of blocks","Send some bitcoin to an address then mine a block to …","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","",""],"i":[0,0,0,13,0,0,8,1,8,13,1,8,13,0,1,8,8,8,8,8,13,8,8,13,1,8,13,8,1,8,13,13,8,8,1,8,8,8,1,8,13,1,8,13,1,8,13,8,8,1,8,13,0,0,0,42,42,42,42,0,0,0,31,33,31,33,32,31,33,32,32,32,32,33,32,33,33,32,31,33,32,32,32,32,32,32,0,31,33,32,31,32,31,31,31,32,32,32,33,31,33,32,31,33,32,33,31,33,32,31,33,32,0,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38],"f":[0,0,0,0,[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],0,[[1,2,3,4],[[7,[[6,[5]]]]]],[8,9],0,[8,[[11,[10]]]],[8],[8,12],[[13,13],14],[8],[[[8,[15]],16],17],[[13,16],17],[[]],[[]],[[]],[8],[[]],[[]],[[]],0,0,[[18,19],[[11,[8]]]],[[[21,[20]]],1],[[8,22],23],[8],[[8,24]],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],26],[[],26],[[],26],[8,[[25,[13,27]]]],[8,14],[[]],[[]],[[]],0,0,0,[[],28],[28,29],[24],[[28,30]],0,0,0,[[31,24]],0,[[]],[[]],[[]],[[]],[[]],[[]],[32,32],[[]],[32,31],[[],33],[[],32],0,[[33,16],17],[[32,16],17],[[]],[[]],[[]],[[32,34],[[7,[[6,[5]]]]]],[[32,24],[[7,[[6,[5]]]]]],[32,[[7,[[6,[5]]]]]],[[32,35],[[7,[[6,[5]]]]]],[32,[[7,[[6,[5]]]]]],[24,34],[[]],[[]],[[]],[[31,30,28],14],[[],32],[[31,24]],[[31,[23,[36]]]],0,0,[[32,37],[[7,[[6,[5]]]]]],[[]],0,[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],0,[[],26],[[],26],[[],26],[[]],[[]],[[]],0,0,[[]],[[]],[38,38],[[]],[[],38],[[38,16],17],[[]],[[38,34],[[7,[[6,[5]]]]]],[[38,24],[[7,[[6,[5]]]]]],[38,[[7,[[6,[5]]]]]],[[38,35],[[7,[[6,[5]]]]]],[38,[[7,[[6,[5]]]]]],[38,28],[[]],[[39,39]],[[38,28],29],[[38,24]],[[],38],[[[39,[40]]],37],0,[[],41],[[38,28,30]],[[38,37],[[7,[[6,[5]]]]]],[[]],[[],25],[[],25],[[],26],[[]]],"p":[[3,"FakeInterconnect"],[15,"str"],[3,"String"],[4,"Value"],[8,"Future"],[3,"Box"],[3,"Pin"],[3,"FakeFed"],[3,"ClientModuleConfig"],[8,"DeserializeOwned"],[6,"Result"],[3,"ModuleDecoderRegistry"],[3,"TestInputMeta"],[15,"bool"],[8,"Debug"],[3,"Formatter"],[6,"Result"],[15,"usize"],[3,"ConfigGenParams"],[3,"AtomicU64"],[3,"Arc"],[3,"OutPoint"],[4,"Option"],[15,"u64"],[4,"Result"],[3,"TypeId"],[4,"ModuleError"],[3,"Address"],[3,"Amount"],[3,"Amount"],[3,"FakeBitcoindRpcController"],[3,"FakeBitcoindRpc"],[3,"FakeBitcoindRpcState"],[3,"BlockHash"],[15,"u16"],[3,"Feerate"],[3,"Transaction"],[3,"FakeBitcoinTest"],[3,"Vec"],[3,"TxOut"],[3,"PartialMerkleTree"],[8,"BitcoinTest"]]},\
"fedimint_wallet":{"doc":"","t":[17,13,13,13,8,13,13,13,6,13,6,13,3,13,3,13,3,3,4,3,13,3,13,13,3,3,13,13,13,3,3,3,3,3,4,4,3,3,3,3,13,13,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,12,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,0,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,11,11,11,5,11,11,12,12,12,12,11,12,5,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,0,12,12,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,3,3,4,3,13,3,3,13,3,3,13,3,3,13,3,3,3,13,3,3,13,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,8,10,10,13,3,4,13,13,13,3,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,5,11,11,11,11],"n":["CONFIRMATION_TARGET","DuplicateSignature","ErrorFinalizingPsbt","InvalidSignature","IterUnzipWalletConsensusItem","MalformedSignature","MissingOrMalformedChangeTweak","NotEnoughSpendableUTXO","PartialSig","PegInAlreadyClaimed","PegInDescriptor","PegInProofError","PegOut","PegOutFeeRate","PegOutFees","PegOutSignature","PegOutSignatureItem","PendingTransaction","ProcessPegOutSigError","RoundConsensus","RoundConsensus","RoundConsensusItem","RpcError","SighashError","SpendableUTXO","StatelessWallet","UnknownNetwork","UnknownPegInProofBlock","UnknownTransaction","UnsignedTransaction","UnzipWalletConsensusItem","Wallet","WalletConfigGenParams","WalletConfigGenerator","WalletConsensusItem","WalletError","WalletInput","WalletOutput","WalletOutputOutcome","WalletVerificationCache","WrongNetwork","WrongSignatureCount","amount","amount","amount","api_base_name","api_endpoints","apply_input","apply_output","as_any","as_any","as_any","as_any","as_any","audit","available_utxos","await_consensus_proposal","begin_consensus_epoch","bitcoin_rpc","block_height","block_height","block_is_known","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","broadcast_pending_tx","btc_rpc","build_verification_cache","cfg","change","change","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","common","config","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_height","consensus_proposal","create_peg_out_tx","create_tx","current_round_consensus","db","decoder","deref","deref","deref_mut","deref_mut","derive_script","descriptor","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","distributed_gen","dyn_hash","dyn_hash","dyn_hash","dyn_hash","end_consensus_epoch","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","erased_eq","erased_eq","erased_eq","erased_eq","fee_rate","fee_rate","fee_rate","fees","fees","finality_delay","finalize_peg_out_psbt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","get_wallet_value","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_address_valid_for_network","keys","module_key","module_key","module_key","module_key","module_key","module_key","module_key","module_key","module_key","module_key","module_key","network","new_with_bitcoind","offline_wallet","output_status","peg_out_signature","process_block_height_proposals","process_fee_proposals","process_randomness_contributions","proprietary_tweak_key","provide","provide","psbt","randomness","randomness_beacon","recipient","recognize_change_utxo","round_consensus","run_broadcast_pending_tx","save_peg_out_signatures","secp","secp","secret_key","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","sign_peg_out_psbt","sign_psbt","signature","signatures","source","sync_up_to_consensus_height","target_height","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_client_config","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","total_weight","trusted_dealer_gen","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tweak","tweak","tweakable","tx","txid","txoproof","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unzip_wallet_consensus_item","validate_config","validate_input","validate_output","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","WalletModuleDecoder","borrow","borrow_mut","clone","clone_into","decode_consensus_item","decode_consensus_item","decode_input","decode_input","decode_output","decode_output","decode_output_outcome","decode_output_outcome","default","fmt","from","into","to_owned","try_from","try_into","type_id","vzip","FeeConsensus","WalletClientConfig","WalletConfig","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","btc_rpc","clone","clone","clone","clone_into","clone_into","clone_into","default","default_fee","deserialize","deserialize","deserialize","eq","eq","fee_consensus","fee_consensus","finality_delay","finality_delay","fmt","fmt","fmt","from","from","from","from_parts","hash","hash","into","into","into","network","network","new","new","peer_peg_in_keys","peg_in_abs","peg_in_descriptor","peg_in_descriptor","peg_in_key","peg_out_abs","serialize","serialize","serialize","to_client_config","to_owned","to_owned","to_owned","to_parts","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","validate_config","vzip","vzip","vzip","BlockHash","BlockHashKey","BlockHashKeyPrefix","DbKeyPrefix","DbKeyPrefixIter","PegOutBitcoinOutPoint","PegOutBitcoinTransaction","PegOutBitcoinTransactionPrefix","PegOutTxSigCi","PegOutTxSignatureCI","PegOutTxSignatureCIPrefix","PendingTransaction","PendingTransactionKey","PendingTransactionPrefixKey","RoundConsensus","RoundConsensusKey","UTXOKey","UTXOPrefixKey","UnsignedTransaction","UnsignedTransactionKey","UnsignedTransactionPrefixKey","Utxo","back_idx","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","get","idx","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","iter","len","marker","next","next_back","nth","serialize","serialize","serialize","serialize","serialize","serialize","serialize","size_hint","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","CompressedPublicKey","borrow","borrow_mut","clone","clone_into","cmp","deserialize","eq","fmt","fmt","from","from_str","hash","hash_to_hash160","into","is_uncompressed","key","new","partial_cmp","serialize","to_hash160","to_hash256","to_owned","to_pubkeyhash","to_public_key","to_ripemd160","to_sha256","to_string","try_from","try_into","tweak","type_id","vzip","Contract","Tweakable","encode","tweak","OutputIndexOutOfRange","PegInProof","PegInProofError","ScriptDoesNotMatch","TooManyTransactionOutputs","TransactionNotInProof","TxOutProof","block","block_header","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","contains_tx","deserialize","deserialize","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from_bytes","from_bytes","hash","hash","identity","into","into","into","merkle_proof","new","outpoint","output_idx","proof_block","provide","serialize","serialize","to_bytes","to_bytes","to_owned","to_owned","to_string","transaction","try_from","try_from","try_from","try_into","try_into","try_into","tweak_contract_key","tweak_contract_key","tx_output","txout_proof","type_id","type_id","type_id","validate","validate_args","validate_peg_in_proof","verify","vzip","vzip","vzip"],"q":["fedimint_wallet","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_wallet::common","","","","","","","","","","","","","","","","","","","","","","fedimint_wallet::config","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_wallet::dbfedimint_wallet::keys","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_wallet::tweakable","","","","fedimint_wallet::txoproof","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","A peg-out tx that is ready to be broadcast with a tweak …","","","","","","","","","","","","A PSBT that is awaiting enough signatures from the …","","","","","","","","","Contains the Bitcoin transaction id of the transaction …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Attempts to create a tx ready to be signed from available …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Panics","Panics","","","","","","","","","Add a change UTXO to our spendable UTXO database after it …","","","","","","","","","","","","","","","","","","","","","Try to attach signatures to a pending peg-out tx.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Confirmations required for a peg in to be accepted by …","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","The bitcoin network the client will use","","","","","","The federations public peg-in-descriptor","","","","","","","","","","","","","","","","","","","","","","","","","","","","An iterator over the variants of Self","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","An object that can be used as a ricardian contract to …","A key or object containing keys that may be tweaked for …","Serialize the contract in a deterministic way to be used …","Tweak the key with a <code>tweak</code> contract","","A proof about a script owning a certain output. Verifyable …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,57,57,57,0,57,57,55,0,55,0,55,0,55,0,20,0,0,0,0,20,0,55,57,0,0,55,55,57,0,0,0,0,0,0,0,0,0,0,0,55,57,1,24,27,3,3,3,3,20,28,31,34,36,3,3,3,3,30,21,23,3,45,48,20,80,21,22,23,3,24,25,26,1,27,28,30,31,34,36,55,57,45,48,20,80,21,22,23,3,24,25,26,1,27,28,30,31,34,36,55,57,0,3,3,3,25,26,20,20,21,22,23,24,25,26,1,27,28,28,30,31,31,34,34,36,36,20,21,22,23,24,25,26,1,27,28,30,31,34,36,0,0,20,21,22,23,24,25,26,1,27,28,31,34,36,20,21,22,23,24,25,26,1,27,28,31,34,36,20,21,22,23,24,25,26,1,27,28,31,34,36,3,3,3,45,3,0,3,31,34,31,34,45,45,20,21,22,23,24,1,27,28,30,31,34,36,48,20,28,31,34,3,20,21,22,23,1,27,28,31,34,36,55,20,28,31,34,21,23,1,26,27,30,3,20,20,21,22,23,3,24,25,26,1,27,28,28,30,31,31,34,34,36,55,55,57,57,45,48,20,80,21,22,23,3,24,25,26,1,27,28,30,31,34,36,55,55,55,57,20,21,22,23,24,25,26,1,27,28,31,34,36,3,20,21,22,23,1,27,28,31,34,36,45,48,20,80,21,22,23,3,24,25,26,1,27,28,30,31,34,36,55,57,0,0,20,20,3,28,28,31,31,34,34,36,36,30,3,3,3,80,3,3,3,0,55,57,26,21,23,27,3,80,0,3,45,3,45,20,21,22,23,24,25,26,1,27,28,30,31,34,36,3,45,22,26,55,3,3,20,21,22,23,24,25,26,1,27,28,31,34,36,48,20,21,22,23,24,25,26,1,27,28,30,31,34,36,20,28,31,34,55,57,1,48,45,48,20,80,21,22,23,3,24,25,26,1,27,28,30,31,34,36,55,57,45,48,20,80,21,22,23,3,24,25,26,1,27,28,30,31,34,36,55,57,24,25,0,25,22,0,45,48,20,80,21,22,23,3,24,25,26,1,27,28,30,31,34,36,55,57,124,48,3,3,45,48,20,80,21,22,23,3,24,25,26,1,27,28,30,31,34,36,55,57,0,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,0,0,0,67,83,84,67,83,84,67,67,83,84,67,83,84,84,67,67,83,84,83,84,67,83,67,83,67,83,84,67,83,84,67,83,84,67,83,84,67,83,67,83,67,84,67,83,67,84,67,83,84,67,67,83,84,67,67,83,84,67,83,84,67,83,84,67,67,83,84,90,0,0,0,0,90,0,0,90,0,0,90,0,0,90,0,0,0,90,0,0,90,91,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,92,93,94,95,96,97,98,99,100,101,102,103,104,92,93,94,95,96,97,98,99,100,101,102,103,104,92,93,94,95,96,97,98,99,100,101,102,103,104,90,90,92,93,94,95,96,97,98,99,100,101,102,103,104,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,92,92,93,93,94,94,95,95,96,96,97,97,98,98,99,99,100,100,101,101,102,102,103,103,104,104,91,91,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,91,90,91,91,91,91,91,92,94,96,97,99,101,103,91,92,92,93,93,94,94,95,95,96,96,97,97,98,98,99,99,100,100,101,101,102,102,103,103,104,104,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,90,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,0,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,0,0,125,126,60,0,0,60,60,60,0,114,114,115,114,60,115,114,60,115,114,115,114,115,114,115,114,115,114,114,115,114,115,114,115,114,60,60,115,114,60,115,114,115,114,115,115,114,60,114,115,115,115,115,60,115,114,115,114,115,114,60,115,115,114,60,115,114,60,115,115,115,115,115,114,60,115,115,0,115,115,114,60],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],0,0,[3,4],[3,[[6,[[5,[3]]]]]],[[3,7,8],[[11,[[10,[9]]]]]],[[3,8,12],[[11,[[10,[9]]]]]],[[],13],[[],13],[[],13],[[],13],[[],13],[[3,8,14],[[11,[[10,[9]]]]]],[[3,8],6],[[3,8],[[11,[[10,[9]]]]]],[[3,8,6],[[11,[[10,[9]]]]]],0,0,0,[[3,8,15],16],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[8,17]],0,[[3,18]],0,0,0,[[],19],[20,20],[21,21],[22,22],[23,23],[24,24],[25,25],[26,26],[1,1],[27,27],[28,28],[[],29],[30,30],[31,31],[[],32],[[],33],[34,34],[[],35],[36,36],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[37,[[39,[20,38]]]],[37,[[39,[21,38]]]],[37,[[39,[22,38]]]],[37,[[39,[23,38]]]],[37,[[39,[24,38]]]],[37,[[39,[25,38]]]],[37,[[39,[26,38]]]],[37,[[39,[1,38]]]],[37,[[39,[27,38]]]],[37,[[39,[28,38]]]],[37,[[39,[31,38]]]],[37,[[39,[34,38]]]],[37,[[39,[36,38]]]],[20,[[39,[40,41]]]],[21,[[39,[40,41]]]],[22,[[39,[40,41]]]],[23,[[39,[40,41]]]],[24,[[39,[40,41]]]],[25,[[39,[40,41]]]],[26,[[39,[40,41]]]],[1,[[39,[40,41]]]],[27,[[39,[40,41]]]],[28,[[39,[40,41]]]],[31,[[39,[40,41]]]],[34,[[39,[40,41]]]],[36,[[39,[40,41]]]],[42,[[39,[40,41]]]],[42,[[39,[40,41]]]],[42,[[39,[40,41]]]],[42,[[39,[40,41]]]],[42,[[39,[40,41]]]],[42,[[39,[40,41]]]],[42,[[39,[40,41]]]],[42,[[39,[40,41]]]],[42,[[39,[40,41]]]],[42,[[39,[40,41]]]],[42,[[39,[40,41]]]],[42,[[39,[40,41]]]],[42,[[39,[40,41]]]],[[3,8],[[44,[43]]]],[[3,8],[[11,[[10,[9]]]]]],[[3,8,27],[[44,[26]]]],[[45,2,46,6,47],[[44,[26]]]],[[3,8],[[44,[23]]]],0,[3],[31],[34],[31],[34],[45,46],0,[[],[[39,[20]]]],[[],[[39,[21]]]],[[],[[39,[22]]]],[[],[[39,[23]]]],[[],[[39,[24]]]],[[],[[39,[1]]]],[[],[[39,[27]]]],[[],[[39,[28]]]],[[],[[39,[30]]]],[[],[[39,[31]]]],[[],[[39,[34]]]],[[],[[39,[36]]]],[[48,49,50,51,52],[[11,[[10,[9]]]]]],[[],53],[[],53],[[],53],[[],53],[[3,54,8],[[11,[[10,[9]]]]]],[[20,20],16],[[21,21],16],[[22,22],16],[[23,23],16],[[1,1],16],[[27,27],16],[[28,28],16],[[31,31],16],[[34,34],16],[[36,36],16],[[55,55],16],[19,16],[29,16],[32,16],[33,16],0,0,0,0,0,0,[[3,56,2],[[39,[25,57]]]],[[20,58],59],[[20,58],59],[[21,58],59],[[22,58],59],[[23,58],59],[[3,58],59],[[24,58],59],[[25,58],59],[[26,58],59],[[1,58],59],[[27,58],59],[[28,58],59],[[28,58],59],[[30,58],59],[[31,58],59],[[31,58],59],[[34,58],59],[[34,58],59],[[36,58],59],[[55,58],59],[[55,58],59],[[57,58],59],[[57,58],59],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[60,55],[61,55],[[]],[[]],[37,[[39,[62]]]],[37,[[39,[62]]]],[37,[[39,[62]]]],[37,[[39,[62]]]],[37,[[39,[62]]]],[37,[[39,[62]]]],[37,[[39,[62]]]],[37,[[39,[62]]]],[37,[[39,[62]]]],[37,[[39,[62]]]],[37,[[39,[62]]]],[37,[[39,[62]]]],[37,[[39,[62]]]],[[3,8],2],[20],[21],[22],[23],[1],[27],[28],[31],[34],[36],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[63,64],16],0,[20,65],[[],66],[3,65],[28,65],[[],66],[[],66],[31,65],[34,65],[[],66],[36,65],[[],66],0,[[67,68,17,52,37],[[39,[3,55]]]],[3,45],[[3,8,12],[[11,[[10,[9]]]]]],0,[[3,8,[6,[43]]],43],[[3,[6,[47]]],47],[[3,6]],[[],69],[70],[70],0,0,0,0,[[3,8,25]],0,[[68,17,37,71]],[[3,8,6]],0,0,0,[20,39],[21,39],[22,39],[23,39],[24,39],[25,39],[26,39],[1,39],[27,39],[28,39],[30,39],[31,39],[34,39],[36,39],[[3,56,50,22],[[39,[57]]]],[[45,56]],0,0,[55,[[44,[72]]]],[[3,8,43]],[3,43],[[],[[6,[73,74]]]],[[],[[6,[73,74]]]],[[],[[6,[73,74]]]],[[],[[6,[73,74]]]],[[],[[6,[73,74]]]],[[],[[6,[73,74]]]],[[],[[6,[73,74]]]],[[],[[6,[73,74]]]],[[],[[6,[73,74]]]],[[],[[6,[73,74]]]],[[],[[6,[73,74]]]],[[],[[6,[73,74]]]],[[],[[6,[73,74]]]],[[48,75],[[77,[76]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],0,[[48,51]],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],0,0,0,0,0,0,[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],80],[[48,50,75],77],[[3,7,8],[[11,[[10,[9]]]]]],[[3,8],[[11,[[10,[9]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[81,81],[[]],[82,[[39,[19,38]]]],[82,[[39,[19,38]]]],[82,[[39,[32,38]]]],[82,[[39,[32,38]]]],[82,[[39,[33,38]]]],[82,[[39,[33,38]]]],[82,[[39,[29,38]]]],[82,[[39,[29,38]]]],[[],81],[[81,58],59],[[]],[[]],[[]],[[],39],[[],39],[[],79],[[]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,[67,67],[83,83],[84,84],[[]],[[]],[[]],[[],84],0,[[],[[39,[67]]]],[[],[[39,[83]]]],[[],[[39,[84]]]],[[83,83],16],[[84,84],16],0,0,0,0,[[67,58],59],[[83,58],59],[[84,58],59],[[]],[[]],[[]],[[],67],[83],[84],[[]],[[]],[[]],0,0,[[[86,[50,85]],87,40,88,64,43],67],[[89,64,43],83],0,0,0,0,0,0,[67,39],[83,39],[84,39],[67,76],[[]],[[]],[[]],[67],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],79],[[],79],[[],79],[[67,50],77],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[90,90],[91,91],[92,92],[93,93],[94,94],[95,95],[96,96],[97,97],[98,98],[99,99],[100,100],[101,101],[102,102],[103,103],[104,104],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[37,[[39,[92,38]]]],[37,[[39,[93,38]]]],[37,[[39,[94,38]]]],[37,[[39,[95,38]]]],[37,[[39,[96,38]]]],[37,[[39,[97,38]]]],[37,[[39,[98,38]]]],[37,[[39,[99,38]]]],[37,[[39,[100,38]]]],[37,[[39,[101,38]]]],[37,[[39,[102,38]]]],[37,[[39,[103,38]]]],[37,[[39,[104,38]]]],[92,[[39,[40,41]]]],[93,[[39,[40,41]]]],[94,[[39,[40,41]]]],[95,[[39,[40,41]]]],[96,[[39,[40,41]]]],[97,[[39,[40,41]]]],[98,[[39,[40,41]]]],[99,[[39,[40,41]]]],[100,[[39,[40,41]]]],[101,[[39,[40,41]]]],[102,[[39,[40,41]]]],[103,[[39,[40,41]]]],[104,[[39,[40,41]]]],[42,[[39,[40,41]]]],[42,[[39,[40,41]]]],[42,[[39,[40,41]]]],[42,[[39,[40,41]]]],[42,[[39,[40,41]]]],[42,[[39,[40,41]]]],[42,[[39,[40,41]]]],[42,[[39,[40,41]]]],[42,[[39,[40,41]]]],[42,[[39,[40,41]]]],[42,[[39,[40,41]]]],[42,[[39,[40,41]]]],[42,[[39,[40,41]]]],[[90,58],59],[[90,58],59],[[92,58],59],[[93,58],59],[[94,58],59],[[95,58],59],[[96,58],59],[[97,58],59],[[98,58],59],[[99,58],59],[[100,58],59],[[101,58],59],[[102,58],59],[[103,58],59],[[104,58],59],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[37,[[39,[62]]]],[37,[[39,[62]]]],[37,[[39,[62]]]],[37,[[39,[62]]]],[37,[[39,[62]]]],[37,[[39,[62]]]],[37,[[39,[62]]]],[37,[[39,[62]]]],[37,[[39,[62]]]],[37,[[39,[62]]]],[37,[[39,[62]]]],[37,[[39,[62]]]],[37,[[39,[62]]]],[37,[[39,[62]]]],[37,[[39,[62]]]],[37,[[39,[62]]]],[37,[[39,[62]]]],[37,[[39,[62]]]],[37,[[39,[62]]]],[37,[[39,[62]]]],[37,[[39,[62]]]],[37,[[39,[62]]]],[37,[[39,[62]]]],[37,[[39,[62]]]],[37,[[39,[62]]]],[37,[[39,[62]]]],[[91,40],[[44,[90]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],91],[91,40],0,[91,44],[91,44],[[91,40],44],[92,39],[94,39],[96,39],[97,39],[99,39],[101,39],[103,39],[91],[[],[[6,[73,74]]]],[[],[[6,[73,74]]]],[[],[[6,[73,74]]]],[[],[[6,[73,74]]]],[[],[[6,[73,74]]]],[[],[[6,[73,74]]]],[[],[[6,[73,74]]]],[[],[[6,[73,74]]]],[[],[[6,[73,74]]]],[[],[[6,[73,74]]]],[[],[[6,[73,74]]]],[[],[[6,[73,74]]]],[[],[[6,[73,74]]]],[[],[[6,[73,74]]]],[[],[[6,[73,74]]]],[[],[[6,[73,74]]]],[[],[[6,[73,74]]]],[[],[[6,[73,74]]]],[[],[[6,[73,74]]]],[[],[[6,[73,74]]]],[[],[[6,[73,74]]]],[[],[[6,[73,74]]]],[[],[[6,[73,74]]]],[[],[[6,[73,74]]]],[[],[[6,[73,74]]]],[[],[[6,[73,74]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],78],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[85,85],[[]],[[85,85],105],[[],[[39,[85]]]],[[85,85],16],[[85,58],59],[[85,58],59],[[]],[4,[[39,[85]]]],[85],[[],106],[[]],[85,16],0,[107,85],[[85,85],[[44,[105]]]],[85,39],[[],106],[[],108],[[]],[85],[85,109],[[],110],[[],111],[[],78],[[],39],[[],39],[[85,112],85],[[],79],[[]],0,0,[[],113],[112],0,0,0,0,0,0,0,[114,15],0,[[]],[[]],[[]],[[]],[[]],[[]],[115,115],[114,114],[[]],[[]],[37,[[39,[115,38]]]],[37,[[39,[114,38]]]],[115,[[39,[40,41]]]],[114,[[39,[40,41]]]],[42,[[39,[40,41]]]],[42,[[39,[40,41]]]],[[114,116],16],[[],[[39,[115]]]],[[],[[39,[114]]]],[[115,115],16],[[114,114],16],[[115,58],59],[[114,58],59],[[60,58],59],[[60,58],59],[[]],[[]],[[]],[37,[[39,[62]]]],[37,[[39,[62]]]],[115],[114],[115],[[]],[[]],[[]],0,[[114,117,43,118],[[39,[115,60]]]],[115,119],0,[115,15],[70],[115,39],[114,39],[[],[[6,[73,74]]]],[[],[[6,[73,74]]]],[[]],[[]],[[],78],0,[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[115,118],0,[115,120],0,[[],79],[[],79],[[],79],[115,[[39,[121]]]],[115,[[39,[121]]]],[115,[[39,[122]]]],[[115,112,123],[[39,[60]]]],[[]],[[]],[[]]],"p":[[3,"PegOutFees"],[3,"Amount"],[3,"Wallet"],[15,"str"],[3,"ApiEndpoint"],[3,"Vec"],[8,"ModuleInterconect"],[3,"DatabaseTransaction"],[8,"Future"],[3,"Box"],[3,"Pin"],[3,"OutPoint"],[8,"Any"],[3,"Audit"],[3,"BlockHash"],[15,"bool"],[3,"BitcoindRpc"],[8,"Iterator"],[3,"ConsensusItem"],[4,"WalletConsensusItem"],[3,"RoundConsensusItem"],[3,"PegOutSignatureItem"],[3,"RoundConsensus"],[3,"SpendableUTXO"],[3,"PendingTransaction"],[3,"UnsignedTransaction"],[3,"PegOut"],[3,"WalletOutputOutcome"],[3,"OutputOutcome"],[3,"WalletConfigGenParams"],[3,"WalletInput"],[3,"Input"],[3,"Output"],[3,"WalletOutput"],[3,"VerificationCache"],[3,"WalletVerificationCache"],[3,"ModuleDecoderRegistry"],[3,"DecodeError"],[4,"Result"],[15,"usize"],[3,"Error"],[8,"Write"],[15,"u32"],[4,"Option"],[3,"StatelessWallet"],[3,"Script"],[3,"Feerate"],[3,"WalletConfigGenerator"],[3,"MuxPeerConnections"],[3,"PeerId"],[3,"ConfigGenParams"],[3,"TaskGroup"],[15,"u64"],[3,"HashSet"],[4,"WalletError"],[3,"PartiallySignedTransaction"],[4,"ProcessPegOutSigError"],[3,"Formatter"],[6,"Result"],[4,"PegInProofError"],[3,"Error"],[4,"DecodingError"],[3,"Address"],[4,"Network"],[6,"ModuleKey"],[15,"u16"],[3,"WalletConfig"],[3,"Database"],[3,"ProprietaryKey"],[3,"Demand"],[3,"TaskHandle"],[8,"Error"],[15,"u8"],[3,"Global"],[3,"ServerModuleConfig"],[3,"ClientModuleConfig"],[6,"Result"],[3,"String"],[3,"TypeId"],[3,"UnzipWalletConsensusItem"],[3,"WalletModuleDecoder"],[8,"Read"],[3,"WalletClientConfig"],[3,"FeeConsensus"],[3,"CompressedPublicKey"],[3,"BTreeMap"],[3,"SecretKey"],[3,"BitcoindRpcCfg"],[6,"PegInDescriptor"],[4,"DbKeyPrefix"],[3,"DbKeyPrefixIter"],[3,"BlockHashKey"],[3,"BlockHashKeyPrefix"],[3,"UTXOKey"],[3,"UTXOPrefixKey"],[3,"RoundConsensusKey"],[3,"UnsignedTransactionKey"],[3,"UnsignedTransactionPrefixKey"],[3,"PendingTransactionKey"],[3,"PendingTransactionPrefixKey"],[3,"PegOutTxSignatureCI"],[3,"PegOutTxSignatureCIPrefix"],[3,"PegOutBitcoinTransaction"],[3,"PegOutBitcoinTransactionPrefix"],[4,"Ordering"],[3,"Hash"],[3,"PublicKey"],[3,"Hash"],[3,"PublicKey"],[3,"Hash"],[3,"Hash"],[3,"Secp256k1"],[6,"Result"],[3,"TxOutProof"],[3,"PegInProof"],[3,"Txid"],[3,"Transaction"],[3,"XOnlyPublicKey"],[3,"OutPoint"],[3,"TxOut"],[3,"ValidationErrors"],[3,"ValidationError"],[4,"Descriptor"],[8,"IterUnzipWalletConsensusItem"],[8,"Contract"],[8,"Tweakable"]]},\
"fedimintd":{"doc":"","t":[0,0,17,17,17,17,17,17,17,5,5,5,3,3,3,3,3,3,6,3,3,13,3,4,3,3,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,5,12,12,12,11,11,11,11,11,11,0,12,12,12,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,5,5,5,11,11,11,11,11,11,5,5,12,12,5,12,12,12,12,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,3,12,11,11,12,5,11,11,11,12,11,11,12,11,11,5,11,11,11,11],"n":["encrypt","ui","CONFIG_FILE","DB_FILE","ITERATIONS_DEBUG","ITERATIONS_PROD","SALT_FILE","TLS_CERT","TLS_PK","encrypted_read","encrypted_write","get_key","ChooseTemplate","DealerTemplate","DisplayConfigsTemplate","FedName","Guardian","HomeTemplate","MutableState","PlayerTemplate","ReceiveConfigsForm","SetupComplete","State","UiMessage","UrlConnection","UrlForm","add_guardian","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","btc_rpc","btc_rpc","cfg_path","choose","client_config","client_config","client_config","clone","clone","clone","clone_into","clone_into","clone_into","configgen","connection_string","connection_string","connection_string","deal","dealer","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","display_configs","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dyn_render","dyn_render","dyn_render","dyn_render","dyn_render","dyn_render","dyn_render_into","dyn_render_into","dyn_render_into","dyn_render_into","dyn_render_into","dyn_render_into","extension","extension","extension","extension","extension","extension","federation_connection_string","federation_connection_string","federation_name","federation_name","federation_name","federation_name","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","guardians","guardians","home","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into_response","into_response","into_response","into_response","into_response","into_response","ipaddr","mime_type","mime_type","mime_type","mime_type","mime_type","mime_type","name","player","qr","receive_configs","render_into","render_into","render_into","render_into","render_into","render_into","run_fedimint","run_ui","running","running","save_configs","sender","server_config","server_configs","server_configs","set_url_connection","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","url_connection","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","SetupConfigParams","amount_tiers","borrow","borrow_mut","btc_rpc","configgen","deref","deref_mut","drop","federation_name","fmt","from","guardians","init","into","trusted_dealer_gen","try_from","try_into","type_id","vzip"],"q":["fedimintd","","fedimintd::encrypt","","","","","","","","","","fedimintd::uifedimintd::ui::configgen","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","Reads encrypted data from a file","Write <code>data</code> encrypted to a <code>file</code> with a random <code>nonce</code> that …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,30,0,0,0,0,0,11,27,15,19,18,28,16,29,17,21,7,30,11,27,15,19,18,28,16,29,17,21,7,30,18,7,7,0,17,21,7,11,16,17,11,16,17,0,11,29,7,0,0,11,27,15,19,18,28,16,29,17,21,7,30,11,27,15,19,18,28,16,29,17,21,7,30,11,18,16,17,0,11,27,15,19,18,28,16,29,17,21,7,30,27,15,19,28,29,21,27,15,19,28,29,21,27,15,19,28,29,21,27,21,27,18,21,7,11,27,15,19,18,28,16,29,17,21,7,30,11,27,15,19,18,28,16,29,17,21,7,30,19,7,0,11,27,15,19,18,28,16,29,17,21,7,30,11,27,15,19,18,28,16,29,17,21,7,30,27,15,19,28,29,21,16,27,15,19,28,29,21,11,0,0,0,27,15,19,28,29,21,0,0,27,7,0,7,17,21,7,0,27,15,19,28,29,21,11,16,17,27,15,19,28,29,21,11,27,15,19,18,28,16,29,17,21,7,30,11,27,15,19,18,28,16,29,17,21,7,30,11,27,15,19,18,28,16,29,17,21,7,30,0,11,27,15,19,18,28,16,29,17,21,7,30,0,42,42,42,42,0,42,42,42,42,42,42,42,42,42,0,42,42,42,42],"f":[0,0,0,0,0,0,0,0,0,[[1,2],[[4,[3]]]],[[[4,[3]],1,2]],[[[6,[5]],2],1],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[10,[[9,[[8,[7]]]]]],[12,[11]]],[[14,[13]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[[10,[[9,[[8,[7]]]]]]],15],0,0,0,[11,11],[16,16],[17,17],[[]],[[]],[[]],0,0,0,0,[[[10,[[9,[[8,[7]]]]]],[12,[18]]],[[14,[13]]]],[[[10,[[9,[[8,[7]]]]]]],19],[20],[20],[20],[20],[20],[20],[20],[20],[20],[20],[20],[20],[20],[20],[20],[20],[20],[20],[20],[20],[20],[20],[20],[20],[[],[[14,[11]]]],[[],[[14,[18]]]],[[],[[14,[16]]]],[[],[[14,[17]]]],[[[10,[[9,[[8,[7]]]]]]],21],[20],[20],[20],[20],[20],[20],[20],[20],[20],[20],[20],[20],[[],[[14,[5,22]]]],[[],[[14,[5,22]]]],[[],[[14,[5,22]]]],[[],[[14,[5,22]]]],[[],[[14,[5,22]]]],[[],[[14,[5,22]]]],[23,[[14,[22]]]],[23,[[14,[22]]]],[23,[[14,[22]]]],[23,[[14,[22]]]],[23,[[14,[22]]]],[23,[[14,[22]]]],[[],[[6,[24]]]],[[],[[6,[24]]]],[[],[[6,[24]]]],[[],[[6,[24]]]],[[],[[6,[24]]]],[[],[[6,[24]]]],0,0,0,0,0,0,[[11,25],26],[[27,25],26],[[15,25],26],[[19,25],26],[[18,25],26],[[28,25],26],[[16,25],26],[[29,25],26],[[17,25],26],[[21,25],26],[[7,25],26],[[30,25],26],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[[10,[[9,[[8,[7]]]]]]],27],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[27,[[32,[31]]]],[15,[[32,[31]]]],[19,[[32,[31]]]],[28,[[32,[31]]]],[29,[[32,[31]]]],[21,[[32,[31]]]],0,[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],0,[[[10,[[9,[[8,[7]]]]]]],29],[[[10,[[9,[[8,[7]]]]]]],33],[[[10,[[9,[[8,[7]]]]]],[12,[17]]],[[14,[13]]]],[27,34],[15,34],[19,34],[28,34],[29,34],[21,34],[35],[[2,[36,[30]],37]],0,0,[[38,39,2]],0,0,0,0,[[[10,[[9,[[8,[7]]]]]],[12,[16]]],[[14,[13]]]],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[[10,[[9,[[8,[7]]]]]]],28],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[]],[[]],0,[[5,[4,[11]],41]],[20],[20],[20],0,[[42,25],26],[[]],0,[[],20],[[]],[[42,[0,[43,44]]]],[[],14],[[],14],[[],40],[[]]],"p":[[3,"LessSafeKey"],[3,"PathBuf"],[15,"u8"],[3,"Vec"],[3,"String"],[4,"Option"],[3,"State"],[3,"RwLock"],[3,"Arc"],[3,"Extension"],[3,"Guardian"],[3,"Form"],[3,"Redirect"],[4,"Result"],[3,"ChooseTemplate"],[3,"UrlForm"],[3,"ReceiveConfigsForm"],[3,"FedName"],[3,"DealerTemplate"],[15,"usize"],[3,"DisplayConfigsTemplate"],[4,"Error"],[8,"Write"],[15,"str"],[3,"Formatter"],[6,"Result"],[3,"HomeTemplate"],[3,"UrlConnection"],[3,"PlayerTemplate"],[4,"UiMessage"],[6,"BoxBody"],[3,"Response"],[8,"IntoResponse"],[6,"Result"],[3,"RwLockWriteGuard"],[3,"Sender"],[15,"u32"],[3,"ServerConfig"],[3,"ClientConfig"],[3,"TypeId"],[3,"BitcoindRpcCfg"],[3,"SetupConfigParams"],[8,"RngCore"],[8,"CryptoRng"]]},\
"gateway_cli":{"doc":"","t":[13,13,3,4,13,13,13,13,13,13,12,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,12,5,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12],"n":["Address","Balance","Cli","Commands","ConnectFed","Deposit","GenerateConfig","Info","VersionHash","Withdraw","address","augment_args","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","borrow","borrow","borrow_mut","borrow_mut","command","command","command_for_update","deref","deref","deref_mut","deref_mut","drop","drop","from","from","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","group_id","has_subcommand","init","init","into","into","main","print_response","rpcpassword","source_password","try_from","try_from","try_into","try_into","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","vzip","vzip","address","amount","announce_address","bind_address","connect","federation_id","federation_id","federation_id","federation_id","out_dir","transaction","txout_proof"],"q":["gateway_cli","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","gateway_cli::Commands","","","","","","","","","","",""],"d":["Generate a new peg-in address, funds sent to it can later …","Check gateway balance","","","Register federation with the gateway","Deposit funds into a gateway federation","Ganerate gateway configuration NOTE: This command can only …","Display high-level information about the Gateway","Display CLI version hash","Claim funds from a gateway federation","The address of the gateway webserver","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","WARNING: Passing in a password from the command line may …","","","","","","","","","","","","","","The address to send the funds to","The amount to withdraw","URL under which the API will be reachable","Address to which the API webserver will bind","ConnectInfo code to connect to the federation","","","","","The gateway configuration directory","","The TxOutProof which was created from sending BTC to the …"],"i":[7,7,0,0,7,7,7,7,7,7,4,4,4,7,7,4,7,4,7,4,4,4,4,7,4,7,4,7,4,7,4,7,4,7,4,7,4,7,4,7,0,0,4,0,4,7,4,7,4,7,4,7,4,7,4,7,15,15,16,16,17,18,19,20,15,16,20,20],"f":[0,0,0,0,0,0,0,0,0,0,0,[1,1],[1,1],[1,1],[1,1],[[]],[[]],[[]],[[]],[[],1],0,[[],1],[2],[2],[2],[2],[2],[2],[[]],[[]],[3,[[6,[4,5]]]],[3,[[6,[7,5]]]],[3,[[6,[4,5]]]],[3,[[6,[7,5]]]],[[],[[9,[8]]]],[10,11],[[],2],[[],2],[[]],[[]],[[]],[12],0,[[[9,[13]]],13],[[],6],[[],6],[[],6],[[],6],[[],14],[[],14],[[4,3],[[6,[5]]]],[[7,3],[[6,[5]]]],[[4,3],[[6,[5]]]],[[7,3],[[6,[5]]]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0],"p":[[3,"Command"],[15,"usize"],[3,"ArgMatches"],[3,"Cli"],[6,"Error"],[4,"Result"],[4,"Commands"],[3,"Id"],[4,"Option"],[15,"str"],[15,"bool"],[3,"Response"],[3,"String"],[3,"TypeId"],[13,"Withdraw"],[13,"GenerateConfig"],[13,"ConnectFed"],[13,"Balance"],[13,"Address"],[13,"Deposit"]]},\
"hkdf":{"doc":"This crate implements the RFC5869 hash based key …","t":[8,18,16,3,16,18,10,10,2,11,11,11,11,11,11,11,11,10,10,11,10,11,0,11,10,11,12,11,11,11,11,3,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["BitcoinHash","DISPLAY_BACKWARD","Engine","Hkdf","Inner","LEN","all_zeros","as_inner","bitcoin_hashes","borrow","borrow_mut","clone","clone_into","derive","derive_hmac","engine","from","from_engine","from_inner","from_prk","from_slice","hash","hashes","into","into_inner","new","prk","to_owned","try_from","try_into","type_id","Hash160","Ripemd160","Sha1","Sha256","Sha256d","Sha512","Siphash24","all_zeros","all_zeros","all_zeros","all_zeros","all_zeros","all_zeros","all_zeros","as_inner","as_inner","as_inner","as_inner","as_inner","as_inner","as_inner","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_u64","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","default","deref","deref","deref","deref","deref","deref","deref","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","engine","engine","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_byte_iter","from_byte_iter","from_byte_iter","from_byte_iter","from_byte_iter","from_byte_iter","from_byte_iter","from_engine","from_engine","from_engine","from_engine","from_engine","from_engine","from_engine","from_engine_to_u64","from_inner","from_inner","from_inner","from_inner","from_inner","from_inner","from_inner","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice_delegated","from_slice_delegated","from_slice_delegated","from_slice_delegated","from_slice_delegated","from_slice_delegated","from_slice_delegated","from_str","from_str","from_str","from_str","from_str","from_str","from_str","from_u64","hash","hash","hash","hash","hash","hash","hash","hash_to_u64_with_keys","hash_with_keys","index","index","index","index","index","index","index","into","into","into","into","into","into","into","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","serialize","serialize","serialize","serialize","serialize","serialize","serialize","to_hex","to_hex","to_hex","to_hex","to_hex","to_hex","to_hex","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id"],"q":["hkdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hkdf::hashesd":["Trait which applies to hashes of all types.","Flag indicating whether user-visible serializations of …","A hashing engine which bytes can be serialized into. It is …","Implements the RFC5869 hash based key derivation function …","The byte array that represents the hash internally.","Length of the hash, in bytes.","Returns an all zero hash.","Unwraps the hash and returns a reference to the underlying …","","","","","","Run HKDF-expand to generate new key material","Run HKDF-expand to generate new key material with …","Constructs a new engine.","Returns the argument unchanged.","Produces a hash from the current state of a given engine.","Constructs a hash from the underlying byte array.","Construct the HKDF from a pseudo random key that has the …","Copies a byte slice into a hash object.","Hashes some bytes.","","Calls <code>U::from(self)</code>.","Unwraps the hash and returns the underlying byte array.","Run HKDF-extract and keep the resulting pseudo random key …","","","","","","Output of the Bitcoin HASH160 hash function.","Output of the RIPEMD160 hash function.","Output of the SHA1 hash function.","Output of the SHA256 hash function.","Output of the SHA256d hash function.","Output of the SHA256 hash function.","Output of the SipHash24 hash function.","","","","","","","","","","","","","","","","","","","","","","Returns the (little endian) 64-bit integer representation …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","Produces a hash as <code>u64</code> from the current state of a given …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a hash from its (little endian) 64-bit integer …","","","","","","","","Hashes the given data directly to u64 with an engine with …","Hashes the given data with an engine with the provided …","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Outputs the hash in hexadecimal form.","Outputs the hash in hexadecimal form.","Outputs the hash in hexadecimal form.","Outputs the hash in hexadecimal form.","Outputs the hash in hexadecimal form.","Outputs the hash in hexadecimal form.","Outputs the hash in hexadecimal form.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,2,2,0,2,2,2,2,0,3,3,3,3,3,3,2,3,2,2,3,2,2,0,3,2,3,3,3,3,3,3,0,0,0,0,0,0,0,9,10,11,12,13,14,15,9,10,11,12,13,14,15,9,10,11,12,13,14,15,15,9,9,10,10,11,11,12,12,13,13,14,14,15,15,9,10,11,12,13,14,15,9,10,11,12,13,14,15,9,10,11,12,13,14,15,9,10,11,12,13,14,15,9,9,10,11,12,13,14,15,9,10,11,12,13,14,15,10,14,9,10,11,12,13,14,15,9,9,9,10,10,10,11,11,11,12,12,12,13,13,13,14,14,14,15,15,15,9,10,11,12,13,14,15,9,10,11,12,13,14,15,9,10,11,12,13,14,15,15,9,10,11,12,13,14,15,9,10,11,12,13,14,15,9,10,11,12,13,14,15,9,10,11,12,13,14,15,15,9,10,11,12,13,14,15,15,15,9,10,11,12,13,14,15,9,10,11,12,13,14,15,9,10,11,12,13,14,15,9,10,11,12,13,14,15,9,10,11,12,13,14,15,9,10,11,12,13,14,15,9,10,11,12,13,14,15,9,10,11,12,13,14,15,9,10,11,12,13,14,15,9,10,11,12,13,14,15,9,10,11,12,13,14,15],"f":[0,0,0,0,0,0,[[]],[[]],0,[[]],[[]],[[[3,[[0,[1,2]]]]],[[3,[[0,[1,2]]]]]],[[]],[[[3,[2]]]],[[[3,[2]]],[[4,[2]]]],[[]],[[]],[[]],[[]],[[[4,[2]]],[[3,[2]]]],[[],[[6,[5]]]],[[]],0,[[]],[[]],[7,[[3,[2]]]],0,[[]],[[],6],[[],6],[[],8],0,0,0,0,0,0,0,[[],9],[[],10],[[],11],[[],12],[[],13],[[],14],[[],15],[9],[10],[11],[12],[13],[14],[15],[9],[10],[11],[12],[13],[14],[15],[15,16],[[]],[9],[[]],[10],[[]],[11],[[]],[12],[13],[[]],[[]],[14],[[]],[15],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[9,9],[10,10],[11,11],[12,12],[13,13],[14,14],[15,15],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[9,9],17],[[10,10],17],[[11,11],17],[[12,12],17],[[13,13],17],[[14,14],17],[[15,15],17],[[],9],[9],[10],[11],[12],[13],[14],[15],[[],[[6,[9]]]],[[],[[6,[10]]]],[[],[[6,[11]]]],[[],[[6,[12]]]],[[],[[6,[13]]]],[[],[[6,[14]]]],[[],[[6,[15]]]],[[],18],[[],18],[[9,9],19],[[10,10],19],[[11,11],19],[[12,12],19],[[13,13],19],[[14,14],19],[[15,15],19],[[9,20],[[6,[21]]]],[[9,20],[[6,[21]]]],[[9,20],[[6,[21]]]],[[10,20],[[6,[21]]]],[[10,20],[[6,[21]]]],[[10,20],[[6,[21]]]],[[11,20],[[6,[21]]]],[[11,20],[[6,[21]]]],[[11,20],[[6,[21]]]],[[12,20],[[6,[21]]]],[[12,20],[[6,[21]]]],[[12,20],[[6,[21]]]],[[13,20],[[6,[21]]]],[[13,20],[[6,[21]]]],[[13,20],[[6,[21]]]],[[14,20],[[6,[21]]]],[[14,20],[[6,[21]]]],[[14,20],[[6,[21]]]],[[15,20],[[6,[21]]]],[[15,20],[[6,[21]]]],[[15,20],[[6,[21]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[6,[22]]]],[[],[[6,[22]]]],[[],[[6,[22]]]],[[],[[6,[22]]]],[[],[[6,[22]]]],[[],[[6,[22]]]],[[],[[6,[22]]]],[23,9],[18,10],[24,11],[25,12],[18,13],[18,14],[26,15],[26,16],[[],9],[[],10],[[],11],[[],12],[[],13],[[],14],[[],15],[[],[[6,[9,5]]]],[[],[[6,[10,5]]]],[[],[[6,[11,5]]]],[[],[[6,[12,5]]]],[[],[[6,[13,5]]]],[[],[[6,[14,5]]]],[[],[[6,[15,5]]]],[[],[[6,[9,5]]]],[[],[[6,[10,5]]]],[[],[[6,[11,5]]]],[[],[[6,[12,5]]]],[[],[[6,[13,5]]]],[[],[[6,[14,5]]]],[[],[[6,[15,5]]]],[27,[[6,[9]]]],[27,[[6,[10]]]],[27,[[6,[11]]]],[27,[[6,[12]]]],[27,[[6,[13]]]],[27,[[6,[14]]]],[27,[[6,[15]]]],[16,15],[9],[10],[11],[12],[13],[14],[15],[[16,16],16],[[16,16],15],[9],[10],[11],[12],[13],[14],[15],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[9],[10],[11],[12],[13],[14],[15],[[9,9],[[7,[17]]]],[[10,10],[[7,[17]]]],[[11,11],[[7,[17]]]],[[12,12],[[7,[17]]]],[[13,13],[[7,[17]]]],[[14,14],[[7,[17]]]],[[15,15],[[7,[17]]]],[9,6],[10,6],[11,6],[12,6],[13,6],[14,6],[15,6],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8]],"p":[[8,"Clone"],[8,"BitcoinHash"],[3,"Hkdf"],[3,"Hmac"],[4,"Error"],[4,"Result"],[4,"Option"],[3,"TypeId"],[3,"Sha512"],[3,"Hash160"],[3,"Ripemd160"],[3,"Sha1"],[3,"Sha256"],[3,"Sha256d"],[3,"Siphash24"],[15,"u64"],[4,"Ordering"],[3,"HashEngine"],[15,"bool"],[3,"Formatter"],[3,"Error"],[4,"Error"],[3,"HashEngine"],[3,"HashEngine"],[3,"HashEngine"],[3,"HashEngine"],[15,"str"],[3,"String"]]},\
"ln_gateway":{"doc":"","t":[13,13,3,4,13,13,6,13,0,12,11,11,11,11,0,12,0,0,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,12,11,11,11,12,0,11,11,12,11,12,11,11,11,11,11,11,11,0,11,11,3,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,8,8,3,3,3,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,10,11,10,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,3,3,3,3,12,5,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,5,11,11,11,11,11,11,11,11,12,12,12,12,12,12,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,3,12,12,11,11,11,11,12,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,3,8,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,13,3,3,13,13,13,3,3,3,3,4,3,8,3,13,3,13,13,3,16,13,3,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,0,0,11,12,12,5,5,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,12,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5],"n":["ClientError","CouldNotRoute","LnGateway","LnGatewayError","MintClientE","Other","Result","UnknownFederation","actor","actors","borrow","borrow","borrow_mut","borrow_mut","client","client_builder","cln","config","config","connect_federation","deref","deref","deref_mut","deref_mut","drop","drop","drop","fmt","fmt","from","from","from","from","from","handle_address_msg","handle_balance_msg","handle_connect_federation","handle_deposit_msg","handle_get_info","handle_pay_invoice_msg","handle_receive_invoice_msg","handle_withdraw_msg","init","init","into","into","into_response","ln","ln_rpc","load_federation_actors","new","provide","receiver","rpc","run","select_actor","sender","source","task_group","to_string","try_from","try_from","try_into","try_into","type_id","type_id","utils","vzip","vzip","GatewayActor","await_outgoing_contract_claimed","await_preimage_decryption","borrow","borrow_mut","buy_preimage_external","buy_preimage_internal","buy_preimage_offer","client","deposit","deref","deref_mut","drop","fetch_all_coins","from","get_balance","get_deposit_address","get_info","init","into","new","pay_invoice","try_from","try_into","type_id","vzip","withdraw","DbFactory","GatewayClientBuilder","IDbFactory","IGatewayClientBuilder","MemDbFactory","RocksDbFactory","StandardGatewayClientBuilder","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","create_config","create_config","create_database","create_database","create_database","db_factory","default","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","init","init","init","init","init","into","into","into","into","into","load_configs","load_configs","new","save_config","save_config","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","work_dir","ClnRpcRef","Htlc","HtlcAccepted","Onion","amount","as_fedimint_amount","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_cln_rpc","clone","clone","clone","clone_into","clone_into","clone_into","cltv_expiry","cltv_expiry_relative","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","drop","fmt","fmt","fmt","forward_amount","from","from","from","from","htlc","htlc_accepted_hook","init","init","init","init","into","into","into","into","ln_rpc","next_onion","onion","outgoing_cltv_value","payload","payment_hash","serialize","serialize","serialize","shared_secret","short_channel_id","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","work_dir","GatewayConfig","announce_address","bind_address","borrow","borrow_mut","clone","clone_into","default_federation","deref","deref_mut","deserialize","drop","fmt","from","init","into","password","serialize","to_owned","try_from","try_into","type_id","vzip","LightningError","LnRpc","borrow","borrow_mut","deref","deref_mut","drop","fmt","from","init","into","pay","pubkey","try_from","try_into","type_id","vzip","Balance","BalancePayload","ConnectFedPayload","ConnectFederation","Deposit","DepositAddress","DepositAddressPayload","DepositPayload","FederationInfo","GatewayInfo","GatewayRequest","GatewayRequestInner","GatewayRequestTrait","GatewayRpcSender","Info","InfoPayload","PayInvoice","ReceivePayment","ReceivePaymentPayload","Response","Withdraw","WithdrawPayload","address","amount","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","connect","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","federation_id","federation_id","federation_id","federation_id","federation_id","federations","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","handle","htlc_accepted","impl_gateway_request_trait","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","mint_pubkey","new","request","rpc_client","rpc_server","send","sender","sender","serde_hex_deserialize","serde_hex_serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","to_enum","to_enum","to_enum","to_enum","to_enum","to_enum","to_enum","to_enum","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","transaction","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","txout_proof","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","version_hash","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","Error","Response","RpcClient","base_url","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","bytes","call","chunk","client","connect_federation","content_length","deposit","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","error_for_status","error_for_status_ref","extensions","extensions_mut","fmt","fmt","fmt","from","from","from","from","get_balance","get_deposit_address","get_info","headers","headers_mut","init","init","init","inner","into","into","into","is_body","is_builder","is_connect","is_decode","is_redirect","is_request","is_status","is_timeout","json","new","provide","remote_addr","res","source","status","status","text","text_with_charset","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","upgrade","url","url","url","url_mut","version","vzip","vzip","vzip","with_url","withdraw","without_url","__axum_macros_check_address_0_from_request","__axum_macros_check_address_1_from_request","__axum_macros_check_address_future","__axum_macros_check_address_into_response","__axum_macros_check_balance_0_from_request","__axum_macros_check_balance_1_from_request","__axum_macros_check_balance_future","__axum_macros_check_balance_into_response","__axum_macros_check_deposit_0_from_request","__axum_macros_check_deposit_1_from_request","__axum_macros_check_deposit_future","__axum_macros_check_deposit_into_response","__axum_macros_check_info_0_from_request","__axum_macros_check_info_1_from_request","__axum_macros_check_info_future","__axum_macros_check_info_into_response","__axum_macros_check_withdraw_0_from_request","__axum_macros_check_withdraw_1_from_request","__axum_macros_check_withdraw_future","__axum_macros_check_withdraw_into_response","address","balance","connect","deposit","info","pay_invoice","run_webserver","withdraw","retry"],"q":["ln_gateway","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ln_gateway::actor","","","","","","","","","","","","","","","","","","","","","","","","","","","ln_gateway::client","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ln_gateway::cln","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ln_gateway::config","","","","","","","","","","","","","","","","","","","","","","","ln_gateway::ln","","","","","","","","","","","","","","","","","ln_gateway::rpcln_gateway::rpc::rpc_client","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ln_gateway::rpc::rpc_server","","","","","","","","","","","","","","","","","","","","","","","","","","","","ln_gateway::utils"],"d":["","","","","","","","","","","","","","","","","","","","Register a federation to the gateway.","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","Arc reference to a database factory","dyn newtype for a Gateway federation client builder","","Trait for gateway federation client builders","A factory that creates in-memory databases","A factory that creates RocksDb database instances","","","","","","","","","","","","Build a new gateway federation client","","","","","","","","","","","","Create a new gateway federation client config from connect …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Load all gateway client configs from the work directory","","","Save and persist the configuration of the gateway …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The core-lightning <code>htlc_accepted</code> event’s <code>amount</code> field …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Handle core-lightning “htlc_accepted” events by …","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","URL under which the API will be reachable","API webserver bind address","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","webserver authentication password","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Attempt to pay an invoice and block till it succeeds, …","Get the public key of the lightning node","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The Errors that may occur when processing a <code>Request</code>.","A Response to a submitted <code>Request</code>.","","","","","","","","","Get the full response body as <code>Bytes</code>.","","Stream a chunk of the response body.","","","Get the content-length of this response, if known.","","","","","","","","","","","Turn a response into an error if the server returned an …","Turn a reference to a response into an error if the server …","Returns a reference to the associated extensions.","Returns a mutable reference to the associated extensions.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Get the <code>Headers</code> of this <code>Response</code>.","Get a mutable reference to the <code>Headers</code> of this <code>Response</code>.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns true if the error is related to the request or …","Returns true if the error is from a type Builder.","Returns true if the error is related to connect","Returns true if the error is related to decoding the …","Returns true if the error is from a <code>RedirectPolicy</code>.","Returns true if the error is related to the request","Returns true if the error is from …","Returns true if the error is related to a timeout.","Try to deserialize the response body as JSON.","","","Get the remote address used to get this <code>Response</code>.","","","Returns the status code, if the error was generated from a …","Get the <code>StatusCode</code> of this <code>Response</code>.","Get the full response text.","Get the full response text given a specific encoding.","","","","","","","","","","","Consumes the response and returns a future for a possible …","Returns a possible URL related to this error.","Get the final <code>Url</code> of this <code>Response</code>.","","Returns a mutable reference to the URL related to this …","Get the HTTP <code>Version</code> of this <code>Response</code>.","","","","Add a url related to this error (overwriting any existing)","","Strip the related url from this error (if, for example, it …","","","","","","","","","","","","","","","","","","","","","Generate deposit address","Display gateway ecash token balance","Connect a new federation","Deposit into a gateway federation.","Display gateway ecash token balance","","","Withdraw from a gateway federation.","Retry an operation util the operation succeeds, OR The …"],"i":[7,7,0,0,7,7,0,7,0,1,1,7,1,7,0,1,0,0,1,1,1,7,1,7,1,1,7,7,7,1,7,7,7,7,1,1,1,1,1,1,1,1,1,7,1,7,7,0,1,1,1,7,1,0,1,1,1,7,1,7,1,7,1,7,1,7,0,1,7,0,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,0,0,0,0,0,0,0,57,58,59,29,56,57,58,59,29,56,103,56,57,58,59,29,56,57,58,59,29,56,103,56,104,58,59,56,58,59,57,57,58,59,29,29,56,57,58,59,29,56,57,58,59,29,56,57,58,59,29,56,57,57,58,59,29,29,56,57,58,59,29,56,57,58,59,29,56,103,56,56,103,56,57,58,59,29,56,57,58,59,29,56,57,58,59,29,56,57,58,59,29,56,57,58,59,29,56,56,0,0,0,0,69,0,67,69,70,71,67,69,70,71,0,69,70,71,69,70,71,69,69,67,69,70,71,67,69,70,71,69,70,71,67,69,70,71,69,70,71,70,67,69,70,71,71,0,67,69,70,71,67,69,70,71,67,70,71,70,70,69,69,70,71,70,70,69,70,71,67,69,70,71,67,69,70,71,70,67,69,70,71,67,69,70,71,67,0,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,0,0,74,74,74,74,74,74,74,74,74,28,28,74,74,74,74,30,0,0,30,30,30,0,0,0,0,0,0,0,0,30,0,30,30,0,78,30,0,25,25,66,17,23,20,15,13,18,25,50,21,30,79,66,17,23,20,15,13,18,25,50,21,30,79,66,17,15,13,18,25,66,17,15,13,18,25,17,66,17,23,20,15,13,18,25,50,21,30,79,66,17,23,20,15,13,18,25,50,21,30,79,17,23,20,15,13,18,25,50,21,66,17,23,20,15,13,18,25,50,21,30,79,15,13,18,25,50,21,66,17,23,20,15,13,18,25,50,21,30,79,66,17,23,20,15,13,18,25,50,21,30,79,79,23,0,66,17,23,20,15,13,18,25,50,21,30,79,66,17,23,20,15,13,18,25,50,21,30,79,50,66,79,0,0,66,66,79,0,0,17,23,20,15,13,18,25,50,21,78,17,23,20,15,13,18,25,66,17,15,13,18,25,18,66,17,23,20,15,13,18,25,50,21,30,79,66,17,23,20,15,13,18,25,50,21,30,79,18,66,17,23,20,15,13,18,25,50,21,30,79,21,66,17,23,20,15,13,18,25,50,21,30,79,0,0,0,86,87,86,85,87,86,85,85,86,85,86,86,85,86,87,86,85,87,86,85,87,86,85,85,85,85,85,87,87,85,87,86,85,85,86,86,86,85,85,87,86,85,87,87,86,85,87,87,87,87,87,87,87,87,85,86,87,85,85,87,87,85,85,85,87,87,86,85,87,86,85,87,86,85,85,87,85,85,87,85,87,86,85,87,86,87,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":[0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],0,0,0,0,0,[[1,[3,[2]]],[[5,[[3,[4]]]]]],[6],[6],[6],[6],[6],[1],[6],[[7,8],9],[[7,8],9],[[]],[[]],[10,7],[11,7],[12,7],[[1,13],[[5,[14]]]],[[1,15],[[5,[16]]]],[[1,17],5],[[1,18],[[5,[19]]]],[[1,20],[[5,[21]]]],[[1,22],5],[[1,23],[[5,[24]]]],[[1,25],[[5,[19]]]],[[],6],[[],6],[[]],[[]],[7,26],0,0,[1],[[27,[3,[28]],29,[31,[30]],[32,[30]],33],1],[34],0,0,[1,5],[[1,35],[[5,[[3,[4]]]]]],0,[7,[[37,[36]]]],0,[[],38],[[],39],[[],39],[[],39],[[],39],[[],40],[[],40],0,[[]],[[]],0,[[4,41,42],5],[[4,42],[[5,[24]]]],[[]],[[]],[[4,[3,[28]],43,44],[[5,[24]]]],[[4,45,16],[[5,[24]]]],[[4,45,16,[0,[46,47]]],5],0,[[4,48,49],[[5,[19]]]],[6],[6],[6],[4],[[]],[4,[[5,[16]]]],[4,[[5,[14]]]],[4,[[5,[50]]]],[[],6],[[]],[[[3,[2]]],[[5,[4]]]],[[4,[3,[28]],41],[[5,[42]]]],[[],39],[[],39],[[],40],[[]],[[4,51,14],[[5,[19]]]],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[52,[[55,[[54,[53]]]]]],[[56,52],[[55,[[54,[53]]]]]],[57,57],[58,58],[59,59],[29,29],[56,56],[[]],[[]],[[]],[[]],[[]],[[60,61,62],[[55,[[54,[53]]]]]],[[56,60,61,62],[[55,[[54,[53]]]]]],[[35,63],[[5,[64]]]],[[58,35,63],[[5,[64]]]],[[59,35,63],[[5,[64]]]],0,[[],58],[[],59],[6],[57],[6],[6],[29],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[[57,8],9],[[58,8],9],[[59,8],9],[[29,8],9],[[56,8],9],[[],57],[[]],[[]],[[]],[[]],[[],29],[[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[]],[[]],[[],[[5,[[65,[52]]]]]],[56,[[5,[[65,[52]]]]]],[[63,57],56],[52,5],[[56,52],5],[[]],[[]],[[]],[[]],[[]],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],40],[[],40],[[],40],[[],40],[[],40],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,[[],[[39,[16]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[66,[[39,[67,68]]]],[69,69],[70,70],[71,71],[[]],[[]],[[]],0,0,[6],[6],[6],[6],[6],[6],[6],[6],[[],[[39,[69]]]],[[],[[39,[70]]]],[[],[[39,[71]]]],[6],[6],[6],[6],[[69,8],9],[[70,8],9],[[71,8],9],0,[[]],[[]],[[]],[[]],0,[[[72,[66]],73],[[39,[73,68]]]],[[],6],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[]],0,0,0,0,0,0,[69,39],[70,39],[71,39],0,0,[[]],[[]],[[]],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],0,[[],40],[[],40],[[],40],[[],40],[[]],[[]],[[]],[[]],0,0,0,0,[[]],[[]],[27,27],[[]],0,[6],[6],[[],[[39,[27]]]],[6],[[27,8],9],[[]],[[],6],[[]],0,[27,39],[[]],[[],39],[[],39],[[],40],[[]],0,0,[[]],[[]],[6],[6],[6],[[74,8],9],[[]],[[],6],[[]],[[43,75,76],[[55,[[54,[53]]]]]],[[],[[55,[[54,[53]]]]]],[[],39],[[],39],[[],40],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[66,66],[17,17],[15,15],[13,13],[18,18],[25,25],[[]],[[]],[[]],[[]],[[]],[[]],0,[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[[],[[39,[17]]]],[[],[[39,[23]]]],[[],[[39,[20]]]],[[],[[39,[15]]]],[[],[[39,[13]]]],[[],[[39,[18]]]],[[],[[39,[25]]]],[[],[[39,[50]]]],[[],[[39,[21]]]],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],0,0,0,0,0,0,[[66,8],9],[[17,8],9],[[23,8],9],[[20,8],9],[[15,8],9],[[13,8],9],[[18,8],9],[[25,8],9],[[50,8],9],[[21,8],9],[[30,8],9],[[[79,[[0,[77,78]]]],8],9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[79,80]],0,0,[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[[31,[30]]],66],0,0,0,[66,[[39,[12]]]],0,0,[81,[[39,[82]]]],[83,39],[17,39],[23,39],[20,39],[15,39],[13,39],[18,39],[25,39],[50,39],[21,39],[[[84,[5]]],30],[[17,[84,[5]]],30],[[23,[84,[5]]],30],[[20,[84,[5]]],30],[[15,[84,[5]]],30],[[13,[84,[5]]],30],[[18,[84,[5]]],30],[[25,[84,[5]]],30],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],0,[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[85,53],[[86,62,38],[[39,[85,87]]]],[85,53],0,[[86,38,17],[[39,[85,87]]]],[85,[[37,[75]]]],[[86,38,18],[[39,[85,87]]]],[6],[6],[6],[6],[6],[6],[6],[6],[6],[85,[[39,[85,87]]]],[85,[[39,[85,87]]]],[85,88],[85,88],[[87,8],[[39,[89]]]],[[87,8],[[39,[89]]]],[[85,8],[[39,[89]]]],[[]],[[]],[[]],[90,85],[[86,38,15],[[39,[85,87]]]],[[86,38,13],[[39,[85,87]]]],[[86,38],[[39,[85,87]]]],[85,91],[85,91],[[],6],[[],6],[[],6],0,[[]],[[]],[[]],[87,92],[87,92],[87,92],[87,92],[87,92],[87,92],[87,92],[87,92],[85,53],[62,86],[34],[85,[[37,[93]]]],0,[87,[[37,[36]]]],[87,[[37,[94]]]],[85,94],[85,53],[[85,95],53],[[],38],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],40],[[],40],[[],40],[85,53],[87,[[37,[62]]]],[85,62],0,[87,[[37,[62]]]],[85,96],[[]],[[]],[[]],[[87,62],87],[[86,38,25],[[39,[85,87]]]],[87,87],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[97,[66]],[98,[13]]],[[39,[99,7]]]],[[[97,[66]],[98,[15]]],[[39,[99,7]]]],[[[97,[66]],[98,[17]]],[[39,[99,7]]]],[[[97,[66]],[98,[18]]],[[39,[99,7]]]],[[[97,[66]],[98,[20]]],[[39,[99,7]]]],[[[97,[66]],[98,[22]]],[[39,[99,7]]]],[[38,93,66],100],[[[97,[66]],[98,[25]]],[[39,[99,7]]]],[[38,101,102],[[39,[12]]]]],"p":[[3,"LnGateway"],[6,"GatewayClient"],[3,"Arc"],[3,"GatewayActor"],[6,"Result"],[15,"usize"],[4,"LnGatewayError"],[3,"Formatter"],[6,"Result"],[4,"ClientError"],[4,"MintClientError"],[3,"Error"],[3,"DepositAddressPayload"],[3,"Address"],[3,"BalancePayload"],[3,"Amount"],[3,"ConnectFedPayload"],[3,"DepositPayload"],[3,"TransactionId"],[3,"InfoPayload"],[3,"GatewayInfo"],[3,"PayInvoicePayload"],[3,"ReceivePaymentPayload"],[3,"Preimage"],[3,"WithdrawPayload"],[6,"Response"],[3,"GatewayConfig"],[8,"LnRpc"],[3,"GatewayClientBuilder"],[4,"GatewayRequest"],[3,"Sender"],[3,"Receiver"],[3,"TaskGroup"],[3,"Demand"],[3,"FederationId"],[8,"Error"],[4,"Option"],[3,"String"],[4,"Result"],[3,"TypeId"],[3,"ContractId"],[3,"OutPoint"],[3,"Invoice"],[3,"PaymentParameters"],[3,"Hash"],[8,"RngCore"],[8,"CryptoRng"],[3,"TxOutProof"],[3,"Transaction"],[3,"FederationInfo"],[3,"Amount"],[3,"GatewayClientConfig"],[8,"Future"],[3,"Box"],[3,"Pin"],[3,"StandardGatewayClientBuilder"],[3,"DbFactory"],[3,"MemDbFactory"],[3,"RocksDbFactory"],[3,"WsFederationConnect"],[3,"PublicKey"],[3,"Url"],[3,"PathBuf"],[3,"Database"],[3,"Vec"],[3,"GatewayRpcSender"],[3,"ClnRpcRef"],[6,"Error"],[3,"Htlc"],[3,"Onion"],[3,"HtlcAccepted"],[3,"Plugin"],[4,"Value"],[3,"LightningError"],[15,"u64"],[15,"f64"],[8,"Debug"],[8,"GatewayRequestTrait"],[3,"GatewayRequestInner"],[8,"Fn"],[8,"Deserializer"],[8,"Decodable"],[8,"Serializer"],[3,"Sender"],[3,"Response"],[3,"RpcClient"],[3,"Error"],[3,"Extensions"],[3,"Error"],[3,"Response"],[3,"HeaderMap"],[15,"bool"],[4,"SocketAddr"],[3,"StatusCode"],[15,"str"],[3,"Version"],[3,"Extension"],[3,"Json"],[8,"IntoResponse"],[6,"Result"],[3,"Duration"],[15,"u32"],[8,"IGatewayClientBuilder"],[8,"IDbFactory"]]},\
"mint_client":{"doc":"","t":[13,3,4,3,13,13,3,13,6,3,13,13,13,13,13,13,13,13,13,13,13,17,13,13,13,13,13,13,3,13,13,13,13,6,13,17,13,13,13,6,3,13,13,13,13,13,11,0,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,11,11,11,12,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,0,11,12,11,12,12,0,11,11,5,11,11,11,12,11,12,11,11,11,0,11,12,11,11,11,11,12,11,0,0,11,11,11,11,11,11,11,11,12,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,0,11,4,13,13,3,3,3,8,13,8,13,13,6,13,13,13,13,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,12,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,10,11,10,11,10,11,10,11,10,11,10,11,11,10,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,12,12,12,11,11,10,11,12,12,11,11,10,11,11,11,12,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,12,5,11,11,11,11,11,11,13,3,4,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,3,4,13,13,3,6,13,11,11,11,11,11,11,11,12,12,12,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,3,3,4,3,13,3,3,13,3,3,13,13,3,3,3,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,3,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,4,13,13,13,13,13,13,13,13,17,17,3,4,3,3,3,13,13,6,3,17,13,13,11,11,11,0,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,3,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,12,12,12,11,12,12,12,12,12,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,3,3,17,3,11,11,12,11,11,11,11,11,11,11,11,11,11,12,5,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,5,11,11,11,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,3,3,4,3,13,3,3,13,3,3,13,3,3,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,3,3,13,4,8,13,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,17,17,17,3,3,17,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,8,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,12,11,11,11,11,11,12,11,11,3,12,11,11,12,11,11,11,11,11,5,11,11,5,5,5,5,5,12,5,11,11,11,11,13,13,13,13,6,3,4,11,11,11,11,11,12,12,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,4,3,13,3,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["CancelUnknownOutgoingContract","Client","ClientError","ClientSecret","DeleteUnknownOutgoingContract","FailedPaymentNoRefund","FederationId","FetchOfferError","GatewayClient","GatewayClientConfig","GatewayNotFound","HttpError","InvalidAmountTier","InvalidInvoice","InvalidOffer","InvalidPreimage","InvalidSignature","InvalidTransaction","InvoiceError","InvoiceMissingAmount","LnClientError","MINT_SECRET_CHILD_ID","MintApiError","MintClientError","NoGateways","NoOffer","NotOurKey","OutgoingPaymentTimeout","PaymentParameters","PegInAmountTooSmall","PegOutWaitingForUTXOs","RefundUnknownOutgoingContract","RefundedFailedPayment","Result","SpendReusedNote","TIMELOCK","Timeout","TimeoutTooClose","Underfunded","UserClient","UserClientConfig","ViolatedFeePolicy","WaitContractTimeout","WalletClientError","WrongContractType","WrongTransactionType","abort_outgoing_payment","api","api","as_ref","as_ref","await_consensus_block_height","await_consensus_block_height_inner","await_outgoing_contract_acceptance","await_outgoing_contract_claimed","await_outgoing_contract_execution","await_outpoint_outcome","await_preimage_decryption","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buy_preimage_offer","claim_incoming_contract","claim_outgoing_contract","client_config","clone","clone","clone","clone_into","clone_into","clone_into","coins","config","config","consensus_decode","consensus_encode","consensus_encode_dyn","context","db","db","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","eq","eq","equivalent","equivalent","fetch_active_gateway","fetch_all_coins","fetch_coins","fetch_epoch_history","fetch_outgoing_contract","fetch_registered_gateways","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_str","fund_outgoing_ln_contract","generate_invoice","get_new_pegin_address","get_secret","hash","hash","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into_root_secret","invoice_amount","is_maybe_internal_payment","list_active_issuances","list_fetchable_coins","list_pending_claimed_outgoing","list_pending_outgoing","ln","ln_client","max_delay","max_fee_percent","max_send_amount","maybe_internal","mint","mint_client","mint_secret_static","module_decode_stubs","new","new_peg_out_with_fees","new_with_api","node_pub_key","pay_to_blind_nonces","payment_hash","peg_in","peg_out","provide","query","receive_coins","redeem_key","refund_incoming_contract","register_with_federation","reissue","reissue_pending_coins","root_secret","save_outgoing_payment","secrets","serde_keypair","serialize","serialize","serialize","serialize","source","spend_ecash","submit_tx_with_change","switch_active_gateway","timelock_delta","to_bytes","to_owned","to_owned","to_owned","to_string","transaction","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_refund_outgoing_contract","type_id","type_id","type_id","type_id","type_id","type_id","type_id","utils","validate_note_signatures","validate_outgoing_account","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wallet","wallet_client","ApiError","CoreError","DecodeError","FedResponse","FederationApi","FederationMember","IFederationApi","InvalidResponse","JsonRpcClient","NoResult","OutPointOutOfRange","Result","RpcError","Timeout","TransactionError","TransactionRejected","WsFederationApi","WsFederationConnect","await_output_outcome","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","client","connect","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","download_ecash_backup","download_ecash_backup","drop","drop","drop","drop","drop","drop","fetch_consensus_block_height","fetch_consensus_block_height","fetch_contract","fetch_contract","fetch_epoch_history","fetch_epoch_history","fetch_gateways","fetch_gateways","fetch_last_epoch","fetch_last_epoch","fetch_offer","fetch_offer","fetch_output_outcome","fetch_peg_out_fees","fetch_peg_out_fees","fetch_tx_outcome","fetch_tx_outcome","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_config","init","init","init","init","init","init","into","into","into","into","into","into","is_connected","is_retryable","members","members","module_registry","new","new_with_client","offer_exists","offer_exists","peer","peer_id","peers","provide","register_gateway","register_gateway","request","request","result","serialize","source","submit_transaction","submit_transaction","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","upload_ecash_backup","upload_ecash_backup","url","url_to_string_with_default_port","vzip","vzip","vzip","vzip","vzip","vzip","ClientSecret","ClientSecretKey","DbKeyPrefix","DbKeyPrefixIter","back_idx","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","consensus_decode","consensus_encode","consensus_encode_dyn","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","fmt","fmt","fmt","from","from","from","from_bytes","from_bytes","get","idx","init","init","init","into","into","into","into_iter","iter","len","marker","next","next_back","nth","serialize","size_hint","to_bytes","to_bytes","to_owned","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","ApiError","LnClient","LnClientError","MissingInvoiceAmount","NoConfirmedInvoice","PayInvoicePayload","Result","WrongAccountType","await_outgoing_refundable","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","config","context","contract_id","create_cancel_outgoing_output","create_offer_output","create_outgoing_output","create_refund_outgoing_contract_input","db","decoder","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","federation_id","fmt","fmt","fmt","fmt","from","from","from","get_confirmed_invoice","get_contract_account","get_incoming_contract","get_offer","get_outgoing_contract","incoming","init","init","init","input_amount","into","into","into","is_outgoing_contract_refundable","new","offer_exists","outgoing","output_amount","provide","refundable_outgoing_contracts","save_confirmed_invoice","serialize","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","ConfirmedInvoice","ConfirmedInvoiceKey","ConfirmedInvoiceKeyPrefix","DbKeyPrefix","DbKeyPrefixIter","LightningGateway","LightningGatewayKey","LightningGatewayKeyPrefix","OutgoingContractAccount","OutgoingContractAccountKey","OutgoingContractAccountKeyPrefix","OutgoingPayment","OutgoingPaymentClaim","OutgoingPaymentClaimKey","OutgoingPaymentClaimKeyPrefix","OutgoingPaymentKey","OutgoingPaymentKeyPrefix","back_idx","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","get","idx","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","iter","len","marker","next","next_back","nth","serialize","serialize","serialize","serialize","serialize","size_hint","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","ConfirmedInvoice","IncomingContractAccount","amount","borrow","borrow","borrow_mut","borrow_mut","claim","clone","clone_into","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","contract","contract_id","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","from_bytes","from_bytes","init","init","into","into","invoice","keypair","serialize","to_bytes","to_bytes","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","OutgoingContractAccount","OutgoingContractData","amount","borrow","borrow","borrow_mut","borrow_mut","claim","clone","clone_into","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","contract","contract_account","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","from_bytes","from_bytes","init","init","into","into","recovery_key","refund","serialize","serialize","to_bytes","to_bytes","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","ApiError","CoinFinalizationError","FinalizationError","InsufficientBalance","InvalidAmountTier","InvalidIssuanceId","InvalidOutcomeType","InvalidOutcomeWrongStructure","InvalidSignature","InvalidSignatureAtIdx","MINT_E_CASH_BACKUP_SNAPSHOT_TYPE_CHILD_ID","MINT_E_CASH_TYPE_CHILD_ID","MintClient","MintClientError","NoteIndex","NoteIssuanceRequest","NoteIssuanceRequests","OutputNotReadyYet","ReceivedUspendableCoin","Result","SpendableNote","TARGET_DENOMINATION_SETS","UnknownIssuance","WrongMintAnswer","advance","as_u64","back_up_ecash_to_federation","backup","blinding_key","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","coin_amount","coin_count","coins","coins","config","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","context","create_ecash","db","decoder","default","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize_key_pair","download_ecash_backup_from_federation","drop","drop","drop","drop","drop","drop","drop","ecash_input","epoch_pk","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","extend","fetch_all_coins","fetch_coins","fetch_epochs","finalize","finalize","finalize_change","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_u64","get_available_notes","get_derived_backup_encryption_key","get_derived_backup_encryption_key_static","get_derived_backup_signing_key","get_derived_backup_signing_key_static","get_next_note_index","hash","init","init","init","init","init","init","init","input_amount","into","into","into","into","into","into","into","is_retryable","list_active_issuances","new","new_ecash_note","new_note_secret","new_note_secret_static","next","nonce","note","output_amount","partial_cmp","prepare_ecash_backup","prepare_plaintext_ecash_backup","provide","provide","receive_coins","recover_blind_nonce","restore_current_state_from_backup","restore_ecash_from_federation","secret","select_coins","select_input","serialize","serialize","serialize","serialize","source","spend_key","spend_key","start_dbtx","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upload_ecash_backup","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wipe_notes","wipe_notes_static","EcashBackup","EcashRecoveryFinalState","EcashRecoveryTracker","PlaintextEcashBackup","add_next_pending_nonce_in_pending_pool","aead","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","consensus_decode","consensus_encode","consensus_encode_dyn","decode","decrypt_with","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","drop","encode","encrypt_to","epoch","eq","equivalent","fill_initial_pending_nonces","finalize","fmt","fmt","fmt","from","from","from","from","from_backup","from_bytes","gap_limit","get_alignment_size","handle_consensus_item","handle_input","handle_output","handle_output_confirmation","init","init","init","init","into","into","into","into","into_backup_request","last_mined_nonce_idx","new_empty","next_note_idx","next_note_idx","next_pending_note_idx","notes","observe_nonce_idx_being_used","pending_nonces","pending_notes","pending_outputs","pub_key_shares","secret","serialize","spendable_note_by_nonce","spendable_notes","tbs_pks","threshold","to_bytes","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unconfirmed_notes","vzip","vzip","vzip","vzip","Aad","LessSafeKey","NONCE_LEN","UnboundKey","algorithm","algorithm","algorithm","as_bits","as_ref","base32_len","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","check_base32","cpu_features","decrypt","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","empty","encode_hex","encode_hex_upper","encrypt","fmt","fmt","from","from","from","from","from","get_random_nonce","init","init","init","inner","into","into","into","key","new","new","open_in_place","open_within","seal_in_place","seal_in_place_append_tag","seal_in_place_separate_tag","try_as_bits","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","write_base32","Coin","CoinKey","CoinKeyPrefix","DbKeyPrefix","DbKeyPrefixIter","NextECashNoteIndex","NextECashNoteIndexKey","NextECashNoteIndexKeyPrefix","OutputFinalizationData","OutputFinalizationKey","OutputFinalizationKeyPrefix","PendingCoins","PendingCoinsKey","PendingCoinsKeyPrefix","amount","back_idx","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","get","idx","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into_iter","iter","len","marker","next","next_back","nonce","nth","serialize","serialize","serialize","serialize","size_hint","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","Continue","CurrentConsensus","EventuallyConsistent","Finished","QueryStep","QueryStrategy","Retry","Retry404","TrustAllPeers","UnionResponses","ValidHistory","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","current","current","current","current","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","epoch_pk","errors","existing_results","existing_results","from","from","from","from","from","from","from","init","init","init","init","init","init","init","into","into","into","into","into","into","into","new","new","new","new","new","process","process","process","process","process","process","process","required","required","required","responses","responses","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","BLS12_381_TAG","CHACHA20_POLY1305","CHILD_TAG","ChildId","DerivableSecret","SECP256K1_TAG","borrow","borrow","borrow_mut","borrow_mut","child_key","clone","clone","clone_into","clone_into","consensus_decode","consensus_encode","consensus_encode_dyn","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","from_bytes","init","init","into","into","kdf","level","level","new_root","tagged_derive","to_bls12_381_key","to_bytes","to_chacha20_poly1305_key","to_owned","to_owned","to_secp_key","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","deserialize","serialize","Final","TransactionBuilder","borrow","borrow_mut","build","build_with_change","change_required","default","deref","deref_mut","drop","fee_amount","from","init","input","input_amount","input_amount_iter","into","is_final","keys","output","output_amount","output_amount_iter","try_from","try_into","tx","type_id","vzip","ClientContext","api","borrow","borrow_mut","db","deref","deref_mut","drop","fmt","from","from_hex","init","into","network_to_currency","parse_bitcoin_amount","parse_ecash","parse_fedimint_amount","parse_node_pub_key","secp","serialize_ecash","try_from","try_into","type_id","vzip","ApiError","NoMatchingPegInFound","PegInAmountTooSmall","PegInProofError","Result","WalletClient","WalletClientError","await_peg_out_outcome","borrow","borrow","borrow_mut","borrow_mut","config","context","create_pegin_input","db","decoder","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","fmt","from","from","from","get_new_pegin_address","init","init","input_amount","into","into","output_amount","provide","source","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","DbKeyPrefix","DbKeyPrefixIter","PegIn","PegInKey","PegInPrefixKey","back_idx","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","fmt","fmt","fmt","fmt","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","get","idx","init","init","init","init","into","into","into","into","into_iter","iter","len","marker","next","next_back","nth","peg_in_script","serialize","size_hint","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip"],"q":["mint_client","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","mint_client::api","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","mint_client::db","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","mint_client::ln","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","mint_client::ln::dbmint_client::ln::incoming","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","mint_client::ln::outgoing","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","mint_client::mintmint_client::mint::backup","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","mint_client::mint::backup::aead","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","mint_client::mint::dbmint_client::query","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","mint_client::secrets","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","mint_client::serde_keypair","","mint_client::transaction","","","","","","","","","","","","","","","","","","","","","","","","","","","","mint_client::utils","","","","","","","","","","","","","","","","","","","","","","","","mint_client::wallet","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","mint_client::wallet::db","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","Mint module’s secret key derivation child id","","","","","","","","","","","","","","","","","","","","","","","","","Abort payment if our node can’t route it and give money …","","","","","","","","Waits for a outgoing contract claim transaction to be …","Notify gateway that we’ve escrowed tokens they can claim …","Waits for the federation to sign an ecash note.","Wait for a lightning preimage gateway has purchased to be …","","","","","","","","","","","","","","","Buy a lightning preimage listed for sale inside the …","","Claim an outgoing contract after acquiring the preimage by …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Tries to fetch e-cash tokens from a certain out point. An …","","Fetch the specified outgoing payment contract account","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Returns the argument unchanged.","","","","","Returns a bitcoin address suited to perform a fedimint …","Fetches the client secret from the database or generates a …","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns true if the invoice contains us as a routing hint","","","Lists all claim transactions for outgoing contracts that …","Lists all previously saved transactions that have not been …","","","","","","","","","","Builds a fake module registry which is only usable for …","","","","","Pay by creating notes provided (and most probably …","","","","","","Receive e-cash directly from another user when online (vs. …","","Claw back funds after incoming contract that had invalid …","Register this gateway with the federation","Spent some <code>SpendableNote</code>s to receive a freshly minted ones","Should be called after any transaction that might have …","","Save the details about an outgoing payment the client is …","Scheme for deriving deterministic secret keys","","","","","","","Issues a spendable amount of ecash","","Switches the clients active gateway to a registered …","","","","","","","","","","","","","","","","","","","","","","Claims a refund for an expired or cancelled outgoing …","","","","","","","","","Validate signatures on notes.","Check if we can claim the contract account and returns the …","","","","","","","","","","","","","","","","","","","","","","","","","","Mint API client that will try to run queries against all …","Information required for client to construct …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Download ecash (encrypted) backup from mint to safekeep","","","","","","","","Fetch the current consensus block height (trailing actual …","","Fetch ln contract state","","","","Fetch available lightning gateways (assumes gateways …","","","","Fetch preimage offer for incoming lightning payments","","","Fetch the expected peg-out fees given a peg-out tx","","Fetch the outcome of an entire transaction","Fetch the outcome of an entire transaction","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Returns <code>true</code> if queried outpoint isn’t ready yet but may …","","","","Creates a new API client","Creates a new API client","Checks if there exists an offer for a payment hash","","","","","","Register a gateway with the federation","","","","","","","Submit a transaction to all federation members","Submit a transaction to all federation members","","","","","","","","","","","","","","","","","","","","Upload ecash (encrypted) backup for mint to safekeep","","","<code>jsonrpsee</code> converts the <code>Url</code> to a <code>&amp;str</code> internally and then …","","","","","","","","","","An iterator over the variants of Self","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Waits for an outgoing contract to become refundable","","","","","","","","","","Used by gateway to prematurely return funds to the user if …","","Create an output that incentivizes a Lighning gateway to …","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Determines if an outgoing contract can be refunded","","","","","","","","","","","","","","","","","","","","","","","","","","An iterator over the variants of Self","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Invoice whose “offer” has been accepted by federation","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The invoice itself","Keypair that will be able to sweep contract once it has …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Federation module client for the Mint module. It can both …","","An index used to deterministically derive <code>Note</code>s","Single <code>Note</code> issuance request to the mint.","Multiple <code>Note</code> issuance requests","","","","A <code>Note</code> with associated secret key that allows to proof …","","","","","","Prepare an encrypted backup and send it to federation for …","Backup and recovery of ecash notes","Key to unblind the blind signature supplied by the mint …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Finalization data for all coin outputs in this request","","","","","","","","","","","","","","","Generates unsigned ecash, along with the private keys that …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fetch epochs in a given range and send them over <code>sender</code>","","Finalize the issuance request using a <code>OutputOutcome</code> from …","Adds the final amounts of <code>change</code> to the tx before …","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","Get available spendable notes with a db transaction …","","Static version of <code>Self::get_derived_backup_encryption_key</code> …","","Static version of <code>Self::get_derived_backup_signing_key</code> for …","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if queried outpoint isn’t ready yet but may …","","Generate a request session for a single coin and returns …","","","Derive the note <code>DerivableSecret</code> from the Mint’s <code>secret</code> …","","","","","","","","","","","","","","","","","","","","","","Spend key from which the coin nonce (corresponding public …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Delete all the note-related data from the database","Encrypted version of <code>PlaintextEcashBackup</code>.","","The state machine used for fast-fowarding backup from …","Snapshot of a ecash state (notes)","Add next nonce from <code>amount</code> tier to the …","Some helpers to make <code>ring::aead</code> usable","","","","","","","","","","","","Decode from a plaintexet (possibly aligned) message","","","","","","","","","","","","","","","Encode <code>self</code> to a padded (but still plaintext) message","Encrypt with a key and turn into <code>EcashBackup</code>","","","","Fill each tier pool to the gap limit","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","The number of nonces we look-ahead when looking for mints …","Align an ecoded message size up for better privacy","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","<code>LastECashNoteIndex</code> but tracked in flight. Basically max …","An empty backup with, like a one created by a newly …","","Note index to derive next note in a given amount tier","Tail of <code>pending</code>. <code>pending_notes</code> is filled by generating …","","React to a valid pending nonce being tracked being used in …","Next nonces that we expect might soon get used. Once we …","","Outputs (by <code>OutPoint</code>) we track federation member …","Public key shares for each peer","The <strong>mint</strong> (not root) derived secret used to derive notes","","Nonces that we track that are currently spendable.","Nonces that we track that are currently spendable.","Aggregate public key for each amount tier","Threshold","","","","","","","","","","","","","","Unsigned notes","","","","","The additionally authenticated data (AAD) for an opening …","Immutable keys for use in situations where <code>OpeningKey</code>/…","All the AEADs we support use 96-bit nonces.","An AEAD key without a designated role or nonce sequence.","The key’s AEAD algorithm.","The key’s AEAD algorithm.","","","","","","","","","","","","","Decrypts a <code>ciphertext</code> using <code>key</code>.","","","","","","","","","","Construct an empty <code>Aad</code>.","","","Encrypt <code>plaintext</code> using <code>key</code>.","","","Returns the argument unchanged.","Construct the <code>Aad</code> from the given bytes.","Returns the argument unchanged.","","Returns the argument unchanged.","Get a random nonce.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Constructs an <code>UnboundKey</code>.","Constructs a <code>LessSafeKey</code> from an <code>UnboundKey</code>.","Like <code>OpeningKey::open_in_place()</code>, except it accepts an …","Like <code>OpeningKey::open_within()</code>, except it accepts an …","Deprecated. Renamed to <code>seal_in_place_append_tag()</code>.","Like <code>SealingKey::seal_in_place_append_tag()</code>, except it …","Like <code>SealingKey::seal_in_place_separate_tag()</code>, except it …","","","","","","","","","","","","","","","","","","","An iterator over the variants of Self","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns when <code>required</code> responses are equal","Returns when <code>required</code> responses are equal, retrying after …","","Results from the strategy handling a response from a peer","","","Returns when <code>required</code> responses are equal, retrying on 404 …","Returns a result from the first responding peer","Returns the deduplicated union of <code>required</code> responses","Returns first epoch with a valid sig, otherwise wait till …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Previously received responses/results","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Describes a child key of a <code>DerivableSecret</code>","Secret key that allows deriving child secret keys","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Get derivation level","Derivation level, root = 0, every <code>child_key</code> increments it","","","","","","","","","","","","","","","","","","","","","","","Builds and signs the final transaction with correct change","Builds and signs the final transaction with exact change …","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Federation module client for the Wallet module. It can …","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns a bitcoin-address derived from the federations …","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","An iterator over the variants of Self","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[4,0,0,0,4,4,0,4,0,0,4,4,4,4,4,4,4,4,4,4,4,0,4,4,4,4,4,4,0,4,4,4,4,0,4,0,4,4,4,0,0,4,4,4,4,4,2,0,1,6,1,2,2,2,2,2,2,2,2,34,18,6,1,22,4,2,34,18,6,1,22,4,2,2,2,1,18,6,1,18,6,1,2,2,2,22,22,22,2,0,2,2,34,18,6,1,22,4,2,34,18,6,1,22,4,18,6,1,2,34,18,6,1,22,4,18,1,18,1,2,2,2,2,2,2,34,18,6,1,22,4,4,2,34,18,6,1,22,4,4,4,4,4,4,4,4,22,18,2,2,2,2,18,18,2,34,18,6,1,22,4,2,34,18,6,1,22,4,22,34,2,2,2,2,2,0,2,34,34,34,34,0,2,2,0,2,2,2,1,2,34,2,2,4,0,2,1,2,2,2,2,2,2,0,0,18,6,1,22,4,2,2,2,1,22,18,6,1,4,0,2,34,18,6,1,22,4,2,34,18,6,1,22,4,2,2,34,18,6,1,22,4,0,2,2,2,34,18,6,1,22,4,0,2,0,37,37,0,0,0,0,37,0,37,37,0,37,37,37,37,0,0,59,94,59,85,86,80,37,94,59,85,86,80,37,86,82,94,59,59,85,86,80,37,94,59,85,86,80,37,80,202,85,94,59,85,86,80,37,202,85,202,85,202,85,202,85,202,85,202,85,59,202,85,202,85,59,85,86,80,37,37,94,59,59,85,86,80,80,37,37,37,37,85,94,59,85,86,80,37,94,59,85,86,80,37,82,37,85,80,85,85,85,202,85,94,86,85,37,202,85,85,86,94,80,37,202,85,37,94,59,85,86,80,37,94,59,85,86,80,37,94,59,85,86,80,37,202,85,86,0,94,59,85,86,80,37,97,0,0,0,98,97,98,99,97,98,99,97,98,97,98,99,99,99,97,98,99,97,98,99,97,98,99,97,97,99,97,98,99,99,99,98,98,97,98,99,97,98,99,98,97,98,98,98,98,98,99,98,99,99,97,98,97,97,98,99,97,98,99,97,98,99,97,98,99,40,0,0,40,40,0,0,40,52,52,106,40,52,106,40,52,52,106,52,52,52,52,0,52,52,106,40,52,106,40,106,52,106,40,106,52,106,40,40,52,106,40,52,52,52,52,52,0,52,106,40,52,52,106,40,52,106,52,0,52,40,52,52,106,40,52,106,40,52,106,40,52,106,40,52,106,40,111,0,0,0,0,111,0,0,111,0,0,111,111,0,0,0,0,112,111,112,113,114,115,116,117,118,119,120,121,122,111,112,113,114,115,116,117,118,119,120,121,122,111,112,111,112,113,114,115,116,117,118,119,120,121,122,113,114,115,116,117,118,119,120,121,122,113,114,115,116,117,118,119,120,121,122,111,112,113,114,115,116,117,118,119,120,121,122,111,112,113,114,115,116,117,118,119,120,121,122,111,112,113,114,115,116,117,118,119,120,121,122,111,111,113,114,115,116,117,118,119,120,121,122,111,112,113,114,115,116,117,118,119,120,121,122,113,113,114,114,115,115,116,116,117,117,118,118,119,119,120,120,121,121,122,122,112,112,111,112,113,114,115,116,117,118,119,120,121,122,111,112,113,114,115,116,117,118,119,120,121,122,112,111,112,112,112,112,112,113,115,117,119,121,112,113,113,114,114,115,115,116,116,117,117,118,118,119,119,120,120,121,121,122,122,111,112,111,111,112,113,114,115,116,117,118,119,120,121,122,111,112,113,114,115,116,117,118,119,120,121,122,111,112,113,114,115,116,117,118,119,120,121,122,111,112,113,114,115,116,117,118,119,120,121,122,0,0,108,108,49,108,49,108,108,108,108,49,108,49,108,49,108,49,108,49,108,49,108,49,108,49,108,49,108,49,108,49,108,49,49,49,49,108,49,108,108,49,108,49,108,49,108,49,0,0,33,105,33,105,33,33,33,33,105,33,105,33,105,33,33,105,105,33,105,33,105,33,105,33,105,33,105,33,105,33,105,33,105,33,105,33,105,33,33,105,33,105,33,105,33,105,33,43,0,43,43,138,138,43,43,138,138,0,0,0,0,0,0,0,43,43,0,0,0,138,138,124,124,54,0,126,54,124,126,127,19,138,43,54,124,126,127,19,138,43,54,124,126,127,19,54,124,126,127,19,124,127,127,54,127,54,124,126,127,19,124,126,127,19,124,126,127,19,54,54,0,54,124,127,54,124,126,127,19,138,43,54,124,126,127,19,138,43,124,126,127,19,0,54,54,124,126,127,19,138,43,54,54,124,126,127,19,124,126,127,19,127,54,54,54,126,127,54,54,124,124,126,127,19,138,138,43,43,54,124,126,127,19,138,138,43,43,43,124,126,127,19,124,54,54,54,54,54,54,19,54,124,126,127,19,138,43,54,54,124,126,127,19,138,43,43,54,126,54,54,54,124,126,19,54,124,54,54,138,43,54,126,54,54,54,54,54,124,126,127,19,43,126,19,54,124,126,127,19,54,124,126,127,19,124,138,43,54,124,126,127,19,138,43,54,124,126,127,19,138,43,54,124,126,127,19,138,43,54,54,124,126,127,19,138,43,54,54,0,0,0,0,147,0,143,131,145,147,143,131,145,147,131,131,131,131,143,143,131,145,147,143,131,145,147,131,143,131,145,147,131,131,131,131,131,147,147,131,145,147,143,131,145,147,147,131,147,131,147,147,147,147,143,131,145,147,143,131,145,147,143,147,131,131,145,147,131,147,147,131,147,147,147,131,147,145,147,147,131,143,131,145,147,143,131,145,147,143,131,145,147,145,143,131,145,147,0,0,0,0,154,141,154,157,157,157,157,154,141,157,154,141,157,154,0,157,154,141,157,154,141,157,154,141,157,157,157,0,154,141,157,157,154,154,141,0,157,154,141,154,157,154,141,141,154,141,141,141,141,141,141,157,157,154,141,157,154,141,157,154,141,157,154,141,157,166,0,0,0,0,166,0,0,166,0,0,166,0,0,168,167,166,167,168,169,170,171,172,173,174,175,166,167,168,169,170,171,172,173,174,175,166,167,168,169,170,171,172,173,174,175,166,167,168,169,170,171,172,173,174,175,168,169,170,171,172,173,174,175,168,169,170,171,172,173,174,175,168,169,170,171,172,173,174,175,166,167,168,169,170,171,172,173,174,175,166,167,168,169,170,171,172,173,174,175,172,166,167,168,169,170,171,172,173,174,175,172,172,166,166,168,169,170,171,172,173,174,175,166,167,168,169,170,171,172,173,174,175,168,168,169,169,170,170,171,171,172,172,173,173,174,174,175,175,167,167,166,167,168,169,170,171,172,173,174,175,166,167,168,169,170,171,172,173,174,175,167,166,167,167,167,167,168,167,168,170,172,175,167,168,168,169,169,170,170,171,171,172,172,173,173,174,174,175,175,166,167,168,169,170,171,172,173,174,175,166,166,167,168,169,170,171,172,173,174,175,166,167,168,169,170,171,172,173,174,175,166,167,168,169,170,171,172,173,174,175,166,167,168,169,170,171,172,173,174,175,181,0,0,181,0,0,181,0,0,0,0,182,176,177,178,179,180,181,182,176,177,178,179,180,181,176,177,178,179,182,176,177,178,179,180,181,182,176,177,178,179,180,181,182,176,177,178,179,180,181,176,180,177,180,182,176,177,178,179,180,181,182,176,177,178,179,180,181,182,176,177,178,179,180,181,176,177,178,179,180,93,182,176,177,178,179,180,177,179,180,177,179,182,176,177,178,179,180,181,182,176,177,178,179,180,181,182,176,177,178,179,180,181,182,176,177,178,179,180,181,0,0,0,0,0,0,184,51,184,51,51,184,51,184,51,184,184,184,184,51,184,51,184,51,184,51,184,51,184,184,51,184,51,51,51,51,51,0,51,184,51,184,51,51,184,51,184,51,184,51,184,51,0,0,0,0,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,203,66,66,66,66,66,66,66,66,66,0,189,189,189,189,189,189,189,189,189,0,189,189,0,0,0,0,0,189,0,189,189,189,189,42,42,42,42,0,0,0,71,71,42,71,42,71,71,71,0,71,71,42,71,42,71,42,71,42,42,71,42,42,71,71,42,71,71,42,71,42,42,42,71,42,71,42,71,42,71,42,0,0,198,0,0,199,198,199,200,201,198,199,200,201,198,199,200,201,198,199,200,201,200,201,200,201,200,201,198,199,200,201,198,199,200,201,198,199,200,201,198,198,200,201,198,199,200,201,200,200,201,201,199,199,198,199,200,201,198,199,200,201,199,198,199,199,199,199,199,200,200,199,200,200,201,201,198,199,200,201,198,198,199,200,201,198,199,200,201,198,199,200,201,198,199,200,201],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[2,[1]],3],[[5,[4]]]],0,0,[6,7],[1,7],[[[2,[[0,[[8,[7]],9]]]],10],[[5,[10,11]]]],[[[2,[[0,[[8,[7]],9]]]],10],10],[[[2,[6]],12],[[5,[4]]]],[[[2,[1]],3,12],[[5,[4]]]],[[[2,[6]],3,[0,[13,14]]],[[5,[4]]]],[[[2,[6]],12],[[5,[4]]]],[[[2,[1]],12],[[5,[15,4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[2,[1]],16,17,[0,[13,14]]],[[5,[4]]]],[[[2,[6]],3,[0,[13,14]]],[[5,[12,4]]]],[[[2,[1]],3,15,[0,[13,14]]],[[5,[12,4]]]],0,[18,18],[6,6],[1,1],[[]],[[]],[[]],[[[2,[[0,[[8,[7]],9]]]]],[[20,[19]]]],[[[2,[[0,[[8,[7]],9]]]]],[[0,[[8,[7]],9]]]],0,[21,[[5,[22,23]]]],[22,[[5,[24,25]]]],[26,[[5,[24,25]]]],0,0,[[[2,[[0,[[8,[7]],9]]]]],27],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[[],[[5,[18]]]],[[],[[5,[6]]]],[[],[[5,[1]]]],[24],[24],[24],[24],[24],[24],[24],[[18,18],28],[[1,1],28],[[],28],[[],28],[[[2,[6]]],[[5,[29,4]]]],[[[2,[[0,[[8,[7]],9]]]]],[[30,[[5,[12,4]]]]]],[[[2,[[0,[[8,[7]],9]]]],12],[[5,[4]]]],[[[2,[[0,[[8,[7]],9]]]],10,31],[[5,[32,4]]]],[[[2,[1]],3],[[5,[33,4]]]],[[[2,[6]]],[[5,[[30,[29]],4]]]],[[34,35],36],[[18,35],36],[[6,35],36],[[1,35],36],[[22,35],36],[[4,35],36],[[4,35],36],[[]],[[]],[[]],[[]],[[]],[[]],[37,4],[38,4],[39,4],[40,4],[41,4],[42,4],[43,4],[[]],[21,[[5,[44]]]],[45,[[5,[18]]]],[[[2,[6]],46,[0,[13,14]]],[[5,[4]]]],[[[2,[6]],17,47,[0,[13,14]],[48,[10]]],[[5,[49,4]]]],[[[2,[[0,[[8,[7]],9]]]],[0,[13,14]]],50],[27,51],[18,16],[18],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[22,51],0,[[[2,[1]],46],28],[[[2,[[0,[[8,[7]],9]]]]],30],[[[2,[1]]],[[30,[12]]]],[[[2,[1]]],[[30,[3]]]],[[[2,[1]]],[[30,[33]]]],0,[[[2,[[0,[[8,[7]],9]]]]],52],0,[34,53],0,0,0,[[[2,[[0,[[8,[7]],9]]]]],54],[51,51],[[],21],[[[0,[[8,[7]],9]],27,[56,[55]]],[[2,[[0,[[8,[7]],9]]]]]],[[[2,[[0,[[8,[7]],9]]]],57,50],[[5,[58,4]]]],[[[0,[[8,[7]],9]],27,59,[56,[55]]],[[2,[[0,[[8,[7]],9]]]]]],0,[[[2,[[0,[[8,[7]],9]]]],[20,[60]],[0,[13,14]]],[[5,[12,4]]]],0,[[[2,[[0,[[8,[7]],9]]]],61,62,[0,[13,14]]],[[5,[63,4]]]],[[[2,[[0,[[8,[7]],9]]]],58,[0,[13,14]]],[[5,[12,4]]]],[64],0,[[[2,[[0,[[8,[7]],9]]]],17]],0,[[[2,[1]],3,[0,[13,14]]],[[5,[63,4]]]],[[[2,[1]],29],[[5,[4]]]],[[[2,[[0,[[8,[7]],9]]]],[20,[19]],[0,[13,14]]],[[5,[12,4]]]],[[[2,[[0,[[8,[7]],9]]]],[0,[13,14]]],[[5,[12,4]]]],0,[[[2,[1]],33]],0,0,[18,5],[6,5],[1,5],[22,5],[4,[[48,[65]]]],[[[2,[[0,[[8,[7]],9]]]],17,[0,[13,14]]],[[5,[[20,[19]],4]]]],[[[2,[[0,[[8,[7]],9]]]],66,[0,[13,14]]],[[5,[63,4]]]],[[[2,[6]],[48,[67]]],[[5,[29,4]]]],0,[[],[[30,[68,69]]]],[[]],[[]],[[]],[[],47],0,[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[[2,[6]],3,[0,[13,14]]],[[5,[12,4]]]],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],0,[[[2,[[0,[[8,[7]],9]]]],20],[[5,[4]]]],[[[2,[1]],33],[[5,[34,4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[[2,[[0,[[8,[7]],9]]]]],71],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[59,12,72],[[75,[[0,[73,74]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[76,[[79,[[78,[77]]]]]],[24],[24],[59],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[[],[[5,[80]]]],[81,[[79,[[78,[77]]]]]],[[[85,[[0,[82,83,74,84]]]],81],[[79,[[78,[77]]]]]],[24],[24],[24],[24],[24],[24],[[],[[79,[[78,[77]]]]]],[[[85,[[0,[82,83,74,84]]]]],[[79,[[78,[77]]]]]],[3,[[79,[[78,[77]]]]]],[[[85,[[0,[82,83,74,84]]]],3],[[79,[[78,[77]]]]]],[[10,31],[[79,[[78,[77]]]]]],[[[85,[[0,[82,83,74,84]]]],10,31],[[79,[[78,[77]]]]]],[[],[[79,[[78,[77]]]]]],[[[85,[[0,[82,83,74,84]]]]],[[79,[[78,[77]]]]]],[[],[[79,[[78,[77]]]]]],[[[85,[[0,[82,83,74,84]]]]],[[79,[[78,[77]]]]]],[16,[[79,[[78,[77]]]]]],[[[85,[[0,[82,83,74,84]]]],16],[[79,[[78,[77]]]]]],[[59,12],75],[[50,57],[[79,[[78,[77]]]]]],[[[85,[[0,[82,83,74,84]]]],50,57],[[79,[[78,[77]]]]]],[63,[[79,[[78,[77]]]]]],[[[85,[[0,[82,83,74,84]]]],63],[[79,[[78,[77]]]]]],[[59,35],36],[[[85,[83]],35],36],[[[86,[83]],35],36],[[80,35],36],[[37,35],36],[[37,35],36],[[]],[[],59],[[]],[[]],[[]],[7,80],[[]],[87,37],[23,37],[[]],[88,37],[7,[[85,[89]]]],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[]],[[]],[[]],[[]],[[]],[[]],[[],28],[37,28],0,0,0,[30,[[85,[89]]]],[30,85],[16,[[79,[[78,[77]]]]]],[[[85,[[0,[82,83,74,84]]]],16],[[79,[[78,[77]]]]]],0,0,[85,[[30,[90]]]],[64],[29,[[79,[[78,[77]]]]]],[[[85,[[0,[82,83,74,84]]]],29],[[79,[[78,[77]]]]]],[[[85,[82]],45,91,[93,[92]]],[[75,[92]]]],[[[86,[82]],45],94],0,[80,5],[37,[[48,[65]]]],[95,[[79,[[78,[77]]]]]],[[[85,[[0,[82,83,74,84]]]],95],[[79,[[78,[77]]]]]],[[],47],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[96,[[79,[[78,[77]]]]]],[[[85,[[0,[82,83,74,84]]]],96],[[79,[[78,[77]]]]]],0,[76,47],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[97,97],[98,98],[[]],[[]],[21,[[5,[99,23]]]],[99,[[5,[24,25]]]],[26,[[5,[24,25]]]],[24],[24],[24],[24],[24],[24],[24],[24],[24],[[97,35],36],[[97,35],36],[[99,35],36],[[]],[[]],[[]],[21,[[5,[44]]]],[21,[[5,[44]]]],[[98,24],[[48,[97]]]],0,[[],24],[[],24],[[],24],[[]],[[]],[[]],[[]],[[],98],[98,24],0,[98,48],[98,48],[[98,24],48],[99,5],[98],[[],[[30,[68,69]]]],[[],[[30,[68,69]]]],[[]],[[]],[[],47],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],70],[[],70],[[],70],[[]],[[]],[[]],0,0,0,0,0,0,0,0,[[52,3],100],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[52,3,101],102],[[52,17,16,15,[48,[10]]],102],[[52,103,46,29,104,[0,[13,14]]],[[100,[102]]]],[[52,105]],0,[52],[24],[24],[24],[24],[24],[24],[[],[[5,[106]]]],[24],[24],[24],0,[[52,35],36],[[106,35],36],[[40,35],36],[[40,35],36],[[]],[[]],[[]],[[52,3],[[100,[49]]]],[[52,3],[[100,[107]]]],[[52,3],[[100,[108]]]],[[52,16],[[100,[109]]]],[[52,3],[[100,[33]]]],0,[[],24],[[],24],[[],24],[52,110],[[]],[[]],[[]],[[52,3],[[100,[28]]]],[[18,3],106],[[52,16],[[100,[28]]]],0,[52,110],[64],[[52,10],[[30,[105]]]],[[52,49]],[106,5],[[],47],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],70],[[],70],[[],70],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[111,111],[112,112],[[]],[[]],[21,[[5,[113,23]]]],[21,[[5,[114,23]]]],[21,[[5,[115,23]]]],[21,[[5,[116,23]]]],[21,[[5,[117,23]]]],[21,[[5,[118,23]]]],[21,[[5,[119,23]]]],[21,[[5,[120,23]]]],[21,[[5,[121,23]]]],[21,[[5,[122,23]]]],[113,[[5,[24,25]]]],[114,[[5,[24,25]]]],[115,[[5,[24,25]]]],[116,[[5,[24,25]]]],[117,[[5,[24,25]]]],[118,[[5,[24,25]]]],[119,[[5,[24,25]]]],[120,[[5,[24,25]]]],[121,[[5,[24,25]]]],[122,[[5,[24,25]]]],[26,[[5,[24,25]]]],[26,[[5,[24,25]]]],[26,[[5,[24,25]]]],[26,[[5,[24,25]]]],[26,[[5,[24,25]]]],[26,[[5,[24,25]]]],[26,[[5,[24,25]]]],[26,[[5,[24,25]]]],[26,[[5,[24,25]]]],[26,[[5,[24,25]]]],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[[111,35],36],[[111,35],36],[[113,35],36],[[114,35],36],[[115,35],36],[[116,35],36],[[117,35],36],[[118,35],36],[[119,35],36],[[120,35],36],[[121,35],36],[[122,35],36],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[21,[[5,[44]]]],[21,[[5,[44]]]],[21,[[5,[44]]]],[21,[[5,[44]]]],[21,[[5,[44]]]],[21,[[5,[44]]]],[21,[[5,[44]]]],[21,[[5,[44]]]],[21,[[5,[44]]]],[21,[[5,[44]]]],[21,[[5,[44]]]],[21,[[5,[44]]]],[21,[[5,[44]]]],[21,[[5,[44]]]],[21,[[5,[44]]]],[21,[[5,[44]]]],[21,[[5,[44]]]],[21,[[5,[44]]]],[21,[[5,[44]]]],[21,[[5,[44]]]],[[112,24],[[48,[111]]]],0,[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],112],[112,24],0,[112,48],[112,48],[[112,24],48],[113,5],[115,5],[117,5],[119,5],[121,5],[112],[[],[[30,[68,69]]]],[[],[[30,[68,69]]]],[[],[[30,[68,69]]]],[[],[[30,[68,69]]]],[[],[[30,[68,69]]]],[[],[[30,[68,69]]]],[[],[[30,[68,69]]]],[[],[[30,[68,69]]]],[[],[[30,[68,69]]]],[[],[[30,[68,69]]]],[[],[[30,[68,69]]]],[[],[[30,[68,69]]]],[[],[[30,[68,69]]]],[[],[[30,[68,69]]]],[[],[[30,[68,69]]]],[[],[[30,[68,69]]]],[[],[[30,[68,69]]]],[[],[[30,[68,69]]]],[[],[[30,[68,69]]]],[[],[[30,[68,69]]]],[[]],[[]],[[],47],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],[108,123],[108,108],[[]],[21,[[5,[108,23]]]],[21,[[5,[49,23]]]],[108,[[5,[24,25]]]],[49,[[5,[24,25]]]],[26,[[5,[24,25]]]],[26,[[5,[24,25]]]],0,[49,3],[24],[24],[24],[24],[24],[24],[[108,35],36],[[49,35],36],[[]],[[]],[21,[[5,[44]]]],[21,[[5,[44]]]],[[],24],[[],24],[[]],[[]],0,0,[49,5],[[],[[30,[68,69]]]],[[],[[30,[68,69]]]],[[]],[[],5],[[],5],[[],5],[[],5],[[],70],[[],70],[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],[[33,15],123],[33,33],[[]],[21,[[5,[105,23]]]],[21,[[5,[33,23]]]],[105,[[5,[24,25]]]],[33,[[5,[24,25]]]],[26,[[5,[24,25]]]],[26,[[5,[24,25]]]],0,0,[24],[24],[24],[24],[24],[24],[[105,35],36],[[33,35],36],[[]],[[]],[21,[[5,[44]]]],[21,[[5,[44]]]],[[],24],[[],24],[[]],[[]],0,[33,123],[105,5],[33,5],[[],[[30,[68,69]]]],[[],[[30,[68,69]]]],[[]],[[],5],[[],5],[[],5],[[],5],[[],70],[[],70],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[124],[124,10],[54,125],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[54,54],[124,124],[126,126],[127,127],[19,19],[[]],[[]],[[]],[[]],[[]],[[124,124],128],[127,17],[127,24],[54,[[20,[19]]]],0,0,[21,[[5,[124,23]]]],[21,[[5,[126,23]]]],[21,[[5,[127,23]]]],[21,[[5,[19,23]]]],[124,[[5,[24,25]]]],[126,[[5,[24,25]]]],[127,[[5,[24,25]]]],[19,[[5,[24,25]]]],[26,[[5,[24,25]]]],[26,[[5,[24,25]]]],[26,[[5,[24,25]]]],[26,[[5,[24,25]]]],0,[[54,17]],0,[54],[[],124],[[],127],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[[],[[5,[124]]]],[[],[[5,[126]]]],[[],[[5,[127]]]],[[],[[5,[19]]]],[129,[[5,[130]]]],[54,[[125,[[48,[131]]]]]],[24],[24],[24],[24],[24],[24],[24],[[[20,[19]]],[[5,[43]]]],0,[[124,124],28],[[126,126],28],[[127,127],28],[[19,19],28],[[],28],[[],28],[[],28],[[],28],[[127,132]],[54,[[30,[[5,[12,43]]]]]],[[54,103,12],[[5,[43]]]],[[54,[133,[10]],[134,[[75,[32]]]],135]],[[126,136,137],[[5,[19,138]]]],[[127,139,140],[[5,[[20,[19]],138]]]],[[54,95,[30,[17]]]],[[54,35],36],[[124,35],36],[[124,35],36],[[126,35],36],[[127,35],36],[[19,35],36],[[138,35],36],[[138,35],36],[[43,35],36],[[43,35],36],[[]],[[]],[[]],[[]],[[]],[38,138],[[]],[138,43],[37,43],[[]],[21,[[5,[44]]]],[21,[[5,[44]]]],[21,[[5,[44]]]],[21,[[5,[44]]]],[10,124],[[54,103],[[20,[19]]]],[54,141],[51,141],[54,130],[51,130],[[54,103,17],124],[19],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[54,110],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[43,28],[54,30],[[56,51]],[[54,56,17]],[[54,17],51],[[51,17,124],51],[124,124],[126,142],0,[54,110],[[124,124],[[48,[128]]]],[54,[[125,[143]]]],[54,[[125,[131]]]],[64],[64],[[54,17,103]],[126,60],[[54,144,131,24],[[125,[[146,[145]]]]]],[[54,24,144],[[125,[146]]]],0,[[54,17],[[5,[[20,[19]],43]]]],[[54,17],[[5,[43]]]],[124,5],[126,5],[127,5],[19,5],[43,[[48,[65]]]],0,0,[54,103],[[],[[30,[68,69]]]],[[],[[30,[68,69]]]],[[],[[30,[68,69]]]],[[],[[30,[68,69]]]],[[]],[[]],[[]],[[]],[[]],[[],47],[[],47],[[],47],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[54,143],125],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[54,125],[103,125],0,0,0,0,[[147,17]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[21,[[5,[131,23]]]],[131,[[5,[24,25]]]],[26,[[5,[24,25]]]],[[],[[125,[131]]]],[[143,141],[[125,[131]]]],[24],[24],[24],[24],[24],[24],[24],[24],[[],[[5,[131]]]],[24],[24],[24],[24],[131,[[125,[[30,[68]]]]]],[[131,141],[[125,[143]]]],0,[[131,131],28],[[],28],[[147,17]],[147,145],[[131,35],36],[[145,35],36],[[147,35],36],[[]],[[]],[[]],[[]],[[131,51,24,[140,[137]],[149,[90,[140,[148]]]]],147],[21,[[5,[44]]]],0,[24,24],[[147,90,150]],[[147,151]],[[147,12,152]],[[147,90,153]],[[],24],[[],24],[[],24],[[],24],[[]],[[]],[[]],[[]],[[143,130],[[125,[96]]]],0,[[],131],0,0,0,0,[[147,17,124]],0,0,0,0,0,[131,5],0,0,0,0,[[],[[30,[68,69]]]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],70],[[],70],[[],70],[[],70],0,[[]],[[]],[[]],[[]],0,0,0,0,[154,155],[141,155],0,[[],156],[157],[[],24],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[5,[[30,[158,69]]]]]],0,[141,125],[24],[24],[24],[24],[24],[24],[24],[24],[24],[[],157],[[]],[[]],[[[30,[68]],141],[[125,[[30,[68]]]]]],[[154,35],[[5,[159]]]],[[141,35],[[5,[159]]]],[[]],[[],157],[[]],[[[160,[155]]],154],[[]],[[],161],[[],24],[[],24],[[],24],0,[[]],[[]],[[]],0,[155,[[5,[154,162]]]],[154,141],[[141,161,157],[[5,[162]]]],[[141,161,157,[163,[24]]],[[5,[162]]]],[[141,161,157],[[5,[162]]]],[[141,161,157],[[5,[162]]]],[[141,161,157],[[5,[164,162]]]],[[],[[5,[156,165]]]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],70],[[],70],[[],70],[[]],[[]],[[]],[[],5],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[166,166],[167,167],[168,168],[169,169],[170,170],[171,171],[172,172],[173,173],[174,174],[175,175],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[21,[[5,[168,23]]]],[21,[[5,[169,23]]]],[21,[[5,[170,23]]]],[21,[[5,[171,23]]]],[21,[[5,[172,23]]]],[21,[[5,[173,23]]]],[21,[[5,[174,23]]]],[21,[[5,[175,23]]]],[168,[[5,[24,25]]]],[169,[[5,[24,25]]]],[170,[[5,[24,25]]]],[171,[[5,[24,25]]]],[172,[[5,[24,25]]]],[173,[[5,[24,25]]]],[174,[[5,[24,25]]]],[175,[[5,[24,25]]]],[26,[[5,[24,25]]]],[26,[[5,[24,25]]]],[26,[[5,[24,25]]]],[26,[[5,[24,25]]]],[26,[[5,[24,25]]]],[26,[[5,[24,25]]]],[26,[[5,[24,25]]]],[26,[[5,[24,25]]]],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[[],[[5,[172]]]],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[[172,172],28],[[],28],[[166,35],36],[[166,35],36],[[168,35],36],[[169,35],36],[[170,35],36],[[171,35],36],[[172,35],36],[[173,35],36],[[174,35],36],[[175,35],36],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[21,[[5,[44]]]],[21,[[5,[44]]]],[21,[[5,[44]]]],[21,[[5,[44]]]],[21,[[5,[44]]]],[21,[[5,[44]]]],[21,[[5,[44]]]],[21,[[5,[44]]]],[21,[[5,[44]]]],[21,[[5,[44]]]],[21,[[5,[44]]]],[21,[[5,[44]]]],[21,[[5,[44]]]],[21,[[5,[44]]]],[21,[[5,[44]]]],[21,[[5,[44]]]],[[167,24],[[48,[166]]]],0,[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],167],[167,24],0,[167,48],[167,48],0,[[167,24],48],[168,5],[170,5],[172,5],[175,5],[167],[[],[[30,[68,69]]]],[[],[[30,[68,69]]]],[[],[[30,[68,69]]]],[[],[[30,[68,69]]]],[[],[[30,[68,69]]]],[[],[[30,[68,69]]]],[[],[[30,[68,69]]]],[[],[[30,[68,69]]]],[[],[[30,[68,69]]]],[[],[[30,[68,69]]]],[[],[[30,[68,69]]]],[[],[[30,[68,69]]]],[[],[[30,[68,69]]]],[[],[[30,[68,69]]]],[[],[[30,[68,69]]]],[[],[[30,[68,69]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],47],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[31,24],176],[24,177],[24,178],[24,179],[24,180],[94,181],[[182,94],181],[[176,[94,[32]]],[[181,[32]]]],[[[177,[[0,[83,183,9]]]],[94,[[30,[[0,[83,183,9]]]]]]],[[181,[[30,[[0,[83,183,9]]]]]]]],[[[178,[[0,[83,183,9]]]],[94,[[0,[83,183,9]]]]],[[181,[[0,[83,183,9]]]]]],[[[179,[[0,[183,9,83]]]],[94,[[0,[183,9,83]]]]],[[181,[[0,[183,9,83]]]]]],[[[180,[[0,[183,9,83]]]],[94,[[0,[183,9,83]]]]],[[181,[[0,[183,9,83]]]]]],0,0,0,0,0,[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[51,184],51],[184,184],[51,51],[[]],[[]],[21,[[5,[184,23]]]],[184,[[5,[24,25]]]],[26,[[5,[24,25]]]],[24],[24],[24],[24],[24],[24],[[184,35],36],[[51,35],36],[[]],[[]],[21,[[5,[44]]]],[[],24],[[],24],[[]],[[]],0,[51,24],0,[[],51],[184],[51,185],[[],[[30,[68,69]]]],[51,154],[[]],[[]],[[51,56],130],[[],5],[[],5],[[],5],[[],5],[[],70],[[],70],[[]],[[]],[[],[[5,[130]]]],[130,5],0,0,[[]],[[]],[[66,2,[0,[13,14]]],95],[[66,54,[0,[13,14]],[30,[17]],56],95],[[66,2],17],[[],66],[24],[24],[24],[[66,2],17],[[]],[[],24],[[66,30,186]],[[66,2],17],[[66,2],187],[[]],[[],28],0,[[66,188],10],[[66,2],17],[[66,2],187],[[],5],[[],5],0,[[],70],[[]],0,0,[[]],[[]],0,[24],[24],[24],[[189,35],36],[[]],[45,[[5,[190,191]]]],[[],24],[[]],[192,193],[45,[[5,[57,194]]]],[45,[[125,[[20,[19]]]]]],[45,[[5,[17,195]]]],[45,[[5,[67,196]]]],0,[20,47],[[],5],[[],5],[[],70],[[]],0,0,0,0,0,0,0,[[71,12],[[5,[197,42]]]],[[]],[[]],[[]],[[]],0,0,[[71,61,62],[[5,[42]]]],0,[71],[24],[24],[24],[24],[24],[24],[[71,35],36],[[42,35],36],[[42,35],36],[[]],[37,42],[[]],[[71,103,[0,[13,14]]],50],[[],24],[[],24],[71,110],[[]],[[]],[71,110],[64],[42,[[48,[65]]]],[[],47],[[],5],[[],5],[[],5],[[],5],[[],70],[[],70],[[]],[[]],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[198,198],[199,199],[200,200],[201,201],[[]],[[]],[[]],[[]],[21,[[5,[200,23]]]],[21,[[5,[201,23]]]],[200,[[5,[24,25]]]],[201,[[5,[24,25]]]],[26,[[5,[24,25]]]],[26,[[5,[24,25]]]],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[[198,35],36],[[198,35],36],[[200,35],36],[[201,35],36],[[]],[[]],[[]],[[]],[21,[[5,[44]]]],[21,[[5,[44]]]],[21,[[5,[44]]]],[21,[[5,[44]]]],[[199,24],[[48,[198]]]],0,[[],24],[[],24],[[],24],[[],24],[[]],[[]],[[]],[[]],[[]],[[],199],[199,24],0,[199,48],[199,48],[[199,24],48],0,[200,5],[199],[[],[[30,[68,69]]]],[[],[[30,[68,69]]]],[[],[[30,[68,69]]]],[[],[[30,[68,69]]]],[[]],[[]],[[]],[[]],[[],47],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],70],[[],70],[[],70],[[],70],[[]],[[]],[[]],[[]]],"p":[[3,"GatewayClientConfig"],[3,"Client"],[3,"ContractId"],[4,"ClientError"],[4,"Result"],[3,"UserClientConfig"],[3,"ClientConfig"],[8,"AsRef"],[8,"Clone"],[15,"u64"],[3,"Elapsed"],[3,"OutPoint"],[8,"RngCore"],[8,"CryptoRng"],[3,"Preimage"],[3,"Hash"],[3,"Amount"],[3,"FederationId"],[3,"SpendableNote"],[3,"TieredMulti"],[3,"ModuleDecoderRegistry"],[3,"ClientSecret"],[3,"DecodeError"],[15,"usize"],[3,"Error"],[8,"Write"],[3,"Database"],[15,"bool"],[3,"LightningGateway"],[3,"Vec"],[3,"PublicKey"],[3,"EpochHistory"],[3,"OutgoingContractAccount"],[3,"PaymentParameters"],[3,"Formatter"],[6,"Result"],[4,"ApiError"],[3,"InvalidAmountTierError"],[4,"CreationError"],[4,"LnClientError"],[3,"Error"],[4,"WalletClientError"],[4,"MintClientError"],[4,"DecodingError"],[15,"str"],[3,"Invoice"],[3,"String"],[4,"Option"],[3,"ConfirmedInvoice"],[3,"Address"],[3,"DerivableSecret"],[3,"LnClient"],[15,"f64"],[3,"MintClient"],[4,"All"],[3,"Secp256k1"],[3,"Amount"],[3,"PegOut"],[3,"FederationApi"],[3,"BlindNonce"],[3,"TxOutProof"],[3,"Transaction"],[3,"TransactionId"],[3,"Demand"],[8,"Error"],[3,"TransactionBuilder"],[3,"PublicKey"],[15,"u8"],[3,"Global"],[3,"TypeId"],[3,"WalletClient"],[3,"Duration"],[8,"TryIntoOutcome"],[8,"Send"],[6,"Result"],[3,"Url"],[8,"Future"],[3,"Box"],[3,"Pin"],[3,"WsFederationConnect"],[3,"XOnlyPublicKey"],[8,"JsonRpcClient"],[8,"Debug"],[8,"Sync"],[3,"WsFederationApi"],[3,"FederationMember"],[4,"CoreError"],[4,"Error"],[3,"Client"],[3,"PeerId"],[8,"Serialize"],[8,"DeserializeOwned"],[8,"QueryStrategy"],[3,"FedResponse"],[3,"Transaction"],[3,"SignedBackupRequest"],[4,"DbKeyPrefix"],[3,"DbKeyPrefixIter"],[3,"ClientSecretKey"],[6,"Result"],[3,"Signature"],[4,"LightningOutput"],[3,"DatabaseTransaction"],[15,"u32"],[3,"OutgoingContractData"],[3,"PayInvoicePayload"],[3,"ContractAccount"],[3,"IncomingContractAccount"],[3,"IncomingContractOffer"],[3,"TransactionItemAmount"],[4,"DbKeyPrefix"],[3,"DbKeyPrefixIter"],[3,"OutgoingPaymentKey"],[3,"OutgoingPaymentKeyPrefix"],[3,"OutgoingPaymentClaimKey"],[3,"OutgoingPaymentClaimKeyPrefix"],[3,"OutgoingContractAccountKey"],[3,"OutgoingContractAccountKeyPrefix"],[3,"ConfirmedInvoiceKey"],[3,"ConfirmedInvoiceKeyPrefix"],[3,"LightningGatewayKey"],[3,"LightningGatewayKeyPrefix"],[3,"LightningInput"],[3,"NoteIndex"],[6,"Result"],[3,"NoteIssuanceRequest"],[3,"NoteIssuanceRequests"],[4,"Ordering"],[8,"Deserializer"],[3,"KeyPair"],[3,"PlaintextEcashBackup"],[8,"IntoIterator"],[3,"RangeInclusive"],[3,"Sender"],[3,"TaskHandle"],[3,"BlindedSignature"],[3,"AggregatePublicKey"],[4,"CoinFinalizationError"],[3,"OutputOutcome"],[3,"Tiered"],[3,"LessSafeKey"],[3,"Nonce"],[3,"EcashBackup"],[3,"TaskGroup"],[3,"EcashRecoveryFinalState"],[6,"Cancellable"],[3,"EcashRecoveryTracker"],[3,"PublicKeyShare"],[3,"BTreeMap"],[4,"ConsensusItem"],[3,"MintInput"],[3,"MintOutput"],[3,"MintOutputConfirmation"],[3,"UnboundKey"],[3,"Algorithm"],[3,"BitSlice"],[3,"Aad"],[3,"u5"],[3,"Error"],[3,"Okm"],[3,"Nonce"],[3,"Unspecified"],[3,"RangeFrom"],[3,"Tag"],[4,"BitSpanError"],[4,"DbKeyPrefix"],[3,"DbKeyPrefixIter"],[3,"CoinKey"],[3,"CoinKeyPrefix"],[3,"PendingCoinsKey"],[3,"PendingCoinsKeyPrefix"],[3,"OutputFinalizationKey"],[3,"OutputFinalizationKeyPrefix"],[3,"NextECashNoteIndexKeyPrefix"],[3,"NextECashNoteIndexKey"],[3,"ValidHistory"],[3,"UnionResponses"],[3,"Retry404"],[3,"EventuallyConsistent"],[3,"CurrentConsensus"],[4,"QueryStep"],[3,"TrustAllPeers"],[8,"Eq"],[3,"ChildId"],[3,"Scalar"],[4,"Input"],[8,"Iterator"],[4,"Output"],[3,"ClientContext"],[8,"Decodable"],[3,"Error"],[4,"Network"],[4,"Currency"],[4,"ParseAmountError"],[4,"ParseAmountError"],[4,"Error"],[3,"Txid"],[4,"DbKeyPrefix"],[3,"DbKeyPrefixIter"],[3,"PegInKey"],[3,"PegInPrefixKey"],[8,"IFederationApi"],[8,"Final"]]},\
"tbs":{"doc":"Threshold Blind Signatures","t":[8,16,3,3,3,3,3,8,3,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,0,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,17,5,5,3,12,11,11,11,12,11,11,11,11,5,11,11,11,11,11,11,0,0,14,0,5,5,5,5,5,5],"n":["Aggregatable","Aggregate","AggregatePublicKey","BlindedMessage","BlindedSignature","BlindedSignatureShare","BlindingKey","FromRandom","Message","MessagePoint","PubKeyPoint","PublicKeyShare","Scalar","SecretKeyShare","Signature","add","add","add","add","add","add","add","add","add","add","add","add","add","add_assign","add_assign","aggregate","blind_message","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","char_le_bits","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","combine_valid_shares","conditional_negate","conditional_negate","conditional_negate","conditional_select","conditional_select","conditional_select","ct_eq","ct_eq","ct_eq","dealer_keygen","default","default","default","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","double","double","encode_compressed","encode_compressed","encode_compressed","encode_compressed","encode_compressed","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes_unchecked","from_bytes_unchecked","from_bytes_wide","from_compressed","from_compressed","from_compressed_unchecked","from_compressed_unchecked","from_hash","from_random","from_random","from_raw","from_repr","from_uncompressed","from_uncompressed","from_uncompressed","from_uncompressed","from_uncompressed_unchecked","from_uncompressed_unchecked","from_uncompressed_unchecked","from_uncompressed_unchecked","generator","generator","generator","generator","hash","hash","hash","hash","hash","hash","hash","identity","identity","identity","identity","infinity","infinity","into","into","into","into","into","into","into","into","into","into","into","into","invert","invert","is_identity","is_identity","is_identity","is_identity","is_odd","is_on_curve","is_on_curve","is_torsion_free","is_torsion_free","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul_assign","mul_assign","multiplicative_generator","neg","neg","neg","neg","neg","neg","neg","one","one","pairing_with","pairing_with","point_impl","poly","pow","pow_vartime","random","random","root_of_unity","serde_impl","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","sign_blinded_msg","sqrt","sqrt","square","square","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","sum","to_bytes","to_bytes","to_bytes","to_compressed","to_compressed","to_curve","to_curve","to_le_bits","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_pub_key_share","to_repr","to_string","to_string","to_string","to_uncompressed","to_uncompressed","to_uncompressed","to_uncompressed","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unblind_signature","verify","verify_blind_share","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","x","x","y","y","zero","zero","zeroize","zeroize","zeroize","HASH_TAG","hash_bytes_to_curve","hash_to_curve","Poly","_pd","borrow","borrow_mut","coefficients","coefficients","evaluate","fmt","from","from","interpolate_zero","into","random","try_from","try_into","type_id","vzip","g1","g2","impl_serde_g","scalar","deserialize","serialize","deserialize","serialize","deserialize","serialize"],"q":["tbstbs::hash","","","tbs::poly","","","","","","","","","","","","","","","","","tbs::serde_impl","","","","tbs::serde_impl::g1","","tbs::serde_impl::g2","","tbs::serde_impl::scalar",""],"d":["","","","","","","","","","This is an element of $\\\\mathbb{G}_1$ represented in the …","This is an element of $\\\\mathbb{G}_2$ represented in the …","","Represents an element of the scalar field $\\\\mathbb{F}_q$ …","","","Adds <code>rhs</code> to <code>self</code>, returning the result.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Combines a sufficent amount of valid blinded signature …","","","","","","","","","","<code>threshold</code>: how many signature shares are needed to produce …","","","","","","","","","","","","","","Doubles this field element.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Attempts to convert a little-endian byte representation of …","","","","","Converts a 512-bit little endian integer into a <code>Scalar</code> by …","Attempts to deserialize a compressed element. See …","Attempts to deserialize a compressed element. See …","Attempts to deserialize an uncompressed element, not …","Attempts to deserialize an uncompressed element, not …","<strong>IMPORTANT</strong>: <code>from_bytes</code> includes a tag in the hash, this …","","","Converts from an integer represented in little endian into …","","","Attempts to deserialize an uncompressed element. See …","","Attempts to deserialize an uncompressed element. See …","","Attempts to deserialize an uncompressed element, not …","","Attempts to deserialize an uncompressed element, not …","Returns a fixed generator of the group. See <code>notes::design</code> …","","Returns a fixed generator of the group. See <code>notes::design</code> …","","","","","","","","","","Returns the identity of the group: the point at infinity.","Returns the identity of the group: the point at infinity.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Computes the multiplicative inverse of this element, …","","Returns true if this element is the identity (the point at …","Returns true if this element is the identity (the point at …","","","Returns true if this point is on the curve. This should …","Returns true if this point is on the curve. This should …","Returns true if this point is free of an $h$-torsion …","Returns true if this point is free of an $h$-torsion …","Multiplies <code>rhs</code> by <code>self</code>, returning the result.","","","","","","","","","","","","","","","","","Negates <code>self</code>.","","","","","","Returns one, the multiplicative identity.","","","","","","Exponentiates <code>self</code> by <code>by</code>, where <code>by</code> is a little-endian …","Exponentiates <code>self</code> by <code>by</code>, where <code>by</code> is a little-endian …","","","","","","","","","","","","","","","","Computes the square root of this element, if it exists.","Squares this element.","","","","Subtracts <code>rhs</code> from <code>self</code>, returning the result.","","","","","","","","","","","","","","Converts an element of <code>Scalar</code> into a byte representation in","","","Serializes this element into compressed form. See …","Serializes this element into compressed form. See …","","","","","","","","","","","","","","","","","","","","","Serializes this element into uncompressed form. See …","","Serializes this element into uncompressed form. See …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns zero, the additive identity.","","","","","","<strong>IMPORTANT</strong>: the byte hashing fn includes a tag, this doesn…","","","","","","","","","Returns the argument unchanged.","","Interpolates the constant factor of a polynomial defined …","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","",""],"i":[0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,2,2,2,2,4,4,4,4,1,1,40,0,12,13,14,8,9,15,16,17,7,1,2,4,12,13,14,8,9,15,16,17,7,1,2,4,1,12,13,14,8,9,15,16,17,7,1,2,4,12,13,14,8,9,15,16,17,7,1,2,4,0,1,2,4,1,2,4,1,2,4,0,1,2,4,12,13,14,8,9,15,16,17,7,1,1,9,15,16,17,7,12,13,14,8,9,15,16,17,7,1,2,4,12,13,14,8,9,15,16,17,7,1,1,2,2,4,4,12,13,14,8,9,15,16,17,7,1,1,2,2,2,4,4,4,7,1,2,4,2,4,1,2,4,2,4,7,41,1,1,1,2,2,4,4,2,2,4,4,2,2,4,4,0,14,9,15,16,17,7,2,2,4,4,2,4,12,13,14,8,9,15,16,17,7,1,2,4,1,1,2,2,4,4,1,2,4,2,4,1,1,1,1,1,2,2,2,2,4,4,4,4,1,1,1,1,1,1,2,2,4,4,1,1,2,4,0,0,1,1,8,1,1,0,12,13,14,8,9,15,16,17,7,0,1,1,1,1,1,1,1,1,1,2,2,2,2,4,4,4,4,1,1,1,1,2,4,2,4,2,4,1,12,13,14,8,9,15,16,17,7,1,2,4,13,1,1,2,4,2,2,4,4,12,13,14,8,9,15,16,17,7,1,2,4,12,13,14,8,9,15,16,17,7,1,2,4,12,13,14,8,9,15,16,17,7,1,2,4,0,0,0,12,13,14,8,9,15,16,17,7,1,2,4,2,4,2,4,1,1,1,2,4,0,0,0,0,31,31,31,31,31,31,31,31,31,0,31,31,31,31,31,31,0,0,0,0,0,0,0,0,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,1],1],[[1,1],1],[[1,1],1],[[1,1],1],[[1,1],1],[[2,3],3],[[2,3],3],[[2,3],3],[[2,3],3],[[4,5],5],[[4,5],5],[[4,5],5],[[4,5],5],[[1,1]],[[1,1]],[6],[[7,8],9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[11,[10]]]],[12,12],[13,13],[14,14],[8,8],[9,9],[15,15],[16,16],[17,17],[7,7],[1,1],[2,2],[4,4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[6,16],[18],[18],[18],[[1,1,18],1],[[2,2,18],2],[[4,4,18],4],[[1,1],18],[[2,2],18],[[4,4],18],[[6,6]],[[],1],[[],2],[[],4],[[],[[19,[12]]]],[[],[[19,[13]]]],[[],[[19,[14]]]],[[],[[19,[8]]]],[[],[[19,[9]]]],[[],[[19,[15]]]],[[],[[19,[16]]]],[[],[[19,[17]]]],[[],[[19,[7]]]],[1,1],[1,1],[9],[15],[16],[17],[7],[[12,12],20],[[13,13],20],[[14,14],20],[[8,8],20],[[9,9],20],[[15,15],20],[[16,16],20],[[17,17],20],[[7,7],20],[[1,1],20],[[2,2],20],[[4,4],20],[[12,21],22],[[13,21],22],[[14,21],22],[[8,21],22],[[9,21],22],[[15,21],22],[[16,21],22],[[17,21],22],[[7,21],22],[[1,21],[[19,[23]]]],[[1,21],[[19,[23]]]],[[2,21],[[19,[23]]]],[[2,21],[[19,[23]]]],[[4,21],[[19,[23]]]],[[4,21],[[19,[23]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[24,1],[3,2],[3,2],[[]],[[]],[5,4],[5,4],[[],7],[[],[[25,[1]]]],[[],[[25,[2]]]],[[],[[25,[4]]]],[[],[[25,[2]]]],[[],[[25,[4]]]],[[],1],[[],[[25,[2]]]],[[],[[25,[4]]]],[[],[[25,[2]]]],[[],[[25,[4]]]],[26,7],[[]],[[],1],[[],1],[[],[[25,[1]]]],[[],[[25,[2]]]],[[],[[25,[2]]]],[[],[[25,[4]]]],[[],[[25,[4]]]],[[],[[25,[2]]]],[[],[[25,[2]]]],[[],[[25,[4]]]],[[],[[25,[4]]]],[[],2],[[],2],[[],4],[[],4],0,[14],[9],[15],[16],[17],[7],[[],2],[[],2],[[],4],[[],4],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,[[25,[1]]]],[1,[[25,[1]]]],[2,18],[2,18],[4,18],[4,18],[1,18],[2,18],[4,18],[2,18],[4,18],[[1,1],1],[[1,1],1],[[1,1],1],[[1,1],1],[[1,1],1],[[2,1],3],[[2,1],3],[[2,1],3],[[2,1]],[[4,1],5],[[4,1]],[[4,1],5],[[4,1],5],[[1,1]],[[1,1]],[[],1],[1,1],[1,1],[1,1],[2,2],[2,2],[4,4],[4,4],[[],1],[[],1],[2],[4],0,0,[1,1],[1,1],[[],8],[27,1],[[],1],0,[12,19],[13,19],[14,19],[8,19],[9,19],[15,19],[16,19],[17,19],[7,19],[[9,13],15],[1,[[25,[1]]]],[1,[[25,[1]]]],[1,1],[1,1],[[1,1],1],[[1,1],1],[[1,1],1],[[1,1],1],[[1,1],1],[[2,3],3],[[2,3],3],[[2,3],3],[[2,3],3],[[4,5],5],[[4,5],5],[[4,5],5],[[4,5],5],[[1,1]],[[1,1]],[[],1],[1],[2],[4],[2],[4],[2],[4],[1,[[11,[10]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[13,12],[1],[[],28],[[],28],[[],28],[2],[2],[4],[4],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[8,16],17],[[7,17,14],20],[[9,15,12],20],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[],1],[[],1],[[]],[[]],[[]],0,[[],30],[26,30],0,0,[[]],[[]],[31,32],0,[[31,33]],[[[31,[34]],21],22],[[]],[35,31],[[[0,[36,37]]]],[[]],[6,31],[[],19],[[],19],[[],29],[[]],0,0,0,0,[38,[[19,[2]]]],[[2,39],19],[38,[[19,[4]]]],[[4,39],19],[38,[[19,[1]]]],[[1,39],19]],"p":[[3,"Scalar"],[3,"MessagePoint"],[3,"G1Projective"],[3,"PubKeyPoint"],[3,"G2Projective"],[15,"usize"],[3,"Message"],[3,"BlindingKey"],[3,"BlindedMessage"],[3,"Lsb0"],[3,"BitArray"],[3,"PublicKeyShare"],[3,"SecretKeyShare"],[3,"AggregatePublicKey"],[3,"BlindedSignatureShare"],[3,"BlindedSignature"],[3,"Signature"],[3,"Choice"],[4,"Result"],[15,"bool"],[3,"Formatter"],[6,"Result"],[3,"Error"],[15,"u64"],[3,"CtOption"],[8,"Digest"],[8,"RngCore"],[3,"String"],[3,"TypeId"],[8,"Group"],[3,"Poly"],[3,"Iter"],[8,"Into"],[8,"Debug"],[3,"Vec"],[8,"Iterator"],[8,"Clone"],[8,"Deserializer"],[8,"Serializer"],[8,"Aggregatable"],[8,"FromRandom"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
